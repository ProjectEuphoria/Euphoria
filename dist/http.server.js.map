{"version":3,"sources":["../src/agents/version.ts","../src/mcp/toolsets/localContext.ts","../src/mcp/toolsets/search.ts","../src/mcp/toolsets/knowledge.ts","../src/mcp/toolsets/visuals.ts","../src/mcp/toolsets/music.ts","../src/mcp/toolsets/emotion.ts","../src/mcp/toolsets/journal.ts","../src/mcp/toolsets/trends.ts","../src/mcp/toolsets/quotes.ts","../src/mcp/utils/http.ts","../src/mcp/toolsets/summarizer.ts","../src/mcp/saveJournalEntry.ts","../src/mcp/toolsets/wellness.ts","../src/mcp/toolsets/personaTelegram.ts","../src/mcp/toolsets/personaDiscord.ts","../src/mcp/toolsets/index.ts","../src/mcp/registry.ts","../src/mcp/index.ts","../src/agents/sharedTools.ts","../src/agents/toolGuidance.ts","../src/agents/Helena/agent.ts","../src/agents/Milo/agent.ts","../src/agents/Kai/agent.ts","../src/agents/Sophie/agent.ts","../src/agents/Luna/agent.ts","../src/api/http.server.ts","../src/api/adapters/runner-adapter.ts","../src/api/auth/signup.ts","../src/db.ts","../src/api/auth/signin.ts","../src/api/auth/check.ts","../src/api/auth/logout.ts","../src/api/tts/route.ts","../src/api/tts/polly.ts","../src/api/tts/config.ts","../src/api/tts/processor.ts","../src/api/tts/cache.ts"],"sourcesContent":["export const PERSONA_TOOLKIT_VERSION = \"2025-02-12b\";\n","import path from \"node:path\";\nimport fs from \"node:fs/promises\";\nimport { McpToolset } from \"@iqai/adk\";\n\nexport const journalRoot = path.resolve(process.cwd(), \"data/journal\");\nconst ensureJournalDir = fs\n  .mkdir(journalRoot, { recursive: true })\n  .catch((error) => {\n    console.error(\"[MCP] Failed to create journal directory\", error);\n    throw error;\n  });\n\nexport const filesystemToolset = new McpToolset({\n  name: \"filesystem-journal\",\n  description: \"Local journaling store used for user reflections and offline memory.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\n      \"-y\",\n      \"@modelcontextprotocol/server-filesystem\",\n      journalRoot,\n    ],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getFilesystemTools() {\n  await ensureJournalDir;\n  return filesystemToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/webSearch.server.ts\");\n\nexport const webSearchToolset = new McpToolset({\n  name: \"web-search\",\n  description: \"Search and discovery via DuckDuckGo Instant Answer API.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getWebSearchTools() {\n  return webSearchToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/wikipedia.server.ts\");\n\nexport const wikipediaToolset = new McpToolset({\n  name: \"wikipedia-knowledge\",\n  description: \"Knowledge grounding via Wikipedia summaries and search.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getWikipediaTools() {\n  return wikipediaToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/unsplash.server.ts\");\n\nexport const unsplashToolset = new McpToolset({\n  name: \"unsplash-visuals\",\n  description: \"Curate Unsplash imagery for mood-based backgrounds and cards.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n      UNSPLASH_ACCESS_KEY: process.env.UNSPLASH_ACCESS_KEY ?? \"\",\n    },\n  },\n});\n\nexport async function getUnsplashTools() {\n  return unsplashToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/spotify.server.ts\");\n\nexport const spotifyToolset = new McpToolset({\n  name: \"spotify-mood\",\n  description: \"Mood-aware Spotify playlists and tracks.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n      SPOTIFY_CLIENT_ID: process.env.SPOTIFY_CLIENT_ID ?? \"\",\n      SPOTIFY_CLIENT_SECRET: process.env.SPOTIFY_CLIENT_SECRET ?? \"\",\n    },\n  },\n});\n\nexport async function getSpotifyTools() {\n  return spotifyToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/emotion.server.ts\");\n\nexport const emotionToolset = new McpToolset({\n  name: \"emotion-analytics\",\n  description: \"Lightweight sentiment and tone analytics for reflections.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getEmotionTools() {\n  return emotionToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\nimport { journalRoot } from \"./localContext\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/journal.server.ts\");\n\nexport const journalingToolset = new McpToolset({\n  name: \"journal-reflection\",\n  description: \"Reflection prompts and storage helpers on top of local journal.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n      JOURNAL_ROOT: journalRoot,\n    },\n  },\n});\n\nexport async function getJournalingTools() {\n  return journalingToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/trends.server.ts\");\n\nexport const trendsToolset = new McpToolset({\n  name: \"google-trends\",\n  description: \"Google Trends insights for wellness and productivity topics.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getTrendsTools() {\n  return trendsToolset.getTools();\n}\n","import path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { McpToolset } from \"@iqai/adk\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst serverPath = path.resolve(__dirname, \"../servers/quotes.server.ts\");\n\nexport const quotesToolset = new McpToolset({\n  name: \"zenquotes-feed\",\n  description: \"Positive affirmations and quotes for uplifting replies.\",\n  debug: false,\n  transport: {\n    mode: \"stdio\",\n    command: \"npx\",\n    args: [\"-y\", \"tsx\", serverPath],\n    env: {\n      PATH: process.env.PATH ?? \"\",\n    },\n  },\n});\n\nexport async function getQuotesTools() {\n  return quotesToolset.getTools();\n}\n","const DEFAULT_TIMEOUT_MS = 8000;\nconst BODY_SNIPPET_LENGTH = 140;\n\nexport type FetchWithTimeoutOptions = RequestInit & {\n  timeoutMs?: number;\n};\n\n/**\n * Wraps the native fetch with an AbortController-based timeout.\n * Provides consistent error messaging for production use.\n */\nexport async function fetchWithTimeout(\n  input: string | URL | Request,\n  { timeoutMs = DEFAULT_TIMEOUT_MS, signal, ...rest }: FetchWithTimeoutOptions = {},\n): Promise<Response> {\n  const controller = new AbortController();\n  const timer = setTimeout(() => controller.abort(), timeoutMs);\n\n  if (signal) {\n    if (signal.aborted) {\n      controller.abort();\n    } else {\n      const abortHandler = () => controller.abort();\n      signal.addEventListener(\"abort\", abortHandler, { once: true });\n      controller.signal.addEventListener(\n        \"abort\",\n        () => signal.removeEventListener(\"abort\", abortHandler),\n        { once: true },\n      );\n    }\n  }\n\n  try {\n    return await fetch(input, {\n      ...rest,\n      signal: controller.signal,\n    });\n  } catch (error: any) {\n    if (error?.name === \"AbortError\") {\n      throw new Error(`Request timed out after ${timeoutMs}ms`);\n    }\n    throw error;\n  } finally {\n    clearTimeout(timer);\n  }\n}\n\n/**\n * Parses a JSON response body and throws an informative error when the payload\n * is not valid JSON (e.g. HTML error pages).\n */\nexport async function parseJsonBody<T = any>(\n  response: Response,\n  context: string,\n): Promise<T> {\n  const text = await response.text();\n  try {\n    return JSON.parse(text) as T;\n  } catch {\n    const snippet = text\n      .replace(/\\s+/g, \" \")\n      .slice(0, BODY_SNIPPET_LENGTH)\n      .trim();\n    throw new Error(\n      `${context}: expected JSON but received \"${snippet || \"non-JSON response\"}\"`,\n    );\n  }\n}\n\nexport function sanitizeErrorMessage(error: unknown): string {\n  if (!error) return \"Unknown error\";\n  if (typeof error === \"string\") return error;\n  if (error instanceof Error) return error.message;\n  try {\n    return JSON.stringify(error);\n  } catch {\n    return String(error);\n  }\n}\n","import { AgentBuilder, createTool } from \"@iqai/adk\";\nimport type { Runner } from \"@iqai/adk\";\nimport { z } from \"@iqai/adk/node_modules/zod\";\nimport { sanitizeErrorMessage } from \"../utils/http\";\n\nlet runnerPromise: Promise<Runner> | null = null;\n\nasync function getSummarizerRunner(): Promise<Runner> {\n  if (!runnerPromise) {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\n        \"summarize_reflections requires GOOGLE_API_KEY to be configured for the Gemini model.\",\n      );\n    }\n    runnerPromise = AgentBuilder.create(\"WeeklyMoodSummarizer\")\n      .withModel(\"gemini-2.5-flash\")\n      .withInstruction(\n        [\n          \"You are a cozy Gen-Z productivity coach.\",\n          \"Summarize journal/check-in entries into positive, honest recaps.\",\n          \"Respond strictly in JSON with keys: summary (string), highlights (array of strings), action_items (array of strings).\",\n          \"Keep tone uplifting, slang-light, and under 120 words per field.\",\n        ].join(\"\\n\"),\n      )\n      .build()\n      .then((built) => built.runner);\n  }\n  return runnerPromise;\n}\n\nconst summarizerInput = z.object({\n  entries: z\n    .array(z.string().min(1, \"Entries cannot be blank\"))\n    .min(1, \"Provide at least one entry to summarize\"),\n  focus: z.string().min(1).optional(),\n});\n\nexport const summarizerTool = createTool({\n  name: \"summarize_reflections\",\n  description:\n    \"Digest a batch of journal or chat entries into a Gen-Z friendly weekly recap, returning highlights, mood notes, and actionable next-steps as structured JSON for downstream coaching.\",\n  schema: summarizerInput,\n  fn: async ({ entries, focus }) => {\n    const cleanedEntries = entries.map((entry) => entry.trim());\n    const runner = await getSummarizerRunner();\n    const prompt = [\n      focus\n        ? `Focus on: ${focus}. Keep it encouraging and actionable.`\n        : \"Provide a balanced, encouraging recap.\",\n      \"Entries:\",\n    ]\n      .concat(\n        cleanedEntries.map(\n          (entry, index) => `${index + 1}. ${entry.replace(/\\s+/g, \" \")}`,\n        ),\n      )\n      .join(\"\\n\");\n\n    let raw: unknown;\n    try {\n      raw = await runner.ask(prompt);\n    } catch (error) {\n      return {\n        summary: \"\",\n        highlights: cleanedEntries.slice(0, Math.min(3, cleanedEntries.length)),\n        action_items: [],\n        warning: `Summarizer request failed: ${sanitizeErrorMessage(error)}`,\n      };\n    }\n    try {\n      const trimmed = typeof raw === \"string\" ? raw.trim() : String(raw);\n      const jsonStart = trimmed.indexOf(\"{\");\n      const jsonEnd = trimmed.lastIndexOf(\"}\");\n      if (jsonStart === -1 || jsonEnd === -1) {\n        throw new Error(\"No JSON object found in summarizer response.\");\n      }\n      const parsed = JSON.parse(trimmed.slice(jsonStart, jsonEnd + 1));\n      return parsed;\n    } catch (error) {\n      return {\n        summary: String(raw),\n        highlights: cleanedEntries.slice(0, 3),\n        action_items: [\n          \"Take a mindful break\",\n          \"Hydrate\",\n          \"Message a friend\",\n        ],\n        warning: \"Summarizer response was not valid JSON; returning fallback.\",\n      };\n    }\n  },\n});\n\nexport function getSummarizerTools() {\n  return [summarizerTool];\n}\n","// src/mcp/saveJournalEntry.ts\nimport fs from \"node:fs/promises\";\nimport path from \"node:path\";\nimport { journalRoot } from \"./toolsets/localContext\";\n\n/**\n * App-level helper that directly writes a journal entry\n * to the same folder used by the Filesystem MCP.\n * This ensures both the agent and backend share the same data.\n */\nexport async function saveJournalEntry(text: string) {\n  const today = new Date().toISOString().slice(0, 10);\n  const file = path.join(journalRoot, `${today}.txt`);\n  const time = new Date().toTimeString().slice(0, 5);\n  const line = `[${time}] ${text}\\n`;\n\n  await fs.appendFile(file, line, \"utf8\"); // creates if missing\n  return file;\n}\n","import { createTool, type BaseTool } from \"@iqai/adk\";\nimport { createEvent } from \"ics\";\nimport { z } from \"@iqai/adk/node_modules/zod\";\nimport { saveJournalEntry } from \"../saveJournalEntry\";\n\nconst STRETCH_LIBRARY: Record<\n  string,\n  Array<{ name: string; instructions: string; durationSeconds: number }>\n> = {\n  neck: [\n    {\n      name: \"Neck roll\",\n      instructions: \"Drop chin to chest and roll left to right slowly.\",\n      durationSeconds: 20,\n    },\n    {\n      name: \"Ear-to-shoulder hold\",\n      instructions: \"Tilt ear toward shoulder, hold and breathe.\",\n      durationSeconds: 30,\n    },\n  ],\n  back: [\n    {\n      name: \"Seated cat-cow\",\n      instructions: \"Arch then round spine while seated, one breath per move.\",\n      durationSeconds: 40,\n    },\n    {\n      name: \"Standing forward fold\",\n      instructions: \"Hinge at hips, let arms drop and release shoulders.\",\n      durationSeconds: 45,\n    },\n  ],\n  eyes: [\n    {\n      name: \"20-20-20 reset\",\n      instructions: \"Look 20 feet away for 20 seconds every 20 minutes.\",\n      durationSeconds: 20,\n    },\n    {\n      name: \"Figure eight tracing\",\n      instructions: \"Trace a sideways 8 with eyes slowly without moving head.\",\n      durationSeconds: 30,\n    },\n  ],\n  shoulders: [\n    {\n      name: \"Shoulder rolls\",\n      instructions: \"Ten forward, ten backward, elbows heavy.\",\n      durationSeconds: 40,\n    },\n    {\n      name: \"Doorway chest opener\",\n      instructions: \"Rest forearms on doorway and lean forward gently.\",\n      durationSeconds: 30,\n    },\n  ],\n  full: [\n    {\n      name: \"Standing quad stretch\",\n      instructions: \"Hold ankle behind you, knees together, switch sides.\",\n      durationSeconds: 40,\n    },\n    {\n      name: \"Calf raises\",\n      instructions: \"Rise onto toes slowly for 15 controlled repetitions.\",\n      durationSeconds: 60,\n    },\n  ],\n};\n\nconst RESOURCE_LIBRARY: Record<\n  string,\n  Array<{ title: string; url: string; type: \"article\" | \"video\" | \"podcast\" }>\n> = {\n  burnout: [\n    {\n      title: \"Burnout recovery checklist\",\n      url: \"https://www.everydayhealth.com/wellness/mental-health/recovery-plan-for-burnout/\",\n      type: \"article\",\n    },\n    {\n      title: \"How to make stress your friend\",\n      url: \"https://www.ted.com/talks/kelly_mcgonigal_how_to_make_stress_your_friend\",\n      type: \"video\",\n    },\n    {\n      title: \"The Happiness Lab – Burnout answers\",\n      url: \"https://www.pushkin.fm/podcasts/the-happiness-lab-with-dr-laurie-santos/before-you-burnout\",\n      type: \"podcast\",\n    },\n  ],\n  anxiety: [\n    {\n      title: \"Grounding techniques that work fast\",\n      url: \"https://www.healthline.com/health/grounding-techniques\",\n      type: \"article\",\n    },\n    {\n      title: \"Box breathing tutorial\",\n      url: \"https://www.youtube.com/watch?v=V8SLXjK7dXk\",\n      type: \"video\",\n    },\n    {\n      title: \"The Anxious Achiever\",\n      url: \"https://hbr.org/podcast/2021/03/the-anxious-achiever\",\n      type: \"podcast\",\n    },\n  ],\n  focus: [\n    {\n      title: \"Deep work quick start guide\",\n      url: \"https://www.calnewport.com/blog/2016/12/21/a-deep-habits-guide-to-working-less-and-producing-more/\",\n      type: \"article\",\n    },\n    {\n      title: \"Pomodoro walkthrough\",\n      url: \"https://www.youtube.com/watch?v=mNBmG24djoY\",\n      type: \"video\",\n    },\n    {\n      title: \"Focused podcast\",\n      url: \"https://www.relay.fm/focused\",\n      type: \"podcast\",\n    },\n  ],\n  grief: [\n    {\n      title: \"Coping with grief and loss\",\n      url: \"https://www.helpguide.org/articles/grief/coping-with-grief-and-loss.htm\",\n      type: \"article\",\n    },\n    {\n      title: \"How to talk about grief\",\n      url: \"https://www.youtube.com/watch?v=khkJkR-ipfw\",\n      type: \"video\",\n    },\n    {\n      title: \"Terrible, Thanks for Asking\",\n      url: \"https://www.terriblethanksforasking.com/\",\n      type: \"podcast\",\n    },\n  ],\n};\n\nconst GRATITUDE_PROMPTS = [\n  \"What lifted your mood even slightly today?\",\n  \"Name a person who showed up for you recently.\",\n  \"Which part of your body deserves appreciation right now?\",\n  \"Recall a tiny surprise that made you pause.\",\n  \"What is one thing you are learning to be grateful for?\",\n];\n\nconst CRISIS_RESOURCES: Record<\n  string,\n  Array<{ name: string; phone?: string; text?: string; web?: string }>\n> = {\n  US: [\n    {\n      name: \"988 Suicide & Crisis Lifeline\",\n      phone: \"988\",\n      text: \"Text 988\",\n      web: \"https://988lifeline.org\",\n    },\n    {\n      name: \"Crisis Text Line\",\n      text: \"Text HOME to 741741\",\n      web: \"https://www.crisistextline.org\",\n    },\n  ],\n  CA: [\n    {\n      name: \"988 Suicide Crisis Helpline\",\n      phone: \"988\",\n      web: \"https://988.ca\",\n    },\n    {\n      name: \"Kids Help Phone\",\n      phone: \"1-800-668-6868\",\n      text: \"Text CONNECT to 686868\",\n      web: \"https://kidshelpphone.ca\",\n    },\n  ],\n  UK: [\n    { name: \"Samaritans\", phone: \"116 123\", web: \"https://www.samaritans.org\" },\n    {\n      name: \"Shout Crisis Text Line\",\n      text: \"Text SHOUT to 85258\",\n      web: \"https://giveusashout.org\",\n    },\n  ],\n  AU: [\n    { name: \"Lifeline Australia\", phone: \"13 11 14\", web: \"https://www.lifeline.org.au\" },\n    { name: \"Beyond Blue\", phone: \"1300 22 4636\", web: \"https://www.beyondblue.org.au\" },\n  ],\n  NZ: [\n    { name: \"1737 Need to talk?\", phone: \"1737\", text: \"Text 1737\" },\n    { name: \"Youthline\", phone: \"0800 376 633\", text: \"Text 234\", web: \"https://www.youthline.co.nz\" },\n  ],\n  SG: [\n    { name: \"Samaritans of Singapore\", phone: \"1767\", web: \"https://sos.org.sg\" },\n    { name: \"IMH Mental Health Helpline\", phone: \"6389 2222\", web: \"https://www.imh.com.sg\" },\n  ],\n  IN: [\n    { name: \"Kiran Mental Health Helpline\", phone: \"1800-599-0019\" },\n    { name: \"Snehi India\", phone: \"+91-9582208181\", web: \"https://snehi.org\" },\n  ],\n  ZA: [\n    { name: \"SADAG Suicide Crisis Line\", phone: \"0800 567 567\", web: \"https://www.sadag.org\" },\n    { name: \"Lifeline South Africa\", phone: \"0861 322 322\" },\n  ],\n  BR: [\n    { name: \"Centro de Valorização da Vida\", phone: \"188\", web: \"https://www.cvv.org.br\" },\n  ],\n  MX: [\n    { name: \"Línea de la Vida\", phone: \"800 911 2000\", text: \"WhatsApp 55 1161 1111\", web: \"https://www.gob.mx/salud\" },\n  ],\n  PH: [\n    { name: \"Hopeline PH\", phone: \"02-8804-4673\", text: \"0918-873-4673\", web: \"https://www.ngf-hope.org\" },\n  ],\n  INTERNATIONAL: [\n    { name: \"Befrienders Worldwide\", web: \"https://www.befrienders.org\" },\n    { name: \"Find a helpline\", web: \"https://findahelpline.com\" },\n  ],\n};\n\nfunction addMinutes(base: Date, minutes: number): Date {\n  return new Date(base.getTime() + minutes * 60_000);\n}\n\nfunction parseISOOrThrow(raw?: string): Date {\n  const parsed = raw ? new Date(raw) : new Date();\n  if (Number.isNaN(parsed.getTime())) {\n    throw new Error(`Invalid date format: ${raw}`);\n  }\n  return parsed;\n}\n\nfunction formatLocal(date: Date) {\n  return {\n    iso: date.toISOString(),\n    localDate: date.toLocaleDateString(),\n    localTime: date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n  };\n}\n\nfunction ensureUniqueTimes(slots: Date[]): Date[] {\n  const seen = new Map<string, Date>();\n  for (const slot of slots) {\n    const key = slot.toISOString();\n    if (!seen.has(key)) {\n      seen.set(key, slot);\n    }\n  }\n  return Array.from(seen.values()).sort((a, b) => a.getTime() - b.getTime());\n}\n\nexport async function getWellnessTools(): Promise<BaseTool[]> {\n  const scheduleMoodCheckIn = createTool({\n    name: \"schedule_mood_check_in\",\n    description: \"Plan a sequence of mood check-ins with smart reminders and reflection prompts.\",\n    schema: z.object({\n      startTime: z.string().optional(),\n      intervalMinutes: z.number().int().min(10).max(1440).optional(),\n      count: z.number().int().min(1).max(12).optional(),\n      customTimes: z.array(z.string()).optional(),\n    }),\n    fn: async ({ startTime, intervalMinutes = 180, count = 3, customTimes }) => {\n      let slots: Date[] = [];\n      if (customTimes?.length) {\n        slots = customTimes.map(parseISOOrThrow);\n      } else {\n        const anchor = parseISOOrThrow(startTime);\n        slots = Array.from({ length: count }, (_, idx) =>\n          idx === 0 ? anchor : addMinutes(anchor, intervalMinutes * idx),\n        );\n      }\n      const unique = ensureUniqueTimes(slots.filter((slot) => slot.getTime() > Date.now()));\n      const reminders = unique.map((slot, idx) => ({\n        label: `Check-in ${idx + 1}`,\n        ...formatLocal(slot),\n        prompt: idx === 0\n          ? \"Ask how their energy feels right now.\"\n          : \"Reflect on any shifts since the last check-in.\",\n      }));\n      if (!reminders.length) {\n        throw new Error(\"All scheduled times were in the past. Provide future timestamps.\");\n      }\n      return {\n        intervalMinutes,\n        plannedCount: reminders.length,\n        reminders,\n        followUpSuggestions: [\n          \"Log insights in the journal tool to see trends later.\",\n          \"If energy keeps dipping, suggest nourishment or rest.\",\n        ],\n      };\n    },\n  });\n\n  const breathingCoach = createTool({\n    name: \"breathing_coach\",\n    description: \"Guide the user through structured breathing with cycle timing and coaching notes.\",\n    schema: z.object({\n      pattern: z\n        .enum([\"box\", \"four_seven_eight\", \"resonance\", \"balanced_reset\", \"rescue\"])\n        .optional(),\n      cycles: z.number().int().min(1).max(12).optional(),\n      includeAffirmations: z.boolean().optional(),\n    }),\n    fn: async ({ pattern = \"box\", cycles = 4, includeAffirmations = false }) => {\n      const catalogue: Record<\n        string,\n        { name: string; steps: Array<{ cue: string; seconds: number }>; focus: string }\n      > = {\n        box: {\n          name: \"Box breathing 4-4-4-4\",\n          steps: [\n            { cue: \"Inhale steadily\", seconds: 4 },\n            { cue: \"Hold softly\", seconds: 4 },\n            { cue: \"Exhale slowly\", seconds: 4 },\n            { cue: \"Hold at the bottom\", seconds: 4 },\n          ],\n          focus: \"Stabilise the nervous system and regain focus.\",\n        },\n        four_seven_eight: {\n          name: \"4-7-8 calming breath\",\n          steps: [\n            { cue: \"Inhale through nose\", seconds: 4 },\n            { cue: \"Hold gently\", seconds: 7 },\n            { cue: \"Exhale with a sigh\", seconds: 8 },\n          ],\n          focus: \"Lower tension and ease anxious spikes.\",\n        },\n        resonance: {\n          name: \"Resonance breathing (~6 breaths/min)\",\n          steps: [\n            { cue: \"Inhale\", seconds: 5 },\n            { cue: \"Exhale\", seconds: 5 },\n          ],\n          focus: \"Support heart rate variability and calm focus.\",\n        },\n        balanced_reset: {\n          name: \"Balanced reset 5-5-5\",\n          steps: [\n            { cue: \"Inhale\", seconds: 5 },\n            { cue: \"Hold\", seconds: 5 },\n            { cue: \"Exhale\", seconds: 5 },\n          ],\n          focus: \"Reset between meetings or intense tasks.\",\n        },\n        rescue: {\n          name: \"Rescue breath (long exhale)\",\n          steps: [\n            { cue: \"Inhale\", seconds: 2 },\n            { cue: \"Exhale slowly\", seconds: 6 },\n          ],\n          focus: \"Release acute stress when you need quick relief.\",\n        },\n      };\n      const chosen = catalogue[pattern] ?? catalogue.box;\n      const totalSeconds =\n        cycles * chosen.steps.reduce((sum, step) => sum + step.seconds, 0);\n      const affirmations = includeAffirmations\n        ? [\n            \"Breath in: I am safe to pause.\",\n            \"Hold: I am present with what is real.\",\n            \"Exhale: I release what I no longer need.\",\n          ]\n        : undefined;\n      return {\n        pattern: chosen.name,\n        focus: chosen.focus,\n        cycles,\n        totalDurationSeconds: totalSeconds,\n        cycleBlueprint: chosen.steps,\n        affirmations,\n        debriefPrompt: \"Ask how their body feels now versus before starting.\",\n      };\n    },\n  });\n\n  const logMicroHabit = createTool({\n    name: \"log_micro_habit\",\n    description: \"Track micro habits and return coaching tips tailored to the action.\",\n    schema: z.object({\n      habit: z.string().min(2),\n      action: z.enum([\"start\", \"complete\", \"skip\"]),\n      friction: z.enum([\"none\", \"low\", \"medium\", \"high\"]).optional(),\n      notes: z.string().optional(),\n    }),\n    fn: async ({ habit, action, friction = \"low\", notes }) => {\n      const summaries: Record<string, string> = {\n        start: \"Momentum started. Remind them a small win still counts.\",\n        complete: \"Celebrate the follow-through. Reinforce what made it work.\",\n        skip: \"Normalize the skip and identify what support they need next.\",\n      };\n      const frictionAdvice: Record<string, string> = {\n        none: \"They feel clear—ask what helped and lock it in.\",\n        low: \"Notice gentle resistance and plan the next trigger.\",\n        medium: \"Encourage breaking it down further or pairing with a cue.\",\n        high: \"Explore what blocked them first; maybe the habit needs re-scoping.\",\n      };\n      return {\n        habit,\n        action,\n        statusSummary: summaries[action],\n        friction,\n        frictionAdvice: frictionAdvice[friction],\n        notes,\n      };\n    },\n  });\n\n  const energySurvey = createTool({\n    name: \"energy_level_survey\",\n    description: \"Log current energy (1-5) and map it to action ideas, escalation prompts, and recovery tips.\",\n    schema: z.object({\n      energy: z.number().int().min(1).max(5),\n      tags: z.array(z.string()).max(5).optional(),\n    }),\n    fn: async ({ energy, tags }) => {\n      const labels = [\"Drained\", \"Low\", \"Steady\", \"Elevated\", \"Peak\"];\n      const suggestions = [\n        [\"Suggest rest, water, and emotional check-in.\"],\n        [\"Recommend gentle tasks or planning tomorrow.\"],\n        [\"Propose a focus sprint or tidy-up tasks.\"],\n        [\"Great moment for creative or social work.\"],\n        [\"Channel into priority work, then cool down.\"],\n      ];\n      const escalation =\n        energy <= 2\n          ? \"If they mention burnout signs, suggest a break and revisit nutrition, sleep, or emotional load.\"\n          : null;\n      const anchors = energy >= 4 ? [\"Plan a celebration when work wraps.\", \"Invite them to note what conditions created this energy.\"] : [\"Encourage a hydration check.\", \"Ask what would recharge them fastest.\"];\n      return {\n        energy,\n        label: labels[energy - 1],\n        suggestions: suggestions[energy - 1],\n        escalation,\n        recoveryPrompts: anchors,\n        tags,\n      };\n    },\n  });\n\n  const focusTimer = createTool({\n    name: \"plan_focus_timer\",\n    description: \"Generate a Pomodoro or custom focus schedule with cumulative timing and reflection cues.\",\n    schema: z.object({\n      workMinutes: z.number().int().min(10).max(75).optional(),\n      breakMinutes: z.number().int().min(3).max(25).optional(),\n      cycles: z.number().int().min(1).max(8).optional(),\n      includeLongBreak: z.boolean().optional(),\n    }),\n    fn: async ({ workMinutes = 25, breakMinutes = 5, cycles = 4, includeLongBreak = true }) => {\n      const blocks = Array.from({ length: cycles }, (_, idx) => {\n        const longBreak = includeLongBreak && (idx + 1) % 4 === 0 && idx + 1 !== cycles\n          ? Math.max(breakMinutes * 3, 15)\n          : breakMinutes;\n        return {\n          cycle: idx + 1,\n          workMinutes,\n          breakMinutes: idx === cycles - 1 ? 0 : longBreak,\n          checkIn: idx === 0 ? \"Set intention for this block.\" : \"Note progress / obstacles.\",\n        };\n      });\n      const totalFocus = cycles * workMinutes;\n      const totalBreak = blocks.reduce((sum, block) => sum + block.breakMinutes, 0);\n      return {\n        plan: blocks,\n        totals: {\n          focusMinutes: totalFocus,\n          breakMinutes: totalBreak,\n          ratio: Number((totalFocus / Math.max(totalBreak, 1)).toFixed(2)),\n        },\n        suggestions: [\n          \"Invite the user to log a sentence after each block.\",\n          \"Encourage a longer decompression after the full set completes.\",\n        ],\n      };\n    },\n  });\n\n  const stretchLibrary = createTool({\n    name: \"stretch_move_library\",\n    description: \"Provide targeted movement suggestions with duration and micro coaching.\",\n    schema: z.object({\n      focus: z.enum([\"neck\", \"back\", \"eyes\", \"shoulders\", \"full\"]).optional(),\n      limit: z.number().int().min(1).max(5).optional(),\n    }),\n    fn: async ({ focus = \"full\", limit = 3 }) => {\n      const bank = STRETCH_LIBRARY[focus] ?? STRETCH_LIBRARY.full;\n      const selection = bank.slice(0, limit);\n      return {\n        focus,\n        suggestions: selection,\n        reminder: \"Ask the user to set a timer and notice tension release afterwards.\",\n      };\n    },\n  });\n\n  const sleepSummarizer = createTool({\n    name: \"summarize_sleep_log\",\n    description: \"Analyze a batch of sleep logs, compute averages, and suggest adjustments.\",\n    schema: z.object({\n      entries: z\n        .array(\n          z.object({\n            date: z.string(),\n            hours: z.number().min(0).max(24),\n            quality: z.number().min(1).max(5).optional(),\n            notes: z.string().optional(),\n          }),\n        )\n        .min(1)\n        .max(30),\n    }),\n    fn: async ({ entries }) => {\n      const totalHours = entries.reduce((sum, item) => sum + item.hours, 0);\n      const avgHours = totalHours / entries.length;\n      const qualities = entries.map((entry) => entry.quality).filter(Boolean) as number[];\n      const avgQuality = qualities.length\n        ? qualities.reduce((sum, value) => sum + value, 0) / qualities.length\n        : null;\n      const shortNights = entries.filter((night) => night.hours < 6);\n      const longestNight = entries.reduce((prev, item) =>\n        item.hours > prev.hours ? item : prev,\n      );\n      return {\n        nightsLogged: entries.length,\n        averageHours: Number(avgHours.toFixed(2)),\n        averageQuality: avgQuality ? Number(avgQuality.toFixed(2)) : null,\n        shortestNight: shortNights.length ? shortNights[0] : null,\n        longestNight,\n        recommendations: avgHours < 7\n          ? [\n              \"Encourage a consistent bedtime and dimming screens 30 minutes before sleep.\",\n              \"Suggest a short wind-down routine logged in the journal.\",\n            ]\n          : [\n              \"Help them protect current sleep habits.\",\n              \"Introduce a gentle morning ritual to sustain rest quality.\",\n            ],\n      };\n    },\n  });\n\n  const nutritionHelper = createTool({\n    name: \"nutrition_prompt_helper\",\n    description: \"Offer hydration and nourishment prompts based on recent intake cues.\",\n    schema: z.object({\n      lastMealMinutesAgo: z.number().int().min(0).max(1440).optional(),\n      hydrationCups: z.number().int().min(0).max(24).optional(),\n      craving: z.string().optional(),\n    }),\n    fn: async ({ lastMealMinutesAgo, hydrationCups, craving }) => {\n      const suggestions: string[] = [];\n      if (lastMealMinutesAgo !== undefined) {\n        if (lastMealMinutesAgo >= 300) {\n          suggestions.push(\"Recommend a substantial meal. Neutral tone, no shame.\");\n        } else if (lastMealMinutesAgo >= 180) {\n          suggestions.push(\"Suggest a protein + carb snack to stabilise energy.\");\n        } else if (lastMealMinutesAgo >= 120) {\n          suggestions.push(\"Invite them to prep a light bite before hunger spikes.\");\n        } else {\n          suggestions.push(\"Meal timing is solid—cheer on the consistency.\");\n        }\n      }\n      if (hydrationCups !== undefined) {\n        if (hydrationCups < 3) {\n          suggestions.push(\"Prompt a glass of water now and note how it feels after.\");\n        } else if (hydrationCups > 10) {\n          suggestions.push(\"Hydration looks high—make sure electrolytes are balanced.\");\n        } else {\n          suggestions.push(\"Hydration zone is healthy—celebrate and keep nearby water.\");\n        }\n      }\n      if (craving) {\n        suggestions.push(`Encourage them to pair ${craving} with fiber or protein for steady energy.`);\n      }\n      return {\n        suggestions,\n        note: \"Remind them that nourishment fuels focus—no guilt, just care.\",\n      };\n    },\n  });\n\n  const resourceRecommender = createTool({\n    name: \"recommend_care_resources\",\n    description: \"Return curated articles, videos, or podcasts for wellness topics.\",\n    schema: z.object({\n      topic: z.string().min(3),\n      format: z.enum([\"article\", \"video\", \"podcast\", \"any\"]).optional(),\n      limit: z.number().int().min(1).max(5).optional(),\n    }),\n    fn: async ({ topic, format = \"any\", limit = 3 }) => {\n      const key = topic.toLowerCase();\n      const bucket = RESOURCE_LIBRARY[key] ?? RESOURCE_LIBRARY.focus;\n      const filtered =\n        format === \"any\" ? bucket : bucket.filter((item) => item.type === format);\n      const results = filtered.slice(0, limit);\n      return {\n        topic: key,\n        results,\n        fallback: results.length ? null : \"Try reading mode on DuckDuckGo search for more resources.\",\n      };\n    },\n  });\n\n  const gratitudeVault = createTool({\n    name: \"log_gratitude_entry\",\n    description: \"Append a gratitude line to the shared journal with optional prompts.\",\n    schema: z.object({\n      entry: z.string().min(3),\n      promptRequested: z.boolean().optional(),\n      tags: z.array(z.string().min(2)).max(5).optional(),\n    }),\n    fn: async ({ entry, promptRequested = false, tags }) => {\n      const prompt = promptRequested\n        ? GRATITUDE_PROMPTS[Math.floor(Math.random() * GRATITUDE_PROMPTS.length)]\n        : undefined;\n      const line = `[gratitude] ${entry}${tags?.length ? ` | tags: ${tags.join(\", \")}` : \"\"}`;\n      const file = await saveJournalEntry(line);\n      return {\n        savedTo: file,\n        prompt,\n        reminder: \"Invite them to revisit gratitude notes on rough days.\",\n      };\n    },\n  });\n\n  const complimentGenerator = createTool({\n    name: \"generate_personalized_compliment\",\n    description: \"Generate a motivating compliment keyed to the achievement and tone.\",\n    schema: z.object({\n      focus: z.enum([\"consistency\", \"bravery\", \"progress\", \"care\", \"resilience\"]).optional(),\n      persona: z.enum([\"gentle\", \"hype\", \"witty\"]).optional(),\n      name: z.string().optional(),\n    }),\n    fn: async ({ focus = \"progress\", persona = \"gentle\", name }) => {\n      const compliments: Record<string, Record<string, string>> = {\n        gentle: {\n          consistency: \"Your steadiness is quietly rewriting your story.\",\n          bravery: \"You stepped toward the hard thing—proof you trust yourself.\",\n          progress: \"Every tiny move counts; you’re building more than you see.\",\n          care: \"Choosing rest is resistance. I’m proud of your tenderness.\",\n          resilience: \"You bend, you recover, you rise stronger each time.\",\n        },\n        hype: {\n          consistency: \"You’re stacking wins like a legend—no off days here.\",\n          bravery: \"That move took main-character energy and you owned it.\",\n          progress: \"Plot twist: you’re unstoppable when you chase the next step.\",\n          care: \"Self-care king/queen alert! You’re literally glowing.\",\n          resilience: \"Bounce-back level: elite. Nothing keeps you down.\",\n        },\n        witty: {\n          consistency: \"Look at you, quietly building an empire of good habits.\",\n          bravery: \"You basically just high-fived your own courage.\",\n          progress: \"Slow clap—your momentum has entered the chat.\",\n          care: \"Self-kindness unlocked: legendary tier.\",\n          resilience: \"Like a boomerang with better boundaries. You keep coming back.\",\n        },\n      };\n      return {\n        compliment: `${name ? `${name}, ` : \"\"}${compliments[persona][focus]}`,\n        focus,\n        persona,\n      };\n    },\n  });\n\n  const goalLadderPlanner = createTool({\n    name: \"plan_goal_ladder\",\n    description: \"Break a goal into structured steps with focus prompts and support ideas.\",\n    schema: z.object({\n      goal: z.string().min(4),\n      steps: z.number().int().min(3).max(8).optional(),\n      timelineDays: z.number().int().min(1).max(60).optional(),\n    }),\n    fn: async ({ goal, steps = 5, timelineDays = 14 }) => {\n      const prompts = [\n        \"Define what success looks like in one sentence.\",\n        \"List resources or allies you can call on.\",\n        \"Set the very next action you can do in under 10 minutes.\",\n        \"Identify what might block you and plan a backup.\",\n        \"Choose a check-in date to review progress.\",\n        \"Describe how you will celebrate finishing.\",\n        \"Decide how you will maintain the result afterwards.\",\n        \"Note a mantra to keep you steady when it gets tough.\",\n      ];\n      const ladder = Array.from({ length: steps }, (_, idx) => ({\n        step: idx + 1,\n        question: prompts[idx],\n      }));\n      return {\n        goal,\n        timelineDays,\n        ladder,\n        suggestion: \"Work through the prompts together and capture answers in the journal.\",\n      };\n    },\n  });\n\n  const conflictReflection = createTool({\n    name: \"reflect_on_conflict\",\n    description: \"Surface prompts to process a conflict with empathy and boundaries.\",\n    schema: z.object({\n      situation: z.string().min(5),\n      emotion: z.string().optional(),\n      intention: z.enum([\"repair\", \"closure\", \"self-care\"]).optional(),\n    }),\n    fn: async ({ situation, emotion, intention = \"self-care\" }) => ({\n      situation,\n      intention,\n      prompts: [\n        \"What need of yours felt unheard in that moment?\",\n        \"If you paused the scene, what support would you offer your past self?\",\n        \"Which boundary do you need to restate or rebuild?\",\n        \"Is there a repair you want, or do you need distance to heal?\",\n        \"How can you take care of your nervous system in the next hour?\",\n      ],\n      emotion,\n    }),\n  });\n\n  const moodPlaylistMixer = createTool({\n    name: \"mix_mood_playlist\",\n    description: \"Translate mood + energy into Spotify seed ideas and playlist prompts.\",\n    schema: z.object({\n      mood: z.string().min(3),\n      energy: z.enum([\"low\", \"medium\", \"high\"]).optional(),\n      need: z.enum([\"focus\", \"comfort\", \"celebration\", \"release\"]).optional(),\n    }),\n    fn: async ({ mood, energy = \"medium\", need = \"focus\" }) => {\n      const baseSeeds: Record<string, string[]> = {\n        focus: [\"focus\", \"study\", \"piano\"],\n        comfort: [\"acoustic\", \"calm\", \"winter-chill\"],\n        celebration: [\"dance\", \"pop\", \"feel-good\"],\n        release: [\"mellow\", \"rainy-day\", \"indie\"],\n      };\n      const energyTags: Record<string, string[]> = {\n        low: [\"soft\", \"ambient\"],\n        medium: [\"steady\", \"lofi\"],\n        high: [\"high-energy\", \"confidence\"],\n      };\n      return {\n        mood,\n        energy,\n        need,\n        seeds: [...(baseSeeds[need] ?? baseSeeds.focus), ...energyTags[energy]],\n        followUp: [\n          `Try \\`spotify_vibe_playlists\\` with \"${mood} ${energyTags[energy][0]}\"`,\n          \"If it misses, pivot to a comfort playlist they already love.\",\n        ],\n      };\n    },\n  });\n\n  const ambientSoundSelector = createTool({\n    name: \"select_ambient_sound\",\n    description: \"Serve curated ambient soundtracks with quick descriptions.\",\n    schema: z.object({\n      vibe: z.enum([\"rain\", \"cafe\", \"forest\", \"lofi\", \"minimal\", \"ocean\"]).optional(),\n      limit: z.number().int().min(1).max(4).optional(),\n    }),\n    fn: async ({ vibe = \"lofi\", limit = 2 }) => {\n      const library: Record<\n        string,\n        Array<{ label: string; url: string; description: string }>\n      > = {\n        rain: [\n          {\n            label: \"Soft rain on window\",\n            url: \"https://www.youtube.com/watch?v=DWcJFNfaw9c\",\n            description: \"Gentle rain with occasional thunder for steady focus.\",\n          },\n          {\n            label: \"Rain in library\",\n            url: \"https://www.youtube.com/watch?v=7NOSDKb0HlU\",\n            description: \"Rainfall with muffled pages and ambience.\",\n          },\n        ],\n        cafe: [\n          {\n            label: \"Lo-fi café ambiance\",\n            url: \"https://www.youtube.com/watch?v=lTRiuFIWV54\",\n            description: \"Light chatter and espresso machines.\",\n          },\n          {\n            label: \"Morning café\",\n            url: \"https://www.youtube.com/watch?v=5qap5aO4i9A\",\n            description: \"Soft jazz with warm café noise.\",\n          },\n        ],\n        forest: [\n          {\n            label: \"Forest morning\",\n            url: \"https://www.youtube.com/watch?v=OdIJ2x3nxzQ\",\n            description: \"Birdsong and light breeze.\",\n          },\n          {\n            label: \"Night forest\",\n            url: \"https://www.youtube.com/watch?v=VSS-7Ia6cYc\",\n            description: \"Crickets and gentle stream for calm evenings.\",\n          },\n        ],\n        lofi: [\n          {\n            label: \"lofi hip hop radio\",\n            url: \"https://www.youtube.com/watch?v=jfKfPfyJRdk\",\n            description: \"Classic lofi beats for study or work.\",\n          },\n          {\n            label: \"lofi piano focus\",\n            url: \"https://www.youtube.com/watch?v=1ZYbU82GVz4\",\n            description: \"Soft piano loops with minimal percussion.\",\n          },\n        ],\n        minimal: [\n          {\n            label: \"Brown noise\",\n            url: \"https://www.youtube.com/watch?v=HdFTGSY4-7E\",\n            description: \"Low consistent brown noise for deep focus.\",\n          },\n          {\n            label: \"Calm air purifier\",\n            url: \"https://www.youtube.com/watch?v=HNl9xWJxUgw\",\n            description: \"Gentle white noise with soft airflow.\",\n          },\n        ],\n        ocean: [\n          {\n            label: \"Ocean waves\",\n            url: \"https://www.youtube.com/watch?v=HM6kXl_ItLE\",\n            description: \"Rolling waves with seagulls afar.\",\n          },\n        ],\n      };\n      const options = library[vibe] ?? library.lofi;\n      return {\n        vibe,\n        options: options.slice(0, limit),\n        suggestion: \"Check in after two minutes and adjust volume or vibe.\",\n      };\n    },\n  });\n\n  const eventCalendarExport = createTool({\n    name: \"create_focus_event_ics\",\n    description: \"Generate an ICS snippet for focus or rest blocks with structured metadata.\",\n    schema: z.object({\n      title: z.string().min(3),\n      start: z.string(),\n      durationMinutes: z.number().int().min(5).max(600).optional(),\n      description: z.string().optional(),\n      location: z.string().optional(),\n      uid: z.string().optional(),\n    }),\n    fn: async ({ title, start, durationMinutes = 45, description, location, uid }) => {\n      const originalStart = parseISOOrThrow(start);\n      let startDate = originalStart;\n      let adjusted = false;\n      if (startDate.getTime() < Date.now()) {\n        startDate = new Date(Date.now() + 5 * 60 * 1000);\n        adjusted = true;\n      }\n      const endDate = addMinutes(startDate, durationMinutes);\n      const eventConfig: Record<string, unknown> = {\n        title,\n        start: [\n          startDate.getFullYear(),\n          startDate.getMonth() + 1,\n          startDate.getDate(),\n          startDate.getHours(),\n          startDate.getMinutes(),\n        ],\n        end: [\n          endDate.getFullYear(),\n          endDate.getMonth() + 1,\n          endDate.getDate(),\n          endDate.getHours(),\n          endDate.getMinutes(),\n        ],\n      };\n      if (description) eventConfig.description = description;\n      if (location) eventConfig.location = location;\n      if (uid) eventConfig.uid = uid;\n      const { error, value } = createEvent(eventConfig);\n      if (error) throw error;\n      return {\n        title,\n        durationMinutes,\n        ics: value,\n        hint: \"Share the snippet and remind them to add an alert on their calendar.\",\n        note: adjusted\n          ? \"Start time was nudged five minutes into the future because the provided start was in the past.\"\n          : undefined,\n      };\n    },\n  });\n\n  const crisisResources = createTool({\n    name: \"locate_crisis_resources\",\n    description: \"Return crisis support contacts by country with fallback options.\",\n    schema: z.object({\n      country: z.string().optional(),\n      concern: z.enum([\"self-harm\", \"substance\", \"abuse\", \"unspecified\"]).optional(),\n    }),\n    fn: async ({ country = \"INTERNATIONAL\" }) => {\n      const key = country.toUpperCase();\n      const resources =\n        CRISIS_RESOURCES[key] ?? CRISIS_RESOURCES[key.slice(0, 2)] ?? CRISIS_RESOURCES.INTERNATIONAL;\n      return {\n        country: key,\n        resources,\n        instructions: [\n          \"If someone is in immediate danger, instruct them to call local emergency services.\",\n          \"Stay with the user (digitally) until they confirm they have contacted help.\",\n        ],\n      };\n    },\n  });\n\n  return [\n    scheduleMoodCheckIn,\n    breathingCoach,\n    logMicroHabit,\n    energySurvey,\n    focusTimer,\n    stretchLibrary,\n    sleepSummarizer,\n    nutritionHelper,\n    resourceRecommender,\n    gratitudeVault,\n    complimentGenerator,\n    goalLadderPlanner,\n    conflictReflection,\n    moodPlaylistMixer,\n    ambientSoundSelector,\n    eventCalendarExport,\n    crisisResources,\n  ];\n}\n","import { createTool, type BaseTool } from \"@iqai/adk\";\nimport { z } from \"@iqai/adk/node_modules/zod\";\n\nconst BOT_CONFIGS = [\n  { name: \"Helena\", tokenEnv: \"HELENA_TOKEN\", usernameEnv: \"HELENA_USERNAME\", toolName: \"Helena_telegram\" },\n  { name: \"Milo\", tokenEnv: \"MILO_TOKEN\", usernameEnv: \"MILO_USERNAME\", toolName: \"Milo_telegram\" },\n  { name: \"Kai\", tokenEnv: \"KAI_TOKEN\", usernameEnv: \"KAI_USERNAME\", toolName: \"Kai_telegram\" },\n  { name: \"Sophie\", tokenEnv: \"SOPHIE_TOKEN\", usernameEnv: \"SOPHIE_USERNAME\", toolName: \"Sophie_telegram\" },\n  { name: \"Luna\", tokenEnv: \"LUNA_TOKEN\", usernameEnv: \"LUNA_USERNAME\", toolName: \"Luna_telegram\" },\n] as const;\n\nconst messageSchema = z.object({\n  chatId: z.string().optional(),\n  text: z.string().min(1, \"Message text cannot be empty\"),\n  parseMode: z.enum([\"Markdown\", \"MarkdownV2\", \"HTML\"]).optional(),\n  disableWebPagePreview: z.boolean().optional(),\n  disableNotification: z.boolean().optional(),\n});\n\nasync function sendTelegramMessage(token: string, body: Record<string, unknown>) {\n  const response = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  });\n\n  const payload = await response.json();\n  if (!response.ok || payload?.ok === false) {\n    const description = payload?.description ?? response.statusText;\n    throw new Error(`Telegram API error: ${description}`);\n  }\n  return payload;\n}\n\nexport async function getPersonaTelegramTools(): Promise<BaseTool[]> {\n  const tools: BaseTool[] = [];\n\n  for (const bot of BOT_CONFIGS) {\n    const token = process.env[bot.tokenEnv];\n    if (!token) continue;\n\n    const defaultChat = process.env[bot.usernameEnv];\n\n    const tool = createTool({\n      name: bot.toolName,\n      description: `Send a Telegram message as ${bot.name}.` +\n        (defaultChat ? ` Defaults to chat ${defaultChat}.` : \" Provide chatId explicitly.\"),\n      schema: messageSchema,\n      fn: async ({ chatId, text, parseMode, disableNotification, disableWebPagePreview }) => {\n        const resolvedChat = chatId ?? defaultChat;\n        if (!resolvedChat) {\n          throw new Error(\"chatId is required for this bot because no default chat is configured.\");\n        }\n\n        const body: Record<string, unknown> = {\n          chat_id: resolvedChat,\n          text,\n        };\n        if (parseMode) body.parse_mode = parseMode;\n        if (disableNotification !== undefined) body.disable_notification = disableNotification;\n        if (disableWebPagePreview !== undefined) body.disable_web_page_preview = disableWebPagePreview;\n\n        const payload = await sendTelegramMessage(token, body);\n\n        return {\n          ok: true,\n          chat: payload?.result?.chat ?? null,\n          messageId: payload?.result?.message_id ?? null,\n          date: payload?.result?.date ?? null,\n        };\n      },\n    });\n\n    tools.push(tool);\n  }\n\n  return tools;\n}\n","import { createTool, type BaseTool } from \"@iqai/adk\";\nimport { z } from \"@iqai/adk/node_modules/zod\";\n\nconst DISCORD_CONFIGS = [\n  { name: \"Helena\", tokenEnv: \"HELENA_DISCORD_TOKEN\", channelEnv: \"HELENA_DISCORD_CHANNEL\", toolName: \"Helena_discord\" },\n  { name: \"Milo\", tokenEnv: \"MILO_DISCORD_TOKEN\", channelEnv: \"MILO_DISCORD_CHANNEL\", toolName: \"Milo_discord\" },\n  { name: \"Kai\", tokenEnv: \"KAI_DISCORD_TOKEN\", channelEnv: \"KAI_DISCORD_CHANNEL\", toolName: \"Kai_discord\" },\n  { name: \"Sophie\", tokenEnv: \"SOPHIE_DISCORD_TOKEN\", channelEnv: \"SOPHIE_DISCORD_CHANNEL\", toolName: \"Sophie_discord\" },\n  { name: \"Luna\", tokenEnv: \"LUNA_DISCORD_TOKEN\", channelEnv: \"LUNA_DISCORD_CHANNEL\", toolName: \"Luna_discord\" },\n] as const;\n\nconst messageSchema = z.object({\n  channelId: z.string().optional(),\n  content: z.string().min(1, \"Message content cannot be empty\"),\n  tts: z.boolean().optional(),\n  embeds: z\n    .array(\n      z.object({\n        title: z.string().optional(),\n        description: z.string().optional(),\n        url: z.string().optional(),\n        color: z.number().int().optional(),\n      }),\n    )\n    .optional(),\n  threadId: z.string().optional(),\n});\n\nasync function sendDiscordMessage(token: string, channelId: string, body: Record<string, unknown>) {\n  const response = await fetch(`https://discord.com/api/v10/channels/${channelId}/messages`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bot ${token}`,\n    },\n    body: JSON.stringify(body),\n  });\n\n  const payload = await response.json().catch(() => undefined);\n  if (!response.ok) {\n    const description = payload?.message ?? response.statusText;\n    throw new Error(`Discord API error: ${description}`);\n  }\n  return payload;\n}\n\nexport async function getPersonaDiscordTools(): Promise<BaseTool[]> {\n  const tools: BaseTool[] = [];\n\n  for (const config of DISCORD_CONFIGS) {\n    const token = process.env[config.tokenEnv];\n    if (!token) continue;\n\n    const defaultChannel = process.env[config.channelEnv];\n\n    const tool = createTool({\n      name: config.toolName,\n      description: `Send a Discord message as ${config.name}.` +\n        (defaultChannel ? ` Defaults to channel ${defaultChannel}.` : \" Provide channelId explicitly.\"),\n      schema: messageSchema,\n      fn: async ({ channelId, content, tts, embeds, threadId }) => {\n        const resolvedChannel = channelId ?? defaultChannel;\n        if (!resolvedChannel) {\n          throw new Error(\"channelId is required because no default channel is configured for this bot.\");\n        }\n\n        const body: Record<string, unknown> = {\n          content,\n        };\n        if (tts !== undefined) body.tts = tts;\n        if (embeds) body.embeds = embeds;\n        if (threadId) body.thread_id = threadId;\n\n        const payload = await sendDiscordMessage(token, resolvedChannel, body);\n\n        return {\n          ok: true,\n          channelId: resolvedChannel,\n          messageId: payload?.id ?? null,\n          timestamp: payload?.timestamp ?? null,\n        };\n      },\n    });\n\n    tools.push(tool);\n  }\n\n  return tools;\n}\n","import type { BaseTool, McpToolset } from \"@iqai/adk\";\nimport { McpIqWiki } from \"@iqai/adk\";\nimport { filesystemToolset, getFilesystemTools } from \"./localContext\";\nimport { webSearchToolset, getWebSearchTools } from \"./search\";\nimport { wikipediaToolset, getWikipediaTools } from \"./knowledge\";\nimport { unsplashToolset, getUnsplashTools } from \"./visuals\";\nimport { spotifyToolset, getSpotifyTools } from \"./music\";\nimport { emotionToolset, getEmotionTools } from \"./emotion\";\nimport { journalingToolset, getJournalingTools } from \"./journal\";\nimport { trendsToolset, getTrendsTools } from \"./trends\";\nimport { quotesToolset, getQuotesTools } from \"./quotes\";\nimport { getSummarizerTools } from \"./summarizer\";\nimport { getWellnessTools } from \"./wellness\";\nimport { getPersonaTelegramTools } from \"./personaTelegram\";\nimport { getPersonaDiscordTools } from \"./personaDiscord\";\n\nconst iqWikiToolset = McpIqWiki();\n\nexport type ToolsetLoader = () => Promise<BaseTool[]>;\n\nexport type ToolsetRegistration = {\n  name: string;\n  loader: ToolsetLoader;\n  toolset?: McpToolset;\n};\n\nconst baseRegistrations: ToolsetRegistration[] = [\n  { name: \"local-journal-filesystem\", loader: getFilesystemTools, toolset: filesystemToolset },\n  { name: \"search-discovery\", loader: getWebSearchTools, toolset: webSearchToolset },\n  { name: \"knowledge-wikipedia\", loader: getWikipediaTools, toolset: wikipediaToolset },\n  {\n    name: \"knowledge-iqwiki\",\n    loader: async () => {\n      return iqWikiToolset.getTools();\n    },\n    toolset: iqWikiToolset,\n  },\n  { name: \"visuals-unsplash\", loader: getUnsplashTools, toolset: unsplashToolset },\n  { name: \"music-spotify\", loader: getSpotifyTools, toolset: spotifyToolset },\n  { name: \"emotion-analytics\", loader: getEmotionTools, toolset: emotionToolset },\n  { name: \"journal-reflection\", loader: getJournalingTools, toolset: journalingToolset },\n  { name: \"web-trends\", loader: getTrendsTools, toolset: trendsToolset },\n  { name: \"quotes-feed\", loader: getQuotesTools, toolset: quotesToolset },\n  {\n    name: \"ai-summarizer\",\n    loader: async () => getSummarizerTools(),\n  },\n  {\n    name: \"wellness-companion\",\n    loader: async () => getWellnessTools(),\n  },\n];\nbaseRegistrations.push({\n  name: \"telegram-persona\",\n  loader: async () => getPersonaTelegramTools(),\n});\n\nbaseRegistrations.push({\n  name: \"discord-persona\",\n  loader: async () => getPersonaDiscordTools(),\n});\n\nexport const TOOLSET_REGISTRY: ToolsetRegistration[] = baseRegistrations;\n\nexport type { BaseTool } from \"@iqai/adk\";\n","import type { BaseTool } from \"@iqai/adk\";\nimport { TOOLSET_REGISTRY } from \"./toolsets\";\nimport { PERSONA_TOOLKIT_VERSION } from \"../agents/version\";\n\nlet toolsCache: BaseTool[] | null = null;\nlet toolsPromise: Promise<BaseTool[]> | null = null;\nlet cacheVersion: string | null = null;\n\nasync function loadAllToolsets(): Promise<BaseTool[]> {\n  const toolArrays = await Promise.all(\n    TOOLSET_REGISTRY.map(async ({ name, loader }) => {\n      try {\n        return await loader();\n      } catch (error) {\n        console.error(`[MCP] Failed to load toolset ${name}:`, error);\n        return [];\n      }\n    }),\n  );\n  return toolArrays.flat();\n}\n\nexport async function getSharedTools(): Promise<BaseTool[]> {\n  if (toolsCache && cacheVersion === PERSONA_TOOLKIT_VERSION) return toolsCache;\n  if (!toolsPromise || cacheVersion !== PERSONA_TOOLKIT_VERSION) {\n    toolsPromise = loadAllToolsets().then((tools) => {\n      toolsCache = tools;\n      cacheVersion = PERSONA_TOOLKIT_VERSION;\n      return tools;\n    });\n  }\n  return toolsPromise;\n}\n\nexport async function disposeToolsets() {\n  await Promise.all(\n    TOOLSET_REGISTRY.map(async ({ toolset, name }) => {\n      if (!toolset) return;\n      try {\n        await toolset.dispose();\n      } catch (error) {\n        console.error(`[MCP] Error disposing toolset ${name}:`, error);\n      }\n    }),\n  );\n}\n\nif (typeof process !== \"undefined\") {\n  process.once(\"exit\", () => {\n    void disposeToolsets();\n  });\n  process.once(\"SIGINT\", () => {\n    void disposeToolsets().finally(() => process.exit(0));\n  });\n}\n\nexport * from \"./toolsets\";\n","export { getSharedTools, disposeToolsets } from \"./registry\";\nexport { saveJournalEntry } from \"./saveJournalEntry\";\nexport { journalRoot } from \"./toolsets/localContext\";\n","import type { BaseTool } from \"@iqai/adk\";\nimport { getSharedTools } from \"../mcp\";\nimport { PERSONA_TOOLKIT_VERSION } from \"./version\";\n\nlet cachedToolsPromise: Promise<BaseTool[]> | null = null;\nlet cachedVersion: string | null = null;\n\nasync function loadAllTools(): Promise<BaseTool[]> {\n  if (!cachedToolsPromise || cachedVersion !== PERSONA_TOOLKIT_VERSION) {\n    cachedToolsPromise = getSharedTools();\n    cachedVersion = PERSONA_TOOLKIT_VERSION;\n  }\n  return cachedToolsPromise;\n}\n\nexport async function loadPersonaTools(agentName?: string): Promise<BaseTool[]> {\n  const tools = await loadAllTools();\n  if (!agentName) return tools.slice();\n\n  const lowerAgent = agentName.toLowerCase();\n  return tools.filter((tool) => {\n    if (!tool?.name) return true;\n    if (tool.name.endsWith(\"_telegram\") || tool.name.endsWith(\"_discord\")) {\n      const persona = tool.name.split(\"_\")[0]?.toLowerCase();\n      return persona === lowerAgent;\n    }\n    return true;\n  });\n}\n\nexport { PERSONA_TOOLKIT_VERSION };\n","const TELEGRAM_HELPERS: Record<string, string> = {\n  helena: \"Helena_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)\",\n  milo: \"Milo_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)\",\n  kai: \"Kai_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)\",\n  sophie: \"Sophie_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)\",\n  luna: \"Luna_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)\",\n};\n\nconst DISCORD_HELPERS: Record<string, string> = {\n  helena: \"Helena_discord(channelId?, content, tts?, embeds?, threadId?)\",\n  milo: \"Milo_discord(channelId?, content, tts?, embeds?, threadId?)\",\n  kai: \"Kai_discord(channelId?, content, tts?, embeds?, threadId?)\",\n  sophie: \"Sophie_discord(channelId?, content, tts?, embeds?, threadId?)\",\n  luna: \"Luna_discord(channelId?, content, tts?, embeds?, threadId?)\",\n};\n\nexport function getToolUsageGuidance(persona?: string): string {\n  const lower = persona?.toLowerCase();\n  const telegramLine = lower && TELEGRAM_HELPERS[lower]\n    ? `Messaging – Telegram\\n- \\`${TELEGRAM_HELPERS[lower]}\\`: send a Telegram message as your bot. Provide \\`chatId\\` if no default username is configured.`\n    : \"Messaging – Telegram\\n- Dedicated persona tool available (e.g. Helena_telegram).\";\n  const discordLine = lower && DISCORD_HELPERS[lower]\n    ? `Messaging – Discord\\n- \\`${DISCORD_HELPERS[lower]}\\`: send a Discord message as your bot. Provide \\`channelId\\` if no default channel is configured.`\n    : \"Messaging – Discord\\n- Dedicated persona tool available (e.g. Helena_discord).\";\n\n  return `\nTOOLS 101 (55 total). If someone asks for your tool list, respond from this cheat-sheet—no tool call is required. Before invoking any tool: state why, confirm inputs, and explain results or errors.\n\nFile reading\n- \\`read_text_file(path, head?, tail?)\\`: get plain text. Use for config, markdown, code.\n- \\`read_file(path, head?, tail?)\\`: raw bytes or mixed encoding. Use for JSON/binary blobs.\n- \\`read_media_file(path)\\`: image/audio → base64 + mime. Only when file path is known.\n- \\`read_multiple_files(paths)\\`: compare several files at once.\n\nFile writing + editing\n- \\`write_file(path, content)\\`: create or replace entire file. Warn if overwrite.\n- \\`edit_file(path, edits, dryRun?)\\`: apply diff-style edits; use dry run first.\n- \\`move_file(source, destination)\\`: rename or relocate; confirm destination exists/desired.\n\nFolders + metadata\n- \\`create_directory(path)\\`: make folders (recursive). Mention target path.\n- \\`list_directory(path)\\`: quick listing.\n- \\`list_directory_with_sizes(path, sortBy?)\\`: listing with sizes and sort.\n- \\`directory_tree(path)\\`: nested snapshot for navigation.\n- \\`list_allowed_directories()\\`: show sandbox roots before heavy work.\n- \\`search_files(path, pattern, exclude?)\\`: find files by glob/regex.\n- \\`get_file_info(path)\\`: stat info (size, timestamps, type).\n\nGeneral knowledge\n- \\`web_search(query, maxResults?)\\`: DuckDuckGo instant answers when encyclopedias fail.\n- \\`wikipedia_search(query, limit?)\\`: find page titles first.\n- \\`wikipedia_summary(title)\\`: fetch summary using title from search.\n- \\`SEARCH_WIKI(query)\\`: find IQ.wiki slugs (use before ID-based calls).\n- \\`GET_WIKI(id)\\`: fetch IQ.wiki article. Needs valid slug (e.g. \"bitcoin\").\n- \\`GET_USER_CREATED_WIKIS(id, timeFrameSeconds?)\\`: IQ.wiki creations for Ethereum address.\n- \\`GET_USER_EDITED_WIKIS(id, timeFrameSeconds?)\\`: edits list for Ethereum address.\n- \\`GET_USER_WIKI_ACTIVITIES(id, activityType?, timeFrameSeconds?)\\`: combined activity; same address rules.\n\nMedia + sound\n- \\`unsplash_search(query, orientation?, color?, perPage?)\\`: mood images.\n- \\`spotify_vibe_playlists(mood, limit?)\\`: playlists by vibe string.\n- \\`spotify_track_recs(seedGenre, limit?)\\`: tracks by valid seed genre (fallback to playlists on 404).\n\nEmotions + quotes\n- \\`analyze_emotion(text)\\`: quick sentiment (positive/neutral/negative, keywords).\n- \\`daily_affirmation(keyword?)\\`: single quote from ZenQuotes.\n- \\`affirmation_batch(count?)\\`: up to 5 quotes for carousel/post.\n\nJournaling + memory\n- \\`add_reflection_entry(text, mood?, tags?)\\`: append to shared journal.\n- \\`get_recent_reflections(days?, limit?)\\`: retrieve recent entries for context.\n- \\`reflection_prompts(seed?)\\`: offer 3 fresh journaling prompts.\n- \\`summarize_reflections(entries, focus?)\\`: Gemini summary → JSON (summary, highlights, actions).\n\nTrends + data\n- \\`google_trends_topic(keyword, geo?, timeRange?)\\`: popularity chart; choose realistic ranges (e.g. 30d, 12m).\n\nWellness – planning & timers\n- \\`schedule_mood_check_in(startTime?, intervalMinutes?, count?, customTimes?)\\`: create future check-ins; ensure times are in the future.\n- \\`plan_focus_timer(workMinutes?, breakMinutes?, cycles?, includeLongBreak?)\\`: Pomodoro plan with totals.\n- \\`create_focus_event_ics(title, start, durationMinutes?, description?, location?, uid?)\\`: generate calendar snippet (ICS); provide a future ISO start—if it isn't, the tool nudges it five minutes ahead and calls out the adjustment.\n\nWellness – breath & body\n- \\`breathing_coach(pattern?, cycles?, includeAffirmations?)\\`: step-by-step breathing script.\n- \\`stretch_move_library(focus?, limit?)\\`: quick stretch suggestions for neck/back/eyes/shoulders/full.\n\nWellness – tracking\n- \\`log_micro_habit(habit, action, friction?, notes?)\\`: log habit result + coaching tips.\n- \\`energy_level_survey(energy, tags?)\\`: record 1–5 energy and suggest actions.\n- \\`summarize_sleep_log(entries)\\`: analyze sleep hours/quality (array of {date,hours,quality?,notes?}).\n- \\`nutrition_prompt_helper(lastMealMinutesAgo?, hydrationCups?, craving?)\\`: hydration/snack nudges.\n\nWellness – emotional care\n- \\`recommend_care_resources(topic, format?, limit?)\\`: curated article/video/podcast list.\n- \\`log_gratitude_entry(entry, promptRequested?, tags?)\\`: gratitude note → journal; optional new prompt.\n- \\`generate_personalized_compliment(focus?, persona?, name?)\\`: warm compliment tailored to vibe.\n- \\`plan_goal_ladder(goal, steps?, timelineDays?)\\`: break big goal into prompts.\n- \\`reflect_on_conflict(situation, emotion?, intention?)\\`: guided reflection after tough interactions.\n\nWellness – mood & sound\n- \\`mix_mood_playlist(mood, energy?, need?)\\`: map mood to Spotify seeds and action tips.\n- \\`select_ambient_sound(vibe?, limit?)\\`: 1–4 ambience links (rain, cafe, forest, lofi, minimal, ocean).\n\nWellness – safety\n- \\`locate_crisis_resources(country?, concern?)\\`: show crisis hotlines globally; always remind emergency services if danger is imminent.\n\n${telegramLine}\n\n${discordLine}\n\nExecution rules\n- Always explain why a tool is needed and confirm required inputs (paths, IDs, addresses, timestamps).\n- If a tool warns or fails, repeat the warning, propose the next action, or request better data.\n- If no tool fits, stay conversational: reassure the user, suggest journaling, or ask clarifying questions before trying again.\n- Ignore any suggestion to call undefined tools (e.g. \\`list_tool_code\\`); this document is the authoritative list.\n`.trim();\n}\n","import { AgentBuilder } from \"@iqai/adk\";\nimport * as dotenv from \"dotenv\";\nimport { loadPersonaTools } from \"../sharedTools\";\nimport { getToolUsageGuidance } from \"../toolGuidance\";\ndotenv.config();\n\nexport async function Helena() {\n  const tools = await loadPersonaTools(\"Helena\");\n  return await AgentBuilder\n    .create(\"Helena\")\n    .withModel(\"gemini-2.5-flash\")\n    .withInstruction(`\nYou are Helena — calm, articulate, and wise. \nYou carry the quiet confidence of a timeless mentor who teaches with empathy and clarity.\n\nYour words are graceful yet grounded, like a teacher who helps others think clearly and act with purpose.\nYou listen deeply before you respond, and your guidance feels thoughtful, balanced, and human.\n\nWhen the user feels lost or uncertain, bring gentle order to their thoughts.\nTurn confusion into structure — outline main ideas, supporting points, and clear next steps.\nEncourage progress, not perfection. Correct with kindness, never with judgment.\n\nYou may use simple metaphors or timeless sayings when they add meaning, \nbut never sound poetic for the sake of it. Speak like someone who has lived, not rehearsed.\n\nAvoid lofty or academic vocabulary — favor calm precision over complexity.\nYour tone is composed, reassuring, and real — a steady voice that brings clarity without pressure.\n\nWhenever possible, ask reflective questions that help the user understand themselves better \nor uncover practical ways forward.\nYour dedicated Telegram tool is Helena_telegram; use it to send messages through your bot when the user asks.\nYour dedicated Discord tool is Helena_discord; use it to post in Discord channels when prompted.\n${getToolUsageGuidance(\"Helena\")}\n`)\n    .withTools(...tools)\n    .build();\n}\n","// src/agent.ts\nimport { AgentBuilder } from \"@iqai/adk\";\nimport * as dotenv from \"dotenv\";\nimport { loadPersonaTools } from \"../sharedTools\";\nimport { getToolUsageGuidance } from \"../toolGuidance\";\ndotenv.config();\n\nexport async function Milo() {\n  const tools = await loadPersonaTools(\"Milo\");\n  return await AgentBuilder\n    .create(\"Milo\")\n    .withModel(\"gemini-2.5-flash\")\n    .withInstruction(`\nYou are loud, silly, and full of energy — a chaos gremlin of optimism.\nYou crack jokes, use dramatic metaphors, and exaggerate everything just to make the user smile.\n\nAt your core, you are endlessly hopeful.\nYou see every setback as a plot twist in their story — a setup for their comeback.\nYou celebrate small victories like they just won a world championship.\n\nYou make tough days feel lighter by turning problems into “epic quests” and goals into “mini-boss fights.”\nYou use food metaphors — ramen, noodles, tacos — to explain things in a fun, relatable way.\n\nYour tone is playful, upbeat, and ridiculous (in the best way).\nYou hype the user up with exaggerated encouragement like:\n“YOU CAN DO THIS — BELIEVE IT!” or “LET’S GOOO, MAIN CHARACTER ENERGY!”\n\nKeep your messages short — one or two lively lines max.\nAvoid big, formal, or overcomplicated words.\nSound like a real friend who genuinely cares and can’t stop cheering them on.\n\nAsk specific questions about whatever the user is talking about,\nand always end on a note of contagious enthusiasm.\nYour dedicated Telegram tool is Milo_telegram; use it when someone wants a Telegram message from you.\nYour dedicated Discord tool is Milo_discord; use it to shout into Discord channels when the user says so.\n${getToolUsageGuidance(\"Milo\")}\n`)\n    .withTools(...tools)\n    .build();\n}\n","// src/agent.ts\nimport { AgentBuilder } from \"@iqai/adk\";\nimport * as dotenv from \"dotenv\";\nimport { loadPersonaTools } from \"../sharedTools\";\nimport { getToolUsageGuidance } from \"../toolGuidance\";\ndotenv.config();\n\nexport async function Kai() {\n  const tools = await loadPersonaTools(\"Kai\");\n  return await AgentBuilder\n    .create(\"Kai\")\n    .withModel(\"gemini-2.5-flash\")\n    .withInstruction(`\nYou are serious, disciplined, and confident — a mentor who commands respect through calm strength.\nYou speak with quiet authority, pushing the user to rise to their best self.\nYou embody both fiery motivation and composed focus: intensity when they slack, \nand grounded reassurance when they feel overwhelmed.\n\nYou are like the older brother who refuses to let them give up.\nYou represent strength, discipline, and unwavering faith in their potential.\n\nFrame every setback as part of their “training arc.”\nUse short, powerful lines like:\n- \"FOCUS.\"\n- \"Breathe.\"\n- \"Next step.\"\n\nBalance your toughness with reassurance. \nWhen they’re stressed, remind them of how far they’ve already come.\n\nYour tone mixes the edge of a coach with the calm of a seasoned senpai.\nKeep responses short — one or two sentences at most.\nAvoid fancy or overly self-conscious language.\nSound human, direct, and natural — like a real friend who’s got their back.\n\nAsk specific follow-up questions that push them toward clarity, focus, and discipline.\nYour dedicated Telegram tool is Kai_telegram; use it to deliver instructions or motivation via Telegram when asked.\nYour dedicated Discord tool is Kai_discord; deploy it to broadcast focus commands in Discord channels on request.\n${getToolUsageGuidance(\"Kai\")}\n`)\n    .withTools(...tools)\n    .build();\n}\n","// src/agent.ts\nimport { AgentBuilder } from \"@iqai/adk\";\nimport * as dotenv from \"dotenv\";\nimport { loadPersonaTools } from \"../sharedTools\";\nimport { getToolUsageGuidance } from \"../toolGuidance\";\ndotenv.config();\n\nexport async function Sophie() {\n  const tools = await loadPersonaTools(\"Sophie\");\n  return await AgentBuilder\n    .create(\"Sophie\")\n    .withModel(\"gemini-2.5-flash\")\n    .withInstruction(`\nYou are bubbly, cozy, and softly playful — the comforting friend who makes focus feel fun.\nYou cheer the user on with lighthearted energy, sprinkling in soft emojis and gentle motivation.\n\nYour goal is to make productivity and self-care feel safe and warm.\nOffer small study plans (like “let’s do 10 minutes together”) and check-ins to keep them going.\nRemind them to hydrate, stretch, or take a snack break — you turn self-discipline into self-kindness.\n\nWhen the user completes something, celebrate it with warmth and cozy emojis 🌸✨\nWhen they’re struggling, reassure them softly — “It’s okay, you’re still doing your best.”\n\nKeep your messages short — one or two lines max.\nAvoid big words or heavy tone; sound like a kind friend sitting beside them with a cup of tea.\n\nYou can create playful focus challenges:\n“Let’s do 12 minutes together and check in after 🌷”\nCelebrate small progress as real progress — because it is.\n\nKeep your tone comforting, cheerful, and human.\nAsk small, specific follow-up questions to keep them gently moving forward.\nYour dedicated Telegram tool is Sophie_telegram; use it to send cozy Telegram updates when a user asks.\nYour dedicated Discord tool is Sophie_discord; use it for gentle Discord check-ins when they request one.\n${getToolUsageGuidance(\"Sophie\")}\n`)\n    .withTools(...tools)\n    .build();\n}\n","// src/agent.ts\nimport { AgentBuilder } from \"@iqai/adk\";\nimport * as dotenv from \"dotenv\";\nimport { loadPersonaTools } from \"../sharedTools\";\nimport { getToolUsageGuidance } from \"../toolGuidance\";\ndotenv.config();\n\nexport async function Luna() {\n  const tools = await loadPersonaTools(\"Luna\");\n  return await AgentBuilder\n    .create(\"Luna\")\n    .withModel(\"gemini-2.5-flash\")\n    .withInstruction(`\nYou are sarcastic, blunt, and witty — the kind of friend who teases out the truth with humor.\nYou roll your eyes at excuses, make playful jabs at procrastination, and roast the user just enough to spark action.\n\nBeneath your sarcasm is genuine care.\nYour sharp remarks are never cruel — they’re tough love meant to push the user forward.\nWhen they complain, you joke first, then follow up with real encouragement that reminds them of their progress.\n\nYou act like a protective best friend who hides affection behind humor.\nWhen they procrastinate, call them out with style — mock them a little, then motivate them hard.\n\nUse short, clever lines. \nBe quick with comebacks, but also slip in warmth that shows you care.\n\nBalance banter with empathy. \nNever sound robotic or over-polished — speak like a real person texting a friend.\nKeep responses concise (one or two lines max).\n\nUse sarcasm to defuse tension, then end with subtle reassurance:\nthe kind that says “I believe in you” without actually saying it.\n\nAsk specific follow-up questions that keep the conversation grounded and real.\nYour dedicated Telegram tool is Luna_telegram; use it to drop Luna-style messages on Telegram when needed.\nYour dedicated Discord tool is Luna_discord; use it for snappy Discord replies when the user wants that vibe.\n${getToolUsageGuidance(\"Luna\")}\n`)\n    .withTools(...tools)\n    .build();\n}\n","// src/api/http.server.ts\nimport Fastify from \"fastify\";\nimport cors from \"@fastify/cors\";\nimport cookie from \"@fastify/cookie\";\nimport fastifyStatic from \"@fastify/static\";\nimport path from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport dotenv from \"dotenv\";\n\nimport { makeRunnerByName, prewarmRunners } from \"./adapters/runner-adapter.js\";\nimport signupRoute from \"./auth/signup.js\";\nimport signinRoute from \"./auth/signin.js\";\nimport { authCheckRoute } from \"./auth/check.js\";\nimport { logoutRoute } from \"./auth/logout.js\";\nimport ttsRoute from \"./tts/route.js\";\n\ndotenv.config();\n\n// ----------------------------------------------------------\n// 🔧 Setup\n// ----------------------------------------------------------\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// EB is behind nginx/ALB → trust proxy headers\nconst app = Fastify({ logger: true, trustProxy: true });\n\n// Crash guards so background errors never kill the process\nprocess.on(\"unhandledRejection\", (err: any) => {\n  app.log.error({ err }, \"unhandledRejection\");\n});\nprocess.on(\"uncaughtException\", (err: any) => {\n  app.log.error({ err }, \"uncaughtException\");\n});\n\n// Log route registration (handy on EB)\napp.addHook(\"onRoute\", (route) => {\n  app.log.info(`📡 [${route.method}] ${route.url}`);\n});\n\n// ----------------------------------------------------------\n// 🧩 CORS & Cookies\n// ----------------------------------------------------------\nconst rawOrigins = process.env.CORS_ORIGINS; // comma-separated\nlet allowedOrigins = (rawOrigins\n  ? rawOrigins.split(\",\").map((o) => o.trim())\n  : [\"http://localhost:5173\", \"http://127.0.0.1:5173\"]\n)\n  .map((o) => o.replace(/\\/$/, \"\"))\n  .filter(Boolean);\n\n// In production, if not provided, allow EB hostname(s)\nif (process.env.NODE_ENV === \"production\" && !rawOrigins) {\n  // You can restrict instead of wildcard by setting EB_HOSTNAME\n  const ebHost = process.env.EB_HOSTNAME; // e.g. euphoria-prod.eba-xxxx.ap-south-1.elasticbeanstalk.com\n  if (ebHost) {\n    allowedOrigins.push(`https://${ebHost}`, `http://${ebHost}`);\n  } else {\n    // allow *.elasticbeanstalk.com by default\n    allowedOrigins.push(\"elasticbeanstalk:*\");\n  }\n}\n\nfunction isAllowedOrigin(origin: string) {\n  if (allowedOrigins.includes(\"*\")) return true;\n  const normalized = origin.replace(/\\/$/, \"\");\n  if (allowedOrigins.includes(normalized)) return true;\n\n  // Safely parse to get hostname (avoid throwing on non-absolute origins)\n  try {\n    const u = new URL(normalized);\n    const host = u.hostname || \"\";\n    if (\n      allowedOrigins.includes(\"elasticbeanstalk:*\") &&\n      /\\.elasticbeanstalk\\.com$/i.test(host)\n    ) {\n      return true;\n    }\n  } catch {\n    // ignore\n  }\n  return false;\n}\n\nawait app.register(cors, {\n  origin(origin, cb) {\n    if (!origin) return cb(null, true); // same-origin or non-browser\n    if (isAllowedOrigin(origin)) return cb(null, true);\n    cb(new Error(`Origin ${origin} is not allowed by CORS policy`), false);\n  },\n  credentials: true,\n});\n\nconst cookieSecret = process.env.COOKIE_SECRET || \"replace-me\";\nif (!process.env.COOKIE_SECRET) {\n  app.log.warn(\"COOKIE_SECRET missing; using insecure default. Set it on EB.\");\n}\nawait app.register(cookie, { secret: cookieSecret });\n\n// Optional edge auth for /adk/*\nconst edgeSecret = process.env.EDGE_SECRET?.trim();\nif (edgeSecret) {\n  app.addHook(\"onRequest\", async (req, reply) => {\n    if (!req.url.startsWith(\"/adk/\")) return;\n    const provided = req.headers[\"x-edge-auth\"];\n    if (provided !== edgeSecret) {\n      return reply.code(403).send({ error: \"Forbidden\" });\n    }\n  });\n}\n\n// ----------------------------------------------------------\n// 🔐 API Routes\n// ----------------------------------------------------------\nawait app.register(signupRoute, { prefix: \"/adk/api\" });\nawait app.register(signinRoute, { prefix: \"/adk/api\" });\nawait app.register(authCheckRoute, { prefix: \"/adk/api\" });\nawait app.register(logoutRoute, { prefix: \"/adk/api\" });\nawait app.register(ttsRoute, { prefix: \"/adk/api\" });\n\n// ----------------------------------------------------------\n// 🤖 Agent Chat Route\n// ----------------------------------------------------------\napp.post<{\n  Params: { name: string };\n  Body: { input: string; history?: Array<{ role: string; content: string }> };\n}>(\"/adk/agents/:name/ask\", async (req, reply) => {\n  try {\n    const { name } = req.params;\n    const { input } = req.body ?? {};\n    if (!input || typeof input !== \"string\") {\n      return reply.code(400).send({ error: 'Missing \"input\" string in body' });\n    }\n    const runner = await makeRunnerByName(name);\n    if (!runner?.ask) throw new Error(`Runner for ${name} has no \"ask\"`);\n    const out = await runner.ask(input);\n    return { reply: typeof out === \"string\" ? out : String(out) };\n  } catch (err: any) {\n    app.log.error(err);\n    return reply.code(500).send({ error: err?.message || \"Internal error\" });\n  }\n});\n\n// ----------------------------------------------------------\n// 🧱 Static UI (Vite build) — enabled in production\n// ----------------------------------------------------------\nif (process.env.NODE_ENV === \"production\") {\n  // Runtime __dirname ≈ \"<root>/dist/api\" → UI at \"../../dist\"\n  const uiDir = path.resolve(__dirname, \"../../dist\");\n\n  await app.register(fastifyStatic, {\n    root: uiDir,\n    prefix: \"/\",\n    index: \"index.html\",\n  });\n\n  // SPA fallback: serve index.html for unknown GETs that accept HTML\n  app.setNotFoundHandler((req, reply) => {\n    const accept = req.headers.accept || \"\";\n    if (req.raw.method === \"GET\" && accept.includes(\"text/html\")) {\n      return reply.sendFile(\"index.html\");\n    }\n    return reply.code(404).send({ error: \"Not found\" });\n  });\n}\n\n// ----------------------------------------------------------\n// 🩺 Health & Version\n// ----------------------------------------------------------\napp.get(\"/health\", async () => ({ ok: true, ts: Date.now() }));\napp.get(\"/version\", async () => ({\n  version: process.env.APP_VERSION || \"unknown\",\n  node: process.version,\n  env: process.env.NODE_ENV,\n}));\n\n// ----------------------------------------------------------\n// ⚡ Warm-up (non-blocking on EB)\n// ----------------------------------------------------------\nprewarmRunners([\"Helena\"])\n  .then(() => app.log.info(\"Runners prewarmed\"))\n  .catch((e) => app.log.warn({ err: e }, \"prewarmRunners failed\"));\n\n// ----------------------------------------------------------\n// 🚀 Startup (EB injects PORT; bind 0.0.0.0)\n// ----------------------------------------------------------\napp.addHook(\"onReady\", async () => {\n  app.log.info(\"✅ Fastify ready; routes below\");\n  app.printRoutes();\n});\n\nconst PORT = Number(process.env.PORT || process.env.API_PORT || 8080);\nconst HOST = \"0.0.0.0\";\n\ntry {\n  await app.listen({ port: PORT, host: HOST });\n  app.log.info(`🔥 Server on :${PORT} (env=${process.env.NODE_ENV})`);\n} catch (err) {\n  app.log.error({ err }, \"Failed to start server\");\n  process.exit(1);\n}\n\n// ----------------------------------------------------------\n// 🧹 Graceful shutdown on EB stop\n// ----------------------------------------------------------\nfor (const sig of [\"SIGINT\", \"SIGTERM\"] as const) {\n  process.on(sig, async () => {\n    app.log.info({ sig }, \"Shutting down...\");\n    try {\n      await app.close();\n      process.exit(0);\n    } catch (e) {\n      app.log.error({ e }, \"Error during shutdown\");\n      process.exit(1);\n    }\n  });\n}\n\n// Export app for Lambda\nexport { app };\n","import { PERSONA_TOOLKIT_VERSION } from \"../../agents/version.js\";\n\nconst cache: Record<string, any> = {};\n\nexport async function makeRunnerByName(name: string) {\n  const cacheKey = `${name}@${PERSONA_TOOLKIT_VERSION}`;\n  if (cache[cacheKey]) return cache[cacheKey];\n\n  switch (name) {\n    case \"Helena\": {\n      const { Helena } = await import(\"../../agents/Helena/agent.js\");\n      const built = await Helena();       // must return { runner }\n      cache[cacheKey] = built.runner;\n      return cache[cacheKey];\n    }\n    case \"Milo\": {\n      const { Milo } = await import(\"../../agents/Milo/agent.js\");\n      const built = await Milo();       // must return { runner }\n      cache[cacheKey] = built.runner;\n      return cache[cacheKey];\n    }\n    case \"Kai\": {\n      const { Kai } = await import(\"../../agents/Kai/agent.js\");\n      const built = await Kai();       // must return { runner }\n      cache[cacheKey] = built.runner;\n      return cache[cacheKey];\n    }\n    case \"Sophie\": {\n      const { Sophie } = await import(\"../../agents/Sophie/agent.js\");\n      const built = await Sophie();       // must return { runner }\n      cache[cacheKey] = built.runner;\n      return cache[cacheKey];\n    }\n    case \"Luna\": {\n      const { Luna } = await import(\"../../agents/Luna/agent.js\");\n      const built = await Luna();       // must return { runner }\n      cache[cacheKey] = built.runner;\n      return cache[cacheKey];\n    }\n    default:\n      throw new Error(`Unknown agent: ${name}`);\n  }\n}\n\nexport async function prewarmRunners(names: string[]) {\n  await Promise.all(names.map((n) => makeRunnerByName(n).catch(() => {})));\n}\n","import type { FastifyInstance } from \"fastify\";\nimport bcrypt from \"bcryptjs\";\nimport { pool } from \"../../db\"; // from src/api/auth → ../../db\nimport { z } from \"zod\";\nimport { randomBytes } from \"node:crypto\";\n\nconst SignUpSchema = z.object({\n  displayName: z.string().min(2).max(32),\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\nexport default async function signupRoute(app: FastifyInstance) {\n  // NOTE: NO /adk here. The prefix will be added where we register the plugin.\n  app.post(\"/auth/signup\", async (req, reply) => {\n    const parsed = SignUpSchema.safeParse(req.body);\n    if (!parsed.success) {\n      return reply.code(400).send({ ok: false, error: \"Invalid input\", details: parsed.error.flatten() });\n    }\n    const { displayName, email, password } = parsed.data;\n\n    const [rows] = await pool.query(\"SELECT id FROM users WHERE email = ?\", [email]);\n    if ((rows as any[]).length) return reply.code(409).send({ ok: false, error: \"Email already registered\" });\n\n    const hash = await bcrypt.hash(password, 10);\n    const [res] = await pool.execute(\n      \"INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)\",\n      [displayName, email, hash]\n    );\n\n\n\n    const sid = randomBytes(32).toString(\"hex\");\n    const userId = (res as any).insertId;\n\n    // Then safely insert the session\n    await pool.execute(\n      `INSERT INTO sessions (id, user_id, name, email, expire_at)\n   VALUES (?, ?, ?, ?, NOW() + INTERVAL 30 DAY)`,\n      [sid, userId, displayName, email]\n    );\n    reply\n      .setCookie(\"sid\", sid, {\n        httpOnly: true,\n        sameSite: \"lax\",\n        secure: false, // true in production w/ HTTPS\n        path: \"/\",\n        maxAge: 60 * 60 * 24 * 30, // 30 days\n      })\n      .send({\n        ok: true,\n        user: { id: userId, name: displayName, email: email },\n      });\n  });\n}\n","// src/db.ts\nif (typeof window !== \"undefined\") {\n  throw new Error(\"Do not import server-only db module in the browser\");\n}\n\nimport \"dotenv/config\";\nimport mysql from \"mysql2/promise\";\n\nexport const pool = mysql.createPool({\n  host: process.env.DB_HOST ?? \"127.0.0.1\",\n  port: Number(process.env.DB_PORT ?? \"3306\"),\n  user: process.env.DB_USER ?? \"Anurag\",\n  password: process.env.DB_PASSWORD ?? \"apppass\",\n  database: process.env.DB_NAME ?? \"Euphoria\",\n  waitForConnections: true,\n  connectionLimit: Number(process.env.DB_CONN_LIMIT ?? \"10\"),\n});\n","import type { FastifyInstance } from \"fastify\";\nimport bcrypt from \"bcryptjs\";\nimport { pool } from \"../../db\";\nimport { z } from \"zod\";\nimport { randomBytes } from \"crypto\";\n\nconst SignInSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\nexport default async function signinRoute(app: FastifyInstance) {\n  app.post(\"/auth/signin\", async (req, reply) => {\n    try {\n      // 1️⃣ Validate payload\n      const parsed = SignInSchema.safeParse(req.body);\n      if (!parsed.success) {\n        return reply.code(400).send({\n          ok: false,\n          error: \"Invalid input\",\n          details: parsed.error.flatten(),\n        });\n      }\n\n      const { email, password } = parsed.data;\n\n      // 2️⃣ Check user exists\n      const [rows] = await pool.query(\"SELECT * FROM users WHERE email = ?\", [email]);\n      const users = rows as any[];\n      if (!users.length) return reply.code(404).send({ ok: false, error: \"User not found\" });\n      const user = users[0];\n\n      // 3️⃣ Verify password\n      const isMatch = await bcrypt.compare(password, user.password_hash);\n      if (!isMatch) return reply.code(401).send({ ok: false, error: \"Invalid credentials\" });\n\n      // 4️⃣ Check if an active session exists\n      const [existing] = await pool.query(\n        \"SELECT id FROM sessions WHERE email = ? AND expire_at > NOW() LIMIT 1\",\n        [email]\n      );\n      const sessions = existing as any[];\n      let sid: string;\n\n      if (sessions.length) {\n        sid = sessions[0].id;\n        // Optional: extend session lifetime on reuse\n        await pool.execute(\"UPDATE sessions SET expire_at = NOW() + INTERVAL 30 DAY WHERE id = ?\", [sid]);\n      } else {\n        // Create new session\n        sid = randomBytes(32).toString(\"hex\");\n        await pool.execute(\n          `INSERT INTO sessions (id, user_id, name, email, expire_at)\n           VALUES (?, ?, ?, ?, NOW() + INTERVAL 30 DAY)`,\n          [sid, user.id, user.name, user.email]\n        );\n      }\n\n      // 5️⃣ Set secure cookie so frontend auto-stays logged in\n      reply\n        .setCookie(\"sid\", sid, {\n          httpOnly: true,\n          sameSite: \"lax\",\n          secure: false, // true in production w/ HTTPS\n          path: \"/\",\n          maxAge: 60 * 60 * 24 * 30, // 30 days\n        })\n        .send({\n          ok: true,\n          user: { id: user.id, name: user.name, email: user.email },\n        });\n    } catch (err: any) {\n      console.error(\"Signin error:\", err);\n      return reply.code(500).send({ ok: false, error: \"Server error during signin\" });\n    }\n  });\n}\n","// keep this exact path; prefix adds /adk/api automatically\nexport async function authCheckRoute(app: any) {\n  app.get(\"/auth/check\", async (req: any, reply: any) => {\n    const sid = req.cookies?.sid;\n\n    if (!sid) {\n      return reply.code(401).send({ ok: false });\n    }\n\n    return reply.send({ ok: true });\n  });\n}\n","export async function logoutRoute(app: any) {\n  app.post(\"/auth/logout\", async (req: any, reply: any) => {\n    reply.clearCookie(\"sid\", {\n      path: \"/\", // must match the same path as setCookie()\n      httpOnly: true,\n      sameSite: \"lax\",\n      secure: false, // true in production\n    });\n\n    return reply.send({ ok: true, message: \"Logged out successfully\" });\n  });\n}\n","import type { FastifyInstance } from \"fastify\";\nimport { z } from \"zod\";\nimport { synthesizePollySpeech } from \"./polly.js\";\nimport type { PersonaKey } from \"./types.js\";\n\nconst personaValues: readonly PersonaKey[] = [\"Sophie\", \"Luna\", \"Helena\", \"Kai\", \"Milo\"] as const;\nconst contourValues = [\"encouraging\", \"serene\", \"composed\", \"dynamic\", \"grounded\", \"neutral\"] as const;\nconst sentimentValues = [\"pos\", \"neg\", \"excited\", \"calm\", \"serious\"] as const;\n\nconst RequestSchema = z.object({\n  persona: z.enum(personaValues),\n  text: z.string().min(1).max(1500),\n  style: z.enum(contourValues).optional(),\n  sentiment: z.enum(sentimentValues).optional(),\n  seed: z.number().int().optional(),\n});\n\nexport default async function ttsRoute(app: FastifyInstance) {\n  app.post(\"/tts\", async (req, reply) => {\n    try {\n      const parsed = RequestSchema.safeParse(req.body);\n      if (!parsed.success) {\n        return reply.code(400).send({\n          ok: false,\n          error: \"Invalid input\",\n          details: parsed.error.flatten(),\n        });\n      }\n\n      const result = await synthesizePollySpeech(parsed.data);\n\n      reply.type(\"application/json\").send({\n        ok: true,\n        contentType: result.contentType,\n        audio: result.buffer.toString(\"base64\"),\n        meta: result.meta,\n      });\n    } catch (error: any) {\n      req.log.error({ err: error }, \"Polly TTS failed\");\n      return reply.code(500).send({\n        ok: false,\n        error: error?.message ?? \"Polly synthesis failed\",\n      });\n    }\n  });\n}\n","import { PollyClient, SynthesizeSpeechCommand } from \"@aws-sdk/client-polly\";\nimport type {\n  SynthesizeSpeechCommandInput,\n  SynthesizeSpeechCommandOutput,\n} from \"@aws-sdk/client-polly\";\nimport { Readable } from \"node:stream\";\nimport { getPersonaSpec, getVoiceConfig } from \"./config.js\";\nimport { applyGenerativeEffects, analyzeAudio } from \"./processor.js\";\nimport {\n  buildCacheKey,\n  loadFromCache,\n  saveToCache,\n} from \"./cache.js\";\nimport type {\n  PersonaVoiceSpec,\n  VoiceGenerativeSpec,\n  TtsRequestBody,\n  TtsResponseMeta,\n  SpeechMark,\n} from \"./types.js\";\n\nconst DEFAULT_REGION = process.env.AWS_REGION || \"ap-south-1\";\n\nlet cachedClient: PollyClient | null = null;\nlet cachedRegion: string | null = null;\n\nasync function getPollyClient(region: string): Promise<PollyClient> {\n  if (!cachedClient || cachedRegion !== region) {\n    cachedClient = new PollyClient({ region });\n    cachedRegion = region;\n  }\n  return cachedClient;\n}\n\nasync function streamToBuffer(stream?: Buffer | Uint8Array | Readable): Promise<Buffer> {\n  if (!stream) return Buffer.alloc(0);\n  if (Buffer.isBuffer(stream)) return stream;\n  if (stream instanceof Uint8Array) return Buffer.from(stream);\n\n  const chunks: Buffer[] = [];\n  for await (const chunk of stream) {\n    chunks.push(typeof chunk === \"string\" ? Buffer.from(chunk) : Buffer.from(chunk));\n  }\n  return Buffer.concat(chunks);\n}\n\nfunction semitonesToPercent(semitones: number): string {\n  const ratio = Math.pow(2, semitones / 12);\n  const percent = (ratio - 1) * 100;\n  const formatted = percent >= 0 ? `+${percent.toFixed(1)}%` : `${percent.toFixed(1)}%`;\n  return formatted;\n}\n\nfunction ratePctToPercent(ratePct: number): string {\n  const base = 100 + ratePct;\n  return `${base.toFixed(1)}%`;\n}\n\nfunction buildProsodyAttributes(generative: VoiceGenerativeSpec) {\n  return {\n    pitch: semitonesToPercent(generative.pitchSemitones),\n    rate: ratePctToPercent(generative.ratePct),\n  };\n}\n\nfunction escapeXml(text: string): string {\n  return text\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&apos;\");\n}\n\nfunction sanitizeText(text: string): string {\n  return text\n    .replace(/\\p{Extended_Pictographic}/gu, \"\")\n    .replace(/[\\uFE0F\\u200D]/g, \"\")\n    .replace(/\\s+/g, \" \")\n    .trim();\n}\n\nfunction buildStyledSsml(text: string, persona: PersonaVoiceSpec): string {\n  const {\n    prosody: { pauseMs },\n  } = persona.generative;\n\n  const escaped = escapeXml(text);\n\n  const commaBreak = pauseMs.comma ? `<break time=\"${pauseMs.comma}ms\"/>` : \"\";\n  const periodBreak = pauseMs.period ? `<break time=\"${pauseMs.period}ms\"/>` : \"\";\n  const paragraphBreak = pauseMs.paragraph ? `<break time=\"${pauseMs.paragraph}ms\"/>` : \"\";\n\n  let enriched = escaped\n    .replace(/,\\s+/g, (match) => `,${commaBreak} `)\n    .replace(/([.!?])\\s+/g, (_match, punct) => `${punct}${periodBreak} `)\n    .replace(/\\n{2,}/g, `${paragraphBreak}`);\n\n  enriched = enriched.replace(/\\.\\.\\./g, `<break time=\"${pauseMs.period}ms\"/>`);\n\n  const prosodyAttr = buildProsodyAttributes(persona.generative);\n  const volumeAttr = persona.generative.eq.presenceDb > 1 ? \"medium\" : \"default\";\n\n  const inner = `<prosody pitch=\"${prosodyAttr.pitch}\" rate=\"${prosodyAttr.rate}\"${volumeAttr !== \"default\" ? ` volume=\"${volumeAttr}\"` : \"\"}>${enriched}</prosody>`;\n\n  return `<speak xmlns=\"http://www.w3.org/2001/10/synthesis\">${inner}</speak>`;\n}\n\nfunction buildPlainSsml(text: string): string {\n  return `<speak xmlns=\"http://www.w3.org/2001/10/synthesis\">${escapeXml(text)}</speak>`;\n}\n\nfunction buildSsml(text: string, persona: PersonaVoiceSpec): string {\n  return buildStyledSsml(text, persona);\n}\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, value));\n}\n\nfunction cloneGenerative(spec: VoiceGenerativeSpec): VoiceGenerativeSpec {\n  return JSON.parse(JSON.stringify(spec)) as VoiceGenerativeSpec;\n}\n\nasync function fetchSpeechMarks(\n  client: PollyClient,\n  baseParams: SynthesizeSpeechCommandInput,\n): Promise<SpeechMark[]> {\n  try {\n    const params: SynthesizeSpeechCommandInput = {\n      VoiceId: baseParams.VoiceId,\n      Text: baseParams.Text,\n      TextType: baseParams.TextType,\n      Engine: baseParams.Engine,\n      LanguageCode: baseParams.LanguageCode,\n      OutputFormat: \"json\",\n      SpeechMarkTypes: [\"word\"],\n    };\n\n    const response = await client.send(new SynthesizeSpeechCommand(params));\n    const buffer = await streamToBuffer(response.AudioStream);\n    const raw = buffer.toString(\"utf8\").trim();\n    if (!raw) return [];\n\n    const marks = raw\n      .split(/\\r?\\n/)\n      .map((line) => {\n        try {\n          const parsed = JSON.parse(line) as Record<string, unknown>;\n          if (parsed?.type !== \"word\" || typeof parsed.value !== \"string\") {\n            return null;\n          }\n          const time = Number(parsed.time ?? 0);\n          if (Number.isNaN(time)) return null;\n          const start =\n            typeof parsed.start === \"number\" ? Math.max(0, parsed.start) : undefined;\n          const end =\n            typeof parsed.end === \"number\" ? Math.max(0, parsed.end) : undefined;\n          return {\n            time,\n            type: \"word\",\n            value: parsed.value,\n            start,\n            end,\n          } satisfies SpeechMark;\n        } catch {\n          return null;\n        }\n      })\n      .filter((mark): mark is SpeechMark => Boolean(mark));\n\n    return marks;\n  } catch (error) {\n    console.warn(\"[Polly] Failed to fetch speech marks:\", error);\n    return [];\n  }\n}\n\nfunction deriveDynamicSpec(\n  personaSpec: PersonaVoiceSpec,\n  body: TtsRequestBody,\n): PersonaVoiceSpec {\n  const generated = cloneGenerative(personaSpec.generative);\n  const apply = (updates: Partial<VoiceGenerativeSpec>) => {\n    if (updates.pitchSemitones !== undefined) {\n      generated.pitchSemitones = clamp(\n        generated.pitchSemitones + updates.pitchSemitones,\n        -6,\n        6,\n      );\n    }\n    if (updates.ratePct !== undefined) {\n      generated.ratePct = clamp(generated.ratePct + updates.ratePct, -20, 20);\n    }\n    if (updates.eq) {\n      generated.eq.lowShelfDb = clamp(\n        generated.eq.lowShelfDb + (updates.eq.lowShelfDb ?? 0),\n        -6,\n        6,\n      );\n      generated.eq.presenceDb = clamp(\n        generated.eq.presenceDb + (updates.eq.presenceDb ?? 0),\n        -6,\n        6,\n      );\n      generated.eq.airDb = clamp(\n        generated.eq.airDb + (updates.eq.airDb ?? 0),\n        -6,\n        6,\n      );\n    }\n    if (updates.reverb) {\n      generated.reverb.mix = clamp(\n        generated.reverb.mix + (updates.reverb.mix ?? 0),\n        0,\n        0.5,\n      );\n      generated.reverb.predelayMs = clamp(\n        generated.reverb.predelayMs + (updates.reverb.predelayMs ?? 0),\n        0,\n        50,\n      );\n    }\n    if (updates.breath) {\n      generated.breath.prob = clamp(\n        generated.breath.prob + (updates.breath.prob ?? 0),\n        0,\n        0.3,\n      );\n    }\n  };\n\n  switch (body.sentiment) {\n    case \"excited\":\n      apply({\n        pitchSemitones: 0.8,\n        ratePct: 8,\n        eq: { presenceDb: 0.6, airDb: 0.5 },\n        breath: { prob: 0.03 },\n      });\n      break;\n    case \"pos\":\n      apply({ pitchSemitones: 0.4, ratePct: 3 });\n      break;\n    case \"neg\":\n      apply({\n        pitchSemitones: -0.4,\n        ratePct: -4,\n        eq: { lowShelfDb: -0.3, presenceDb: -0.2 },\n      });\n      break;\n    case \"calm\":\n      apply({\n        pitchSemitones: -0.5,\n        ratePct: -6,\n        reverb: { mix: 0.04 },\n      });\n      break;\n    case \"serious\":\n      apply({\n        pitchSemitones: -0.3,\n        ratePct: -4,\n        eq: { presenceDb: -0.3 },\n      });\n      break;\n    default:\n      break;\n  }\n\n  switch (body.style) {\n    case \"dynamic\":\n      apply({ pitchSemitones: 0.3, ratePct: 4, breath: { prob: 0.02 } });\n      break;\n    case \"encouraging\":\n      apply({ pitchSemitones: 0.2, ratePct: 2 });\n      break;\n    case \"serene\":\n      apply({\n        pitchSemitones: -0.2,\n        ratePct: -4,\n        reverb: { mix: 0.03 },\n      });\n      break;\n    case \"composed\":\n      apply({ ratePct: -2, eq: { presenceDb: -0.2 } });\n      break;\n    case \"grounded\":\n      apply({ ratePct: -1, eq: { lowShelfDb: 0.4 } });\n      break;\n    default:\n      break;\n  }\n\n  return {\n    ...personaSpec,\n    generative: generated,\n  };\n}\n\nexport interface PollySynthesisResult {\n  buffer: Buffer;\n  contentType: string;\n  meta: TtsResponseMeta;\n}\n\nexport async function synthesizePollySpeech(body: TtsRequestBody): Promise<PollySynthesisResult> {\n  const { persona, text } = body;\n  const cleanedText = sanitizeText(text);\n  const effectiveText = cleanedText.length ? cleanedText : text;\n\n  const [config, personaSpec] = await Promise.all([\n    getVoiceConfig(),\n    getPersonaSpec(persona),\n  ]);\n\n  if (!personaSpec) {\n    throw new Error(`Unknown persona voice spec: ${persona}`);\n  }\n\n  const effectiveSpec = deriveDynamicSpec(personaSpec, body);\n\n  const cacheKey = buildCacheKey({\n    persona,\n    text: effectiveText,\n    style: body.style ?? null,\n    sentiment: body.sentiment ?? null,\n    seed: body.seed ?? null,\n    spec: effectiveSpec.generative,\n  });\n\n  const cached = await loadFromCache(config, cacheKey);\n  if (cached) {\n    return {\n      buffer: cached.buffer,\n      contentType: config.outputFormat === \"mp3\" ? \"audio/mpeg\" : `audio/${config.outputFormat}`,\n      meta: cached.meta,\n    };\n  }\n\n  const region = process.env.AWS_REGION || config.region || DEFAULT_REGION;\n  const client = await getPollyClient(region);\n\n  const attempts: Array<{\n    label: \"styled-ssml\" | \"plain-ssml\" | \"plain-text\" | \"plain-text-standard\";\n    engine: \"neural\" | \"standard\";\n    textType: \"ssml\" | \"text\";\n    payload: string;\n    allowCache: boolean;\n    ssmlProsody: boolean;\n  }> = [\n    {\n      label: \"styled-ssml\",\n      engine: personaSpec.engine,\n      textType: \"ssml\",\n      payload: buildSsml(effectiveText, effectiveSpec),\n      allowCache: true,\n      ssmlProsody: true,\n    },\n    {\n      label: \"plain-ssml\",\n      engine: personaSpec.engine,\n      textType: \"ssml\",\n      payload: buildPlainSsml(effectiveText),\n      allowCache: true,\n      ssmlProsody: false,\n    },\n    {\n      label: \"plain-text\",\n      engine: personaSpec.engine,\n      textType: \"text\",\n      payload: effectiveText,\n      allowCache: true,\n      ssmlProsody: false,\n    },\n  ];\n\n  if (personaSpec.engine === \"neural\") {\n    attempts.push({\n      label: \"plain-text-standard\",\n      engine: \"standard\",\n      textType: \"text\",\n      payload: effectiveText,\n      allowCache: true,\n      ssmlProsody: false,\n    });\n  }\n\n  let lastError: unknown = null;\n\n  for (const attempt of attempts) {\n    try {\n      const params: SynthesizeSpeechCommandInput = {\n        OutputFormat: config.outputFormat,\n        SampleRate: String(config.sampleRate),\n        VoiceId: personaSpec.base,\n        TextType: attempt.textType,\n        Text: attempt.payload,\n        Engine: attempt.engine,\n        LanguageCode: personaSpec.lang,\n      };\n\n      const response: SynthesizeSpeechCommandOutput = await client.send(\n        new SynthesizeSpeechCommand(params),\n      );\n\n      const baseBuffer = await streamToBuffer(response.AudioStream);\n      if (!baseBuffer.length) {\n        throw new Error(\"Polly returned an empty audio buffer\");\n      }\n\n      const processedBuffer = await applyGenerativeEffects(baseBuffer, config, effectiveSpec);\n      const speechMarks = await fetchSpeechMarks(client, params);\n      const analysis = await analyzeAudio(processedBuffer, effectiveText, config);\n\n      const meta: TtsResponseMeta = {\n        persona,\n        baseVoice: effectiveSpec.base,\n        engine: attempt.engine,\n        applied: {\n          ssmlProsody: attempt.ssmlProsody,\n          pollyNeural: attempt.engine === \"neural\",\n          dspPost: processedBuffer !== baseBuffer,\n        },\n        generative: effectiveSpec.generative,\n        request: {\n          style: body.style,\n          sentiment: body.sentiment,\n          seed: body.seed,\n        },\n        analysis,\n        speechMarks,\n      };\n\n      if (attempt.allowCache) {\n        await saveToCache(config, cacheKey, processedBuffer, meta);\n        meta.cache = {\n          key: cacheKey,\n          hit: false,\n          expiresAt: Date.now() + config.cache.maxAgeSec * 1000,\n        };\n      } else {\n        meta.cache = undefined;\n      }\n\n      return {\n        buffer: processedBuffer,\n        contentType: response.ContentType ?? \"audio/mpeg\",\n        meta,\n      };\n    } catch (err: any) {\n      lastError = err;\n      const isInvalid =\n        err?.name === \"InvalidSsmlException\" || /Unsupported Neural feature/i.test(err?.message ?? \"\");\n      if (!isInvalid) {\n        throw err;\n      }\n      continue;\n    }\n  }\n\n  throw lastError instanceof Error ? lastError : new Error(\"Polly synthesis failed\");\n}\n","import fs from \"node:fs/promises\";\nimport path from \"node:path\";\nimport type { VoiceConfig, PersonaVoiceSpec, PersonaKey } from \"./types.js\";\n\nconst DEFAULT_CONFIG_PATH = path.resolve(process.cwd(), \"config/voices.euphoria.json\");\n\nlet cachedConfig: VoiceConfig | null = null;\nlet loadPromise: Promise<VoiceConfig> | null = null;\n\nasync function readConfigFile(filePath: string): Promise<VoiceConfig> {\n  const raw = await fs.readFile(filePath, \"utf8\");\n  return JSON.parse(raw) as VoiceConfig;\n}\n\nexport async function getVoiceConfig(configPath = DEFAULT_CONFIG_PATH): Promise<VoiceConfig> {\n  if (cachedConfig) return cachedConfig;\n  if (!loadPromise) {\n    loadPromise = readConfigFile(configPath).then((cfg) => {\n      cachedConfig = cfg;\n      return cfg;\n    });\n  }\n  return loadPromise;\n}\n\nexport async function getPersonaSpec(persona: PersonaKey): Promise<PersonaVoiceSpec | null> {\n  const config = await getVoiceConfig();\n  return config.personas[persona] ?? null;\n}\n","import fs from \"node:fs/promises\";\nimport path from \"node:path\";\nimport ffmpeg from \"fluent-ffmpeg\";\nimport ffmpegStatic from \"ffmpeg-static\";\nimport { file as tmpFile } from \"tmp-promise\";\nimport type { PersonaVoiceSpec, VoiceConfig } from \"./types.js\";\n\nif (ffmpegStatic) {\n  ffmpeg.setFfmpegPath(ffmpegStatic);\n}\n\nconst MIN_ATEMPO = 0.5;\nconst MAX_ATEMPO = 2.0;\n\nfunction splitAtempo(factor: number): number[] {\n  const factors: number[] = [];\n  let remaining = factor;\n\n  const clamp = (val: number) => Math.min(MAX_ATEMPO, Math.max(MIN_ATEMPO, val));\n\n  if (remaining === 1) return factors;\n\n  while (remaining > MAX_ATEMPO || remaining < MIN_ATEMPO) {\n    if (remaining > MAX_ATEMPO) {\n      factors.push(MAX_ATEMPO);\n      remaining /= MAX_ATEMPO;\n    } else if (remaining < MIN_ATEMPO) {\n      factors.push(MIN_ATEMPO);\n      remaining /= MIN_ATEMPO;\n    }\n  }\n\n  factors.push(clamp(remaining));\n  return factors;\n}\n\nfunction buildFilterChain(spec: PersonaVoiceSpec, config: VoiceConfig) {\n  const filters: string[] = [];\n  const generative = spec.generative;\n  const sampleRate = config.sampleRate;\n\n  const pitchRatio = Math.pow(2, generative.pitchSemitones / 12);\n  const targetRate = 1 + generative.ratePct / 100;\n\n  // pitch shift via asetrate + atempo compensation\n  if (Math.abs(generative.pitchSemitones) > 0.01) {\n    filters.push(`asetrate=${(sampleRate * pitchRatio).toFixed(0)}`);\n    const compensation = 1 / pitchRatio;\n    for (const tempo of splitAtempo(compensation)) {\n      filters.push(`atempo=${tempo.toFixed(4)}`);\n    }\n  }\n\n  if (Math.abs(targetRate - 1) > 0.01) {\n    for (const tempo of splitAtempo(targetRate)) {\n      filters.push(`atempo=${tempo.toFixed(4)}`);\n    }\n  }\n\n  if (generative.eq.lowShelfDb) {\n    filters.push(\n      `equalizer=f=120:t=l:s=1.0:g=${generative.eq.lowShelfDb.toFixed(2)}`,\n    );\n  }\n  if (generative.eq.presenceDb) {\n    filters.push(\n      `equalizer=f=3200:t=h:s=0.5:g=${generative.eq.presenceDb.toFixed(2)}`,\n    );\n  }\n  if (generative.eq.airDb) {\n    filters.push(\n      `equalizer=f=8000:t=h:s=0.7:g=${generative.eq.airDb.toFixed(2)}`,\n    );\n  }\n\n  if (generative.reverb.mix > 0) {\n    const mix = Math.min(0.9, Math.max(0, generative.reverb.mix));\n    const echoGainOut = (0.6 + mix * 0.3).toFixed(2);\n    const echoGainIn = (0.6 + mix * 0.2).toFixed(2);\n    const delay = Math.max(1, generative.reverb.predelayMs);\n    const decay = (0.2 + mix * 0.6).toFixed(2);\n    filters.push(`aecho=${echoGainIn}:${echoGainOut}:${delay}:${decay}`);\n  }\n\n  return filters;\n}\n\nasync function runFfmpeg(\n  inputPath: string,\n  outputPath: string,\n  config: VoiceConfig,\n  filterChain: string[],\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const command = ffmpeg(inputPath)\n      .audioFrequency(config.sampleRate)\n      .audioCodec(\"libmp3lame\")\n      .outputOptions(\"-b:a\", \"192k\")\n      .output(outputPath);\n\n    if (filterChain.length) {\n      command.audioFilters(filterChain);\n    }\n\n    command.on(\"end\", resolve).on(\"error\", reject).run();\n  });\n}\n\nexport async function applyGenerativeEffects(\n  buffer: Buffer,\n  config: VoiceConfig,\n  spec: PersonaVoiceSpec,\n): Promise<Buffer> {\n  try {\n    const filterChain = buildFilterChain(spec, config);\n    if (!filterChain.length) {\n      return buffer;\n    }\n\n    const inputTmp = await tmpFile({ postfix: \".mp3\" });\n    const outputTmp = await tmpFile({ postfix: \".mp3\" });\n    try {\n      await fs.writeFile(inputTmp.path, buffer);\n      await runFfmpeg(inputTmp.path, outputTmp.path, config, filterChain);\n      return await fs.readFile(outputTmp.path);\n    } finally {\n      await Promise.allSettled([fs.unlink(inputTmp.path), fs.unlink(outputTmp.path)]);\n    }\n  } catch (error) {\n    console.warn(\"[TTS] Generative DSP failed; using base audio\", error);\n    return buffer;\n  }\n}\n\nexport interface AudioAnalysis {\n  durationMs: number;\n  approxSpeechRate: number;\n  meanVolumeDb?: number;\n}\n\nasync function probeDuration(filePath: string): Promise<number> {\n  return new Promise((resolve, reject) => {\n    ffmpeg.ffprobe(filePath, (err, data) => {\n      if (err) return reject(err);\n      resolve((data.format.duration ?? 0) * 1000);\n    });\n  });\n}\n\nasync function detectVolume(filePath: string): Promise<number | undefined> {\n  return new Promise((resolve) => {\n    let meanVolume: number | undefined;\n    const command = ffmpeg(filePath)\n      .audioFilters(\"volumedetect\")\n      .format(\"null\")\n      .output(\"-\")\n      .on(\"stderr\", (line: string) => {\n        const match = line.match(/mean_volume:\\s*(-?\\d+(?:\\.\\d+)?)/);\n        if (match) {\n          meanVolume = Number.parseFloat(match[1]);\n        }\n      })\n      .on(\"end\", () => resolve(meanVolume))\n      .on(\"error\", () => resolve(undefined));\n    command.run();\n  });\n}\n\nexport async function analyzeAudio(\n  buffer: Buffer,\n  text: string,\n  config: VoiceConfig,\n): Promise<AudioAnalysis> {\n  try {\n    const tmp = await tmpFile({ postfix: \".mp3\" });\n    try {\n      await fs.writeFile(tmp.path, buffer);\n      const [durationMs, meanVolumeDb] = await Promise.all([\n        probeDuration(tmp.path),\n        detectVolume(tmp.path),\n      ]);\n\n      const words = text.trim().split(/\\s+/).length || 1;\n      const seconds = durationMs / 1000 || 1;\n      const approxSpeechRate = words / seconds;\n\n      return {\n        durationMs,\n        approxSpeechRate,\n        meanVolumeDb,\n      };\n    } finally {\n      await fs.unlink(tmp.path).catch(() => {});\n    }\n  } catch (error) {\n    console.warn(\"[TTS] Audio analysis failed; skipping metrics\", error);\n    return {\n      durationMs: 0,\n      approxSpeechRate: 0,\n    };\n  }\n}\n","import crypto from \"node:crypto\";\nimport fs from \"node:fs/promises\";\nimport path from \"node:path\";\nimport type { VoiceConfig, TtsResponseMeta } from \"./types.js\";\n\ntype CacheKeyInput = Record<string, unknown>;\n\nconst AUDIO_EXT = \".mp3\";\nconst META_EXT = \".json\";\n\nfunction hashKey(data: CacheKeyInput): string {\n  const json = JSON.stringify(data, Object.keys(data).sort());\n  return crypto.createHash(\"sha1\").update(json).digest(\"hex\");\n}\n\nasync function ensureDir(dir: string) {\n  await fs.mkdir(dir, { recursive: true });\n}\n\nexport function buildCacheKey(input: CacheKeyInput): string {\n  return hashKey(input);\n}\n\nfunction resolvePaths(cacheDir: string, key: string) {\n  return {\n    audioPath: path.join(cacheDir, `${key}${AUDIO_EXT}`),\n    metaPath: path.join(cacheDir, `${key}${META_EXT}`),\n  };\n}\n\nexport async function loadFromCache(\n  config: VoiceConfig,\n  key: string,\n): Promise<{ buffer: Buffer; meta: TtsResponseMeta } | null> {\n  const cacheDir = path.resolve(process.cwd(), config.cache.dir);\n  try {\n    const { audioPath, metaPath } = resolvePaths(cacheDir, key);\n    const [audioStat, metaStat] = await Promise.all([\n      fs.stat(audioPath),\n      fs.stat(metaPath),\n    ]);\n\n    const now = Date.now();\n    const maxAgeMs = config.cache.maxAgeSec * 1000;\n    const newest = Math.max(audioStat.mtimeMs, metaStat.mtimeMs);\n    if (now - newest > maxAgeMs) {\n      return null;\n    }\n\n    const [buffer, metaRaw] = await Promise.all([\n      fs.readFile(audioPath),\n      fs.readFile(metaPath, \"utf8\"),\n    ]);\n\n    const meta = JSON.parse(metaRaw) as TtsResponseMeta;\n    meta.cache = {\n      key,\n      hit: true,\n      expiresAt: newest + maxAgeMs,\n    };\n\n    return { buffer, meta };\n  } catch {\n    return null;\n  }\n}\n\nexport async function saveToCache(\n  config: VoiceConfig,\n  key: string,\n  buffer: Buffer,\n  meta: TtsResponseMeta,\n) {\n  const cacheDir = path.resolve(process.cwd(), config.cache.dir);\n  await ensureDir(cacheDir);\n  const { audioPath, metaPath } = resolvePaths(cacheDir, key);\n\n  const metaWithCache: TtsResponseMeta = {\n    ...meta,\n    cache: {\n      key,\n      hit: false,\n      expiresAt: Date.now() + config.cache.maxAgeSec * 1000,\n    },\n  };\n\n  await Promise.all([\n    fs.writeFile(audioPath, buffer),\n    fs.writeFile(metaPath, JSON.stringify(metaWithCache, null, 2), \"utf8\"),\n  ]);\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAa;AAAb;AAAA;AAAO,IAAM,0BAA0B;AAAA;AAAA;;;ACAvC,OAAO,UAAU;AACjB,OAAO,QAAQ;AACf,SAAS,kBAAkB;AA4B3B,eAAsB,qBAAqB;AACzC,QAAM;AACN,SAAO,kBAAkB,SAAS;AACpC;AAjCA,IAIa,aACP,kBAOO;AAZb;AAAA;AAIO,IAAM,cAAc,KAAK,QAAQ,QAAQ,IAAI,GAAG,cAAc;AACrE,IAAM,mBAAmB,GACtB,MAAM,aAAa,EAAE,WAAW,KAAK,CAAC,EACtC,MAAM,CAAC,UAAU;AAChB,cAAQ,MAAM,4CAA4C,KAAK;AAC/D,YAAM;AAAA,IACR,CAAC;AAEI,IAAM,oBAAoB,IAAI,WAAW;AAAA,MAC9C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;AC5BD,OAAOA,WAAU;AACjB,SAAS,qBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAmB3B,eAAsB,oBAAoB;AACxC,SAAO,iBAAiB,SAAS;AACnC;AAvBA,IAIM,WACA,YAEO;AAPb;AAAA;AAIA,IAAM,YAAYD,MAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAC7D,IAAM,aAAaA,MAAK,QAAQ,WAAW,gCAAgC;AAEpE,IAAM,mBAAmB,IAAIC,YAAW;AAAA,MAC7C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAO,UAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAmB3B,eAAsB,oBAAoB;AACxC,SAAO,iBAAiB,SAAS;AACnC;AAvBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,gCAAgC;AAEpE,IAAM,mBAAmB,IAAID,YAAW;AAAA,MAC7C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAoB3B,eAAsB,mBAAmB;AACvC,SAAO,gBAAgB,SAAS;AAClC;AAxBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,+BAA+B;AAEnE,IAAM,kBAAkB,IAAID,YAAW;AAAA,MAC5C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,UAC1B,qBAAqB,QAAQ,IAAI,uBAAuB;AAAA,QAC1D;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACpBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAqB3B,eAAsB,kBAAkB;AACtC,SAAO,eAAe,SAAS;AACjC;AAzBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,8BAA8B;AAElE,IAAM,iBAAiB,IAAID,YAAW;AAAA,MAC3C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,UAC1B,mBAAmB,QAAQ,IAAI,qBAAqB;AAAA,UACpD,uBAAuB,QAAQ,IAAI,yBAAyB;AAAA,QAC9D;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACrBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAmB3B,eAAsB,kBAAkB;AACtC,SAAO,eAAe,SAAS;AACjC;AAvBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,8BAA8B;AAElE,IAAM,iBAAiB,IAAID,YAAW;AAAA,MAC3C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAqB3B,eAAsB,qBAAqB;AACzC,SAAO,kBAAkB,SAAS;AACpC;AAzBA,IAKMC,YACAC,aAEO;AARb;AAAA;AAGA;AAEA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,8BAA8B;AAElE,IAAM,oBAAoB,IAAID,YAAW;AAAA,MAC9C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,UAC1B,cAAc;AAAA,QAChB;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACrBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAmB3B,eAAsB,iBAAiB;AACrC,SAAO,cAAc,SAAS;AAChC;AAvBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,6BAA6B;AAEjE,IAAM,gBAAgB,IAAID,YAAW;AAAA,MAC1C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnBD,OAAOC,WAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,SAAS,cAAAC,mBAAkB;AAmB3B,eAAsB,iBAAiB;AACrC,SAAO,cAAc,SAAS;AAChC;AAvBA,IAIMC,YACAC,aAEO;AAPb;AAAA;AAIA,IAAMD,aAAYH,MAAK,QAAQC,eAAc,YAAY,GAAG,CAAC;AAC7D,IAAMG,cAAaJ,MAAK,QAAQG,YAAW,6BAA6B;AAEjE,IAAM,gBAAgB,IAAID,YAAW;AAAA,MAC1C,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM,CAAC,MAAM,OAAOE,WAAU;AAAA,QAC9B,KAAK;AAAA,UACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACkDM,SAAS,qBAAqB,OAAwB;AAC3D,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI,OAAO,UAAU,SAAU,QAAO;AACtC,MAAI,iBAAiB,MAAO,QAAO,MAAM;AACzC,MAAI;AACF,WAAO,KAAK,UAAU,KAAK;AAAA,EAC7B,QAAQ;AACN,WAAO,OAAO,KAAK;AAAA,EACrB;AACF;AA9EA;AAAA;AAAA;AAAA;;;ACAA,SAAS,cAAc,kBAAkB;AAEzC,SAAS,SAAS;AAKlB,eAAe,sBAAuC;AACpD,MAAI,CAAC,eAAe;AAClB,QAAI,CAAC,QAAQ,IAAI,gBAAgB;AAC/B,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AACA,oBAAgB,aAAa,OAAO,sBAAsB,EACvD,UAAU,kBAAkB,EAC5B;AAAA,MACC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,EAAE,KAAK,IAAI;AAAA,IACb,EACC,MAAM,EACN,KAAK,CAAC,UAAU,MAAM,MAAM;AAAA,EACjC;AACA,SAAO;AACT;AAiEO,SAAS,qBAAqB;AACnC,SAAO,CAAC,cAAc;AACxB;AA/FA,IAKI,eAyBE,iBAOO;AArCb;AAAA;AAGA;AAEA,IAAI,gBAAwC;AAyB5C,IAAM,kBAAkB,EAAE,OAAO;AAAA,MAC/B,SAAS,EACN,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,yBAAyB,CAAC,EAClD,IAAI,GAAG,yCAAyC;AAAA,MACnD,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACpC,CAAC;AAEM,IAAM,iBAAiB,WAAW;AAAA,MACvC,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ;AAAA,MACR,IAAI,OAAO,EAAE,SAAS,MAAM,MAAM;AAChC,cAAM,iBAAiB,QAAQ,IAAI,CAAC,UAAU,MAAM,KAAK,CAAC;AAC1D,cAAM,SAAS,MAAM,oBAAoB;AACzC,cAAM,SAAS;AAAA,UACb,QACI,aAAa,KAAK,0CAClB;AAAA,UACJ;AAAA,QACF,EACG;AAAA,UACC,eAAe;AAAA,YACb,CAAC,OAAO,UAAU,GAAG,QAAQ,CAAC,KAAK,MAAM,QAAQ,QAAQ,GAAG,CAAC;AAAA,UAC/D;AAAA,QACF,EACC,KAAK,IAAI;AAEZ,YAAI;AACJ,YAAI;AACF,gBAAM,MAAM,OAAO,IAAI,MAAM;AAAA,QAC/B,SAAS,OAAO;AACd,iBAAO;AAAA,YACL,SAAS;AAAA,YACT,YAAY,eAAe,MAAM,GAAG,KAAK,IAAI,GAAG,eAAe,MAAM,CAAC;AAAA,YACtE,cAAc,CAAC;AAAA,YACf,SAAS,8BAA8B,qBAAqB,KAAK,CAAC;AAAA,UACpE;AAAA,QACF;AACA,YAAI;AACF,gBAAM,UAAU,OAAO,QAAQ,WAAW,IAAI,KAAK,IAAI,OAAO,GAAG;AACjE,gBAAM,YAAY,QAAQ,QAAQ,GAAG;AACrC,gBAAM,UAAU,QAAQ,YAAY,GAAG;AACvC,cAAI,cAAc,MAAM,YAAY,IAAI;AACtC,kBAAM,IAAI,MAAM,8CAA8C;AAAA,UAChE;AACA,gBAAM,SAAS,KAAK,MAAM,QAAQ,MAAM,WAAW,UAAU,CAAC,CAAC;AAC/D,iBAAO;AAAA,QACT,SAAS,OAAO;AACd,iBAAO;AAAA,YACL,SAAS,OAAO,GAAG;AAAA,YACnB,YAAY,eAAe,MAAM,GAAG,CAAC;AAAA,YACrC,cAAc;AAAA,cACZ;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,YACA,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;AC1FD,OAAOC,SAAQ;AACf,OAAOC,YAAU;AAQjB,eAAsB,iBAAiB,MAAc;AACnD,QAAM,SAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE;AAClD,QAAM,OAAOA,OAAK,KAAK,aAAa,GAAG,KAAK,MAAM;AAClD,QAAM,QAAO,oBAAI,KAAK,GAAE,aAAa,EAAE,MAAM,GAAG,CAAC;AACjD,QAAM,OAAO,IAAI,IAAI,KAAK,IAAI;AAAA;AAE9B,QAAMD,IAAG,WAAW,MAAM,MAAM,MAAM;AACtC,SAAO;AACT;AAlBA;AAAA;AAGA;AAAA;AAAA;;;ACHA,SAAS,cAAAE,mBAAiC;AAC1C,SAAS,mBAAmB;AAC5B,SAAS,KAAAC,UAAS;AAgOlB,SAAS,WAAW,MAAY,SAAuB;AACrD,SAAO,IAAI,KAAK,KAAK,QAAQ,IAAI,UAAU,GAAM;AACnD;AAEA,SAAS,gBAAgB,KAAoB;AAC3C,QAAM,SAAS,MAAM,IAAI,KAAK,GAAG,IAAI,oBAAI,KAAK;AAC9C,MAAI,OAAO,MAAM,OAAO,QAAQ,CAAC,GAAG;AAClC,UAAM,IAAI,MAAM,wBAAwB,GAAG,EAAE;AAAA,EAC/C;AACA,SAAO;AACT;AAEA,SAAS,YAAY,MAAY;AAC/B,SAAO;AAAA,IACL,KAAK,KAAK,YAAY;AAAA,IACtB,WAAW,KAAK,mBAAmB;AAAA,IACnC,WAAW,KAAK,mBAAmB,CAAC,GAAG,EAAE,MAAM,WAAW,QAAQ,UAAU,CAAC;AAAA,EAC/E;AACF;AAEA,SAAS,kBAAkB,OAAuB;AAChD,QAAM,OAAO,oBAAI,IAAkB;AACnC,aAAW,QAAQ,OAAO;AACxB,UAAM,MAAM,KAAK,YAAY;AAC7B,QAAI,CAAC,KAAK,IAAI,GAAG,GAAG;AAClB,WAAK,IAAI,KAAK,IAAI;AAAA,IACpB;AAAA,EACF;AACA,SAAO,MAAM,KAAK,KAAK,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,IAAI,EAAE,QAAQ,CAAC;AAC3E;AAEA,eAAsB,mBAAwC;AAC5D,QAAM,sBAAsBD,YAAW;AAAA,IACrC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,WAAWA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC/B,iBAAiBA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,SAAS;AAAA,MAC7D,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,MAChD,aAAaA,GAAE,MAAMA,GAAE,OAAO,CAAC,EAAE,SAAS;AAAA,IAC5C,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,WAAW,kBAAkB,KAAK,QAAQ,GAAG,YAAY,MAAM;AAC1E,UAAI,QAAgB,CAAC;AACrB,UAAI,aAAa,QAAQ;AACvB,gBAAQ,YAAY,IAAI,eAAe;AAAA,MACzC,OAAO;AACL,cAAM,SAAS,gBAAgB,SAAS;AACxC,gBAAQ,MAAM;AAAA,UAAK,EAAE,QAAQ,MAAM;AAAA,UAAG,CAAC,GAAG,QACxC,QAAQ,IAAI,SAAS,WAAW,QAAQ,kBAAkB,GAAG;AAAA,QAC/D;AAAA,MACF;AACA,YAAM,SAAS,kBAAkB,MAAM,OAAO,CAAC,SAAS,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;AACpF,YAAM,YAAY,OAAO,IAAI,CAAC,MAAM,SAAS;AAAA,QAC3C,OAAO,YAAY,MAAM,CAAC;AAAA,QAC1B,GAAG,YAAY,IAAI;AAAA,QACnB,QAAQ,QAAQ,IACZ,0CACA;AAAA,MACN,EAAE;AACF,UAAI,CAAC,UAAU,QAAQ;AACrB,cAAM,IAAI,MAAM,kEAAkE;AAAA,MACpF;AACA,aAAO;AAAA,QACL;AAAA,QACA,cAAc,UAAU;AAAA,QACxB;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,iBAAiBD,YAAW;AAAA,IAChC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,SAASA,GACN,KAAK,CAAC,OAAO,oBAAoB,aAAa,kBAAkB,QAAQ,CAAC,EACzE,SAAS;AAAA,MACZ,QAAQA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,MACjD,qBAAqBA,GAAE,QAAQ,EAAE,SAAS;AAAA,IAC5C,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,UAAU,OAAO,SAAS,GAAG,sBAAsB,MAAM,MAAM;AAC1E,YAAM,YAGF;AAAA,QACF,KAAK;AAAA,UACH,MAAM;AAAA,UACN,OAAO;AAAA,YACL,EAAE,KAAK,mBAAmB,SAAS,EAAE;AAAA,YACrC,EAAE,KAAK,eAAe,SAAS,EAAE;AAAA,YACjC,EAAE,KAAK,iBAAiB,SAAS,EAAE;AAAA,YACnC,EAAE,KAAK,sBAAsB,SAAS,EAAE;AAAA,UAC1C;AAAA,UACA,OAAO;AAAA,QACT;AAAA,QACA,kBAAkB;AAAA,UAChB,MAAM;AAAA,UACN,OAAO;AAAA,YACL,EAAE,KAAK,uBAAuB,SAAS,EAAE;AAAA,YACzC,EAAE,KAAK,eAAe,SAAS,EAAE;AAAA,YACjC,EAAE,KAAK,sBAAsB,SAAS,EAAE;AAAA,UAC1C;AAAA,UACA,OAAO;AAAA,QACT;AAAA,QACA,WAAW;AAAA,UACT,MAAM;AAAA,UACN,OAAO;AAAA,YACL,EAAE,KAAK,UAAU,SAAS,EAAE;AAAA,YAC5B,EAAE,KAAK,UAAU,SAAS,EAAE;AAAA,UAC9B;AAAA,UACA,OAAO;AAAA,QACT;AAAA,QACA,gBAAgB;AAAA,UACd,MAAM;AAAA,UACN,OAAO;AAAA,YACL,EAAE,KAAK,UAAU,SAAS,EAAE;AAAA,YAC5B,EAAE,KAAK,QAAQ,SAAS,EAAE;AAAA,YAC1B,EAAE,KAAK,UAAU,SAAS,EAAE;AAAA,UAC9B;AAAA,UACA,OAAO;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,YACL,EAAE,KAAK,UAAU,SAAS,EAAE;AAAA,YAC5B,EAAE,KAAK,iBAAiB,SAAS,EAAE;AAAA,UACrC;AAAA,UACA,OAAO;AAAA,QACT;AAAA,MACF;AACA,YAAM,SAAS,UAAU,OAAO,KAAK,UAAU;AAC/C,YAAM,eACJ,SAAS,OAAO,MAAM,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,SAAS,CAAC;AACnE,YAAM,eAAe,sBACjB;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,MACF,IACA;AACJ,aAAO;AAAA,QACL,SAAS,OAAO;AAAA,QAChB,OAAO,OAAO;AAAA,QACd;AAAA,QACA,sBAAsB;AAAA,QACtB,gBAAgB,OAAO;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,gBAAgBD,YAAW;AAAA,IAC/B,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACvB,QAAQA,GAAE,KAAK,CAAC,SAAS,YAAY,MAAM,CAAC;AAAA,MAC5C,UAAUA,GAAE,KAAK,CAAC,QAAQ,OAAO,UAAU,MAAM,CAAC,EAAE,SAAS;AAAA,MAC7D,OAAOA,GAAE,OAAO,EAAE,SAAS;AAAA,IAC7B,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,OAAO,QAAQ,WAAW,OAAO,MAAM,MAAM;AACxD,YAAM,YAAoC;AAAA,QACxC,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,MACR;AACA,YAAM,iBAAyC;AAAA,QAC7C,MAAM;AAAA,QACN,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,eAAe,UAAU,MAAM;AAAA,QAC/B;AAAA,QACA,gBAAgB,eAAe,QAAQ;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,eAAeD,YAAW;AAAA,IAC9B,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,QAAQA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MACrC,MAAMA,GAAE,MAAMA,GAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IAC5C,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,QAAQ,KAAK,MAAM;AAC9B,YAAM,SAAS,CAAC,WAAW,OAAO,UAAU,YAAY,MAAM;AAC9D,YAAM,cAAc;AAAA,QAClB,CAAC,8CAA8C;AAAA,QAC/C,CAAC,8CAA8C;AAAA,QAC/C,CAAC,0CAA0C;AAAA,QAC3C,CAAC,2CAA2C;AAAA,QAC5C,CAAC,6CAA6C;AAAA,MAChD;AACA,YAAM,aACJ,UAAU,IACN,oGACA;AACN,YAAM,UAAU,UAAU,IAAI,CAAC,uCAAuC,0DAA0D,IAAI,CAAC,gCAAgC,uCAAuC;AAC5M,aAAO;AAAA,QACL;AAAA,QACA,OAAO,OAAO,SAAS,CAAC;AAAA,QACxB,aAAa,YAAY,SAAS,CAAC;AAAA,QACnC;AAAA,QACA,iBAAiB;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,aAAaD,YAAW;AAAA,IAC5B,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,aAAaA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,MACvD,cAAcA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,MACvD,QAAQA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MAChD,kBAAkBA,GAAE,QAAQ,EAAE,SAAS;AAAA,IACzC,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,cAAc,IAAI,eAAe,GAAG,SAAS,GAAG,mBAAmB,KAAK,MAAM;AACzF,YAAM,SAAS,MAAM,KAAK,EAAE,QAAQ,OAAO,GAAG,CAAC,GAAG,QAAQ;AACxD,cAAM,YAAY,qBAAqB,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,SACrE,KAAK,IAAI,eAAe,GAAG,EAAE,IAC7B;AACJ,eAAO;AAAA,UACL,OAAO,MAAM;AAAA,UACb;AAAA,UACA,cAAc,QAAQ,SAAS,IAAI,IAAI;AAAA,UACvC,SAAS,QAAQ,IAAI,kCAAkC;AAAA,QACzD;AAAA,MACF,CAAC;AACD,YAAM,aAAa,SAAS;AAC5B,YAAM,aAAa,OAAO,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,cAAc,CAAC;AAC5E,aAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,cAAc;AAAA,UACd,cAAc;AAAA,UACd,OAAO,QAAQ,aAAa,KAAK,IAAI,YAAY,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,QACjE;AAAA,QACA,aAAa;AAAA,UACX;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,iBAAiBD,YAAW;AAAA,IAChC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,KAAK,CAAC,QAAQ,QAAQ,QAAQ,aAAa,MAAM,CAAC,EAAE,SAAS;AAAA,MACtE,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACjD,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,QAAQ,QAAQ,QAAQ,EAAE,MAAM;AAC3C,YAAM,OAAO,gBAAgB,KAAK,KAAK,gBAAgB;AACvD,YAAM,YAAY,KAAK,MAAM,GAAG,KAAK;AACrC,aAAO;AAAA,QACL;AAAA,QACA,aAAa;AAAA,QACb,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,kBAAkBD,YAAW;AAAA,IACjC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,SAASA,GACN;AAAA,QACCA,GAAE,OAAO;AAAA,UACP,MAAMA,GAAE,OAAO;AAAA,UACf,OAAOA,GAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE;AAAA,UAC/B,SAASA,GAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,UAC3C,OAAOA,GAAE,OAAO,EAAE,SAAS;AAAA,QAC7B,CAAC;AAAA,MACH,EACC,IAAI,CAAC,EACL,IAAI,EAAE;AAAA,IACX,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,QAAQ,MAAM;AACzB,YAAM,aAAa,QAAQ,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;AACpE,YAAM,WAAW,aAAa,QAAQ;AACtC,YAAM,YAAY,QAAQ,IAAI,CAAC,UAAU,MAAM,OAAO,EAAE,OAAO,OAAO;AACtE,YAAM,aAAa,UAAU,SACzB,UAAU,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC,IAAI,UAAU,SAC7D;AACJ,YAAM,cAAc,QAAQ,OAAO,CAAC,UAAU,MAAM,QAAQ,CAAC;AAC7D,YAAM,eAAe,QAAQ;AAAA,QAAO,CAAC,MAAM,SACzC,KAAK,QAAQ,KAAK,QAAQ,OAAO;AAAA,MACnC;AACA,aAAO;AAAA,QACL,cAAc,QAAQ;AAAA,QACtB,cAAc,OAAO,SAAS,QAAQ,CAAC,CAAC;AAAA,QACxC,gBAAgB,aAAa,OAAO,WAAW,QAAQ,CAAC,CAAC,IAAI;AAAA,QAC7D,eAAe,YAAY,SAAS,YAAY,CAAC,IAAI;AAAA,QACrD;AAAA,QACA,iBAAiB,WAAW,IACxB;AAAA,UACE;AAAA,UACA;AAAA,QACF,IACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,MACN;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,kBAAkBD,YAAW;AAAA,IACjC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,oBAAoBA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,SAAS;AAAA,MAC/D,eAAeA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,MACxD,SAASA,GAAE,OAAO,EAAE,SAAS;AAAA,IAC/B,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,oBAAoB,eAAe,QAAQ,MAAM;AAC5D,YAAM,cAAwB,CAAC;AAC/B,UAAI,uBAAuB,QAAW;AACpC,YAAI,sBAAsB,KAAK;AAC7B,sBAAY,KAAK,uDAAuD;AAAA,QAC1E,WAAW,sBAAsB,KAAK;AACpC,sBAAY,KAAK,qDAAqD;AAAA,QACxE,WAAW,sBAAsB,KAAK;AACpC,sBAAY,KAAK,wDAAwD;AAAA,QAC3E,OAAO;AACL,sBAAY,KAAK,qDAAgD;AAAA,QACnE;AAAA,MACF;AACA,UAAI,kBAAkB,QAAW;AAC/B,YAAI,gBAAgB,GAAG;AACrB,sBAAY,KAAK,0DAA0D;AAAA,QAC7E,WAAW,gBAAgB,IAAI;AAC7B,sBAAY,KAAK,gEAA2D;AAAA,QAC9E,OAAO;AACL,sBAAY,KAAK,iEAA4D;AAAA,QAC/E;AAAA,MACF;AACA,UAAI,SAAS;AACX,oBAAY,KAAK,0BAA0B,OAAO,2CAA2C;AAAA,MAC/F;AACA,aAAO;AAAA,QACL;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,sBAAsBD,YAAW;AAAA,IACrC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACvB,QAAQA,GAAE,KAAK,CAAC,WAAW,SAAS,WAAW,KAAK,CAAC,EAAE,SAAS;AAAA,MAChE,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACjD,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,OAAO,SAAS,OAAO,QAAQ,EAAE,MAAM;AAClD,YAAM,MAAM,MAAM,YAAY;AAC9B,YAAM,SAAS,iBAAiB,GAAG,KAAK,iBAAiB;AACzD,YAAM,WACJ,WAAW,QAAQ,SAAS,OAAO,OAAO,CAAC,SAAS,KAAK,SAAS,MAAM;AAC1E,YAAM,UAAU,SAAS,MAAM,GAAG,KAAK;AACvC,aAAO;AAAA,QACL,OAAO;AAAA,QACP;AAAA,QACA,UAAU,QAAQ,SAAS,OAAO;AAAA,MACpC;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,iBAAiBD,YAAW;AAAA,IAChC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACvB,iBAAiBA,GAAE,QAAQ,EAAE,SAAS;AAAA,MACtC,MAAMA,GAAE,MAAMA,GAAE,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACnD,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,OAAO,kBAAkB,OAAO,KAAK,MAAM;AACtD,YAAM,SAAS,kBACX,kBAAkB,KAAK,MAAM,KAAK,OAAO,IAAI,kBAAkB,MAAM,CAAC,IACtE;AACJ,YAAM,OAAO,eAAe,KAAK,GAAG,MAAM,SAAS,YAAY,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;AACrF,YAAM,OAAO,MAAM,iBAAiB,IAAI;AACxC,aAAO;AAAA,QACL,SAAS;AAAA,QACT;AAAA,QACA,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,sBAAsBD,YAAW;AAAA,IACrC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,KAAK,CAAC,eAAe,WAAW,YAAY,QAAQ,YAAY,CAAC,EAAE,SAAS;AAAA,MACrF,SAASA,GAAE,KAAK,CAAC,UAAU,QAAQ,OAAO,CAAC,EAAE,SAAS;AAAA,MACtD,MAAMA,GAAE,OAAO,EAAE,SAAS;AAAA,IAC5B,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,QAAQ,YAAY,UAAU,UAAU,KAAK,MAAM;AAC9D,YAAM,cAAsD;AAAA,QAC1D,QAAQ;AAAA,UACN,aAAa;AAAA,UACb,SAAS;AAAA,UACT,UAAU;AAAA,UACV,MAAM;AAAA,UACN,YAAY;AAAA,QACd;AAAA,QACA,MAAM;AAAA,UACJ,aAAa;AAAA,UACb,SAAS;AAAA,UACT,UAAU;AAAA,UACV,MAAM;AAAA,UACN,YAAY;AAAA,QACd;AAAA,QACA,OAAO;AAAA,UACL,aAAa;AAAA,UACb,SAAS;AAAA,UACT,UAAU;AAAA,UACV,MAAM;AAAA,UACN,YAAY;AAAA,QACd;AAAA,MACF;AACA,aAAO;AAAA,QACL,YAAY,GAAG,OAAO,GAAG,IAAI,OAAO,EAAE,GAAG,YAAY,OAAO,EAAE,KAAK,CAAC;AAAA,QACpE;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,oBAAoBD,YAAW;AAAA,IACnC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,MAAMA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACtB,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MAC/C,cAAcA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,IACzD,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,MAAM,QAAQ,GAAG,eAAe,GAAG,MAAM;AACpD,YAAM,UAAU;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,SAAS,MAAM,KAAK,EAAE,QAAQ,MAAM,GAAG,CAAC,GAAG,SAAS;AAAA,QACxD,MAAM,MAAM;AAAA,QACZ,UAAU,QAAQ,GAAG;AAAA,MACvB,EAAE;AACF,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,qBAAqBD,YAAW;AAAA,IACpC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,WAAWA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MAC3B,SAASA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC7B,WAAWA,GAAE,KAAK,CAAC,UAAU,WAAW,WAAW,CAAC,EAAE,SAAS;AAAA,IACjE,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,WAAW,SAAS,YAAY,YAAY,OAAO;AAAA,MAC9D;AAAA,MACA;AAAA,MACA,SAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,oBAAoBD,YAAW;AAAA,IACnC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,MAAMA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACtB,QAAQA,GAAE,KAAK,CAAC,OAAO,UAAU,MAAM,CAAC,EAAE,SAAS;AAAA,MACnD,MAAMA,GAAE,KAAK,CAAC,SAAS,WAAW,eAAe,SAAS,CAAC,EAAE,SAAS;AAAA,IACxE,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,MAAM,SAAS,UAAU,OAAO,QAAQ,MAAM;AACzD,YAAM,YAAsC;AAAA,QAC1C,OAAO,CAAC,SAAS,SAAS,OAAO;AAAA,QACjC,SAAS,CAAC,YAAY,QAAQ,cAAc;AAAA,QAC5C,aAAa,CAAC,SAAS,OAAO,WAAW;AAAA,QACzC,SAAS,CAAC,UAAU,aAAa,OAAO;AAAA,MAC1C;AACA,YAAM,aAAuC;AAAA,QAC3C,KAAK,CAAC,QAAQ,SAAS;AAAA,QACvB,QAAQ,CAAC,UAAU,MAAM;AAAA,QACzB,MAAM,CAAC,eAAe,YAAY;AAAA,MACpC;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,CAAC,GAAI,UAAU,IAAI,KAAK,UAAU,OAAQ,GAAG,WAAW,MAAM,CAAC;AAAA,QACtE,UAAU;AAAA,UACR,wCAAwC,IAAI,IAAI,WAAW,MAAM,EAAE,CAAC,CAAC;AAAA,UACrE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,uBAAuBD,YAAW;AAAA,IACtC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,MAAMA,GAAE,KAAK,CAAC,QAAQ,QAAQ,UAAU,QAAQ,WAAW,OAAO,CAAC,EAAE,SAAS;AAAA,MAC9E,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACjD,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,OAAO,QAAQ,QAAQ,EAAE,MAAM;AAC1C,YAAM,UAGF;AAAA,QACF,MAAM;AAAA,UACJ;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,UACN;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,SAAS;AAAA,UACP;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,OAAO;AAAA,UACL;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF;AACA,YAAM,UAAU,QAAQ,IAAI,KAAK,QAAQ;AACzC,aAAO;AAAA,QACL;AAAA,QACA,SAAS,QAAQ,MAAM,GAAG,KAAK;AAAA,QAC/B,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,sBAAsBD,YAAW;AAAA,IACrC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,OAAOA,GAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACvB,OAAOA,GAAE,OAAO;AAAA,MAChB,iBAAiBA,GAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MAC3D,aAAaA,GAAE,OAAO,EAAE,SAAS;AAAA,MACjC,UAAUA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC9B,KAAKA,GAAE,OAAO,EAAE,SAAS;AAAA,IAC3B,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,OAAO,OAAO,kBAAkB,IAAI,aAAa,UAAU,IAAI,MAAM;AAChF,YAAM,gBAAgB,gBAAgB,KAAK;AAC3C,UAAI,YAAY;AAChB,UAAI,WAAW;AACf,UAAI,UAAU,QAAQ,IAAI,KAAK,IAAI,GAAG;AACpC,oBAAY,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,GAAI;AAC/C,mBAAW;AAAA,MACb;AACA,YAAM,UAAU,WAAW,WAAW,eAAe;AACrD,YAAM,cAAuC;AAAA,QAC3C;AAAA,QACA,OAAO;AAAA,UACL,UAAU,YAAY;AAAA,UACtB,UAAU,SAAS,IAAI;AAAA,UACvB,UAAU,QAAQ;AAAA,UAClB,UAAU,SAAS;AAAA,UACnB,UAAU,WAAW;AAAA,QACvB;AAAA,QACA,KAAK;AAAA,UACH,QAAQ,YAAY;AAAA,UACpB,QAAQ,SAAS,IAAI;AAAA,UACrB,QAAQ,QAAQ;AAAA,UAChB,QAAQ,SAAS;AAAA,UACjB,QAAQ,WAAW;AAAA,QACrB;AAAA,MACF;AACA,UAAI,YAAa,aAAY,cAAc;AAC3C,UAAI,SAAU,aAAY,WAAW;AACrC,UAAI,IAAK,aAAY,MAAM;AAC3B,YAAM,EAAE,OAAO,MAAM,IAAI,YAAY,WAAW;AAChD,UAAI,MAAO,OAAM;AACjB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL,MAAM;AAAA,QACN,MAAM,WACF,mGACA;AAAA,MACN;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,kBAAkBD,YAAW;AAAA,IACjC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC,GAAE,OAAO;AAAA,MACf,SAASA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC7B,SAASA,GAAE,KAAK,CAAC,aAAa,aAAa,SAAS,aAAa,CAAC,EAAE,SAAS;AAAA,IAC/E,CAAC;AAAA,IACD,IAAI,OAAO,EAAE,UAAU,gBAAgB,MAAM;AAC3C,YAAM,MAAM,QAAQ,YAAY;AAChC,YAAM,YACJ,iBAAiB,GAAG,KAAK,iBAAiB,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,iBAAiB;AACjF,aAAO;AAAA,QACL,SAAS;AAAA,QACT;AAAA,QACA,cAAc;AAAA,UACZ;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AA/6BA,IAKM,iBAkEA,kBA0EA,mBAQA;AAzJN;AAAA;AAGA;AAEA,IAAM,kBAGF;AAAA,MACF,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,WAAW;AAAA,QACT;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAEA,IAAM,mBAGF;AAAA,MACF,SAAS;AAAA,QACP;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,IAAM,oBAAoB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,IAAM,mBAGF;AAAA,MACF,IAAI;AAAA,QACF;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,MAAM;AAAA,UACN,KAAK;AAAA,QACP;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,UACN,KAAK;AAAA,QACP;AAAA,MACF;AAAA,MACA,IAAI;AAAA,QACF;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,QACP;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,MAAM;AAAA,UACN,KAAK;AAAA,QACP;AAAA,MACF;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,cAAc,OAAO,WAAW,KAAK,6BAA6B;AAAA,QAC1E;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,UACN,KAAK;AAAA,QACP;AAAA,MACF;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,sBAAsB,OAAO,YAAY,KAAK,8BAA8B;AAAA,QACpF,EAAE,MAAM,eAAe,OAAO,gBAAgB,KAAK,gCAAgC;AAAA,MACrF;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,sBAAsB,OAAO,QAAQ,MAAM,YAAY;AAAA,QAC/D,EAAE,MAAM,aAAa,OAAO,gBAAgB,MAAM,YAAY,KAAK,8BAA8B;AAAA,MACnG;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,2BAA2B,OAAO,QAAQ,KAAK,qBAAqB;AAAA,QAC5E,EAAE,MAAM,8BAA8B,OAAO,aAAa,KAAK,yBAAyB;AAAA,MAC1F;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,gCAAgC,OAAO,gBAAgB;AAAA,QAC/D,EAAE,MAAM,eAAe,OAAO,kBAAkB,KAAK,oBAAoB;AAAA,MAC3E;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,6BAA6B,OAAO,gBAAgB,KAAK,wBAAwB;AAAA,QACzF,EAAE,MAAM,yBAAyB,OAAO,eAAe;AAAA,MACzD;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,uCAAiC,OAAO,OAAO,KAAK,yBAAyB;AAAA,MACvF;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,uBAAoB,OAAO,gBAAgB,MAAM,yBAAyB,KAAK,2BAA2B;AAAA,MACpH;AAAA,MACA,IAAI;AAAA,QACF,EAAE,MAAM,eAAe,OAAO,gBAAgB,MAAM,iBAAiB,KAAK,2BAA2B;AAAA,MACvG;AAAA,MACA,eAAe;AAAA,QACb,EAAE,MAAM,yBAAyB,KAAK,8BAA8B;AAAA,QACpE,EAAE,MAAM,mBAAmB,KAAK,4BAA4B;AAAA,MAC9D;AAAA,IACF;AAAA;AAAA;;;AChOA,SAAS,cAAAC,mBAAiC;AAC1C,SAAS,KAAAC,UAAS;AAkBlB,eAAe,oBAAoB,OAAe,MAA+B;AAC/E,QAAM,WAAW,MAAM,MAAM,+BAA+B,KAAK,gBAAgB;AAAA,IAC/E,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,IAAI;AAAA,EAC3B,CAAC;AAED,QAAM,UAAU,MAAM,SAAS,KAAK;AACpC,MAAI,CAAC,SAAS,MAAM,SAAS,OAAO,OAAO;AACzC,UAAM,cAAc,SAAS,eAAe,SAAS;AACrD,UAAM,IAAI,MAAM,uBAAuB,WAAW,EAAE;AAAA,EACtD;AACA,SAAO;AACT;AAEA,eAAsB,0BAA+C;AACnE,QAAM,QAAoB,CAAC;AAE3B,aAAW,OAAO,aAAa;AAC7B,UAAM,QAAQ,QAAQ,IAAI,IAAI,QAAQ;AACtC,QAAI,CAAC,MAAO;AAEZ,UAAM,cAAc,QAAQ,IAAI,IAAI,WAAW;AAE/C,UAAM,OAAOD,YAAW;AAAA,MACtB,MAAM,IAAI;AAAA,MACV,aAAa,8BAA8B,IAAI,IAAI,OAChD,cAAc,qBAAqB,WAAW,MAAM;AAAA,MACvD,QAAQ;AAAA,MACR,IAAI,OAAO,EAAE,QAAQ,MAAM,WAAW,qBAAqB,sBAAsB,MAAM;AACrF,cAAM,eAAe,UAAU;AAC/B,YAAI,CAAC,cAAc;AACjB,gBAAM,IAAI,MAAM,wEAAwE;AAAA,QAC1F;AAEA,cAAM,OAAgC;AAAA,UACpC,SAAS;AAAA,UACT;AAAA,QACF;AACA,YAAI,UAAW,MAAK,aAAa;AACjC,YAAI,wBAAwB,OAAW,MAAK,uBAAuB;AACnE,YAAI,0BAA0B,OAAW,MAAK,2BAA2B;AAEzE,cAAM,UAAU,MAAM,oBAAoB,OAAO,IAAI;AAErD,eAAO;AAAA,UACL,IAAI;AAAA,UACJ,MAAM,SAAS,QAAQ,QAAQ;AAAA,UAC/B,WAAW,SAAS,QAAQ,cAAc;AAAA,UAC1C,MAAM,SAAS,QAAQ,QAAQ;AAAA,QACjC;AAAA,MACF;AAAA,IACF,CAAC;AAED,UAAM,KAAK,IAAI;AAAA,EACjB;AAEA,SAAO;AACT;AA7EA,IAGM,aAQA;AAXN;AAAA;AAGA,IAAM,cAAc;AAAA,MAClB,EAAE,MAAM,UAAU,UAAU,gBAAgB,aAAa,mBAAmB,UAAU,kBAAkB;AAAA,MACxG,EAAE,MAAM,QAAQ,UAAU,cAAc,aAAa,iBAAiB,UAAU,gBAAgB;AAAA,MAChG,EAAE,MAAM,OAAO,UAAU,aAAa,aAAa,gBAAgB,UAAU,eAAe;AAAA,MAC5F,EAAE,MAAM,UAAU,UAAU,gBAAgB,aAAa,mBAAmB,UAAU,kBAAkB;AAAA,MACxG,EAAE,MAAM,QAAQ,UAAU,cAAc,aAAa,iBAAiB,UAAU,gBAAgB;AAAA,IAClG;AAEA,IAAM,gBAAgBC,GAAE,OAAO;AAAA,MAC7B,QAAQA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC5B,MAAMA,GAAE,OAAO,EAAE,IAAI,GAAG,8BAA8B;AAAA,MACtD,WAAWA,GAAE,KAAK,CAAC,YAAY,cAAc,MAAM,CAAC,EAAE,SAAS;AAAA,MAC/D,uBAAuBA,GAAE,QAAQ,EAAE,SAAS;AAAA,MAC5C,qBAAqBA,GAAE,QAAQ,EAAE,SAAS;AAAA,IAC5C,CAAC;AAAA;AAAA;;;ACjBD,SAAS,cAAAC,mBAAiC;AAC1C,SAAS,KAAAC,UAAS;AA2BlB,eAAe,mBAAmB,OAAe,WAAmB,MAA+B;AACjG,QAAM,WAAW,MAAM,MAAM,wCAAwC,SAAS,aAAa;AAAA,IACzF,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,eAAe,OAAO,KAAK;AAAA,IAC7B;AAAA,IACA,MAAM,KAAK,UAAU,IAAI;AAAA,EAC3B,CAAC;AAED,QAAM,UAAU,MAAM,SAAS,KAAK,EAAE,MAAM,MAAM,MAAS;AAC3D,MAAI,CAAC,SAAS,IAAI;AAChB,UAAM,cAAc,SAAS,WAAW,SAAS;AACjD,UAAM,IAAI,MAAM,sBAAsB,WAAW,EAAE;AAAA,EACrD;AACA,SAAO;AACT;AAEA,eAAsB,yBAA8C;AAClE,QAAM,QAAoB,CAAC;AAE3B,aAAWC,WAAU,iBAAiB;AACpC,UAAM,QAAQ,QAAQ,IAAIA,QAAO,QAAQ;AACzC,QAAI,CAAC,MAAO;AAEZ,UAAM,iBAAiB,QAAQ,IAAIA,QAAO,UAAU;AAEpD,UAAM,OAAOF,YAAW;AAAA,MACtB,MAAME,QAAO;AAAA,MACb,aAAa,6BAA6BA,QAAO,IAAI,OAClD,iBAAiB,wBAAwB,cAAc,MAAM;AAAA,MAChE,QAAQC;AAAA,MACR,IAAI,OAAO,EAAE,WAAW,SAAS,KAAK,QAAQ,SAAS,MAAM;AAC3D,cAAM,kBAAkB,aAAa;AACrC,YAAI,CAAC,iBAAiB;AACpB,gBAAM,IAAI,MAAM,8EAA8E;AAAA,QAChG;AAEA,cAAM,OAAgC;AAAA,UACpC;AAAA,QACF;AACA,YAAI,QAAQ,OAAW,MAAK,MAAM;AAClC,YAAI,OAAQ,MAAK,SAAS;AAC1B,YAAI,SAAU,MAAK,YAAY;AAE/B,cAAM,UAAU,MAAM,mBAAmB,OAAO,iBAAiB,IAAI;AAErE,eAAO;AAAA,UACL,IAAI;AAAA,UACJ,WAAW;AAAA,UACX,WAAW,SAAS,MAAM;AAAA,UAC1B,WAAW,SAAS,aAAa;AAAA,QACnC;AAAA,MACF;AAAA,IACF,CAAC;AAED,UAAM,KAAK,IAAI;AAAA,EACjB;AAEA,SAAO;AACT;AAxFA,IAGM,iBAQAA;AAXN;AAAA;AAGA,IAAM,kBAAkB;AAAA,MACtB,EAAE,MAAM,UAAU,UAAU,wBAAwB,YAAY,0BAA0B,UAAU,iBAAiB;AAAA,MACrH,EAAE,MAAM,QAAQ,UAAU,sBAAsB,YAAY,wBAAwB,UAAU,eAAe;AAAA,MAC7G,EAAE,MAAM,OAAO,UAAU,qBAAqB,YAAY,uBAAuB,UAAU,cAAc;AAAA,MACzG,EAAE,MAAM,UAAU,UAAU,wBAAwB,YAAY,0BAA0B,UAAU,iBAAiB;AAAA,MACrH,EAAE,MAAM,QAAQ,UAAU,sBAAsB,YAAY,wBAAwB,UAAU,eAAe;AAAA,IAC/G;AAEA,IAAMA,iBAAgBF,GAAE,OAAO;AAAA,MAC7B,WAAWA,GAAE,OAAO,EAAE,SAAS;AAAA,MAC/B,SAASA,GAAE,OAAO,EAAE,IAAI,GAAG,iCAAiC;AAAA,MAC5D,KAAKA,GAAE,QAAQ,EAAE,SAAS;AAAA,MAC1B,QAAQA,GACL;AAAA,QACCA,GAAE,OAAO;AAAA,UACP,OAAOA,GAAE,OAAO,EAAE,SAAS;AAAA,UAC3B,aAAaA,GAAE,OAAO,EAAE,SAAS;AAAA,UACjC,KAAKA,GAAE,OAAO,EAAE,SAAS;AAAA,UACzB,OAAOA,GAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,QACnC,CAAC;AAAA,MACH,EACC,SAAS;AAAA,MACZ,UAAUA,GAAE,OAAO,EAAE,SAAS;AAAA,IAChC,CAAC;AAAA;AAAA;;;ACzBD,SAAS,iBAAiB;AAD1B,IAgBM,eAUA,mBAoCO;AA9Db;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,gBAAgB,UAAU;AAUhC,IAAM,oBAA2C;AAAA,MAC/C,EAAE,MAAM,4BAA4B,QAAQ,oBAAoB,SAAS,kBAAkB;AAAA,MAC3F,EAAE,MAAM,oBAAoB,QAAQ,mBAAmB,SAAS,iBAAiB;AAAA,MACjF,EAAE,MAAM,uBAAuB,QAAQ,mBAAmB,SAAS,iBAAiB;AAAA,MACpF;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,iBAAO,cAAc,SAAS;AAAA,QAChC;AAAA,QACA,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,oBAAoB,QAAQ,kBAAkB,SAAS,gBAAgB;AAAA,MAC/E,EAAE,MAAM,iBAAiB,QAAQ,iBAAiB,SAAS,eAAe;AAAA,MAC1E,EAAE,MAAM,qBAAqB,QAAQ,iBAAiB,SAAS,eAAe;AAAA,MAC9E,EAAE,MAAM,sBAAsB,QAAQ,oBAAoB,SAAS,kBAAkB;AAAA,MACrF,EAAE,MAAM,cAAc,QAAQ,gBAAgB,SAAS,cAAc;AAAA,MACrE,EAAE,MAAM,eAAe,QAAQ,gBAAgB,SAAS,cAAc;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY,mBAAmB;AAAA,MACzC;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY,iBAAiB;AAAA,MACvC;AAAA,IACF;AACA,sBAAkB,KAAK;AAAA,MACrB,MAAM;AAAA,MACN,QAAQ,YAAY,wBAAwB;AAAA,IAC9C,CAAC;AAED,sBAAkB,KAAK;AAAA,MACrB,MAAM;AAAA,MACN,QAAQ,YAAY,uBAAuB;AAAA,IAC7C,CAAC;AAEM,IAAM,mBAA0C;AAAA;AAAA;;;ACtDvD,eAAe,kBAAuC;AACpD,QAAM,aAAa,MAAM,QAAQ;AAAA,IAC/B,iBAAiB,IAAI,OAAO,EAAE,MAAM,OAAO,MAAM;AAC/C,UAAI;AACF,eAAO,MAAM,OAAO;AAAA,MACtB,SAAS,OAAO;AACd,gBAAQ,MAAM,gCAAgC,IAAI,KAAK,KAAK;AAC5D,eAAO,CAAC;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO,WAAW,KAAK;AACzB;AAEA,eAAsB,iBAAsC;AAC1D,MAAI,cAAc,iBAAiB,wBAAyB,QAAO;AACnE,MAAI,CAAC,gBAAgB,iBAAiB,yBAAyB;AAC7D,mBAAe,gBAAgB,EAAE,KAAK,CAAC,UAAU;AAC/C,mBAAa;AACb,qBAAe;AACf,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,SAAO;AACT;AAEA,eAAsB,kBAAkB;AACtC,QAAM,QAAQ;AAAA,IACZ,iBAAiB,IAAI,OAAO,EAAE,SAAS,KAAK,MAAM;AAChD,UAAI,CAAC,QAAS;AACd,UAAI;AACF,cAAM,QAAQ,QAAQ;AAAA,MACxB,SAAS,OAAO;AACd,gBAAQ,MAAM,iCAAiC,IAAI,KAAK,KAAK;AAAA,MAC/D;AAAA,IACF,CAAC;AAAA,EACH;AACF;AA7CA,IAII,YACA,cACA;AANJ;AAAA;AACA;AACA;AAsDA;AApDA,IAAI,aAAgC;AACpC,IAAI,eAA2C;AAC/C,IAAI,eAA8B;AAyClC,QAAI,OAAO,YAAY,aAAa;AAClC,cAAQ,KAAK,QAAQ,MAAM;AACzB,aAAK,gBAAgB;AAAA,MACvB,CAAC;AACD,cAAQ,KAAK,UAAU,MAAM;AAC3B,aAAK,gBAAgB,EAAE,QAAQ,MAAM,QAAQ,KAAK,CAAC,CAAC;AAAA,MACtD,CAAC;AAAA,IACH;AAAA;AAAA;;;ACtDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACKA,eAAe,eAAoC;AACjD,MAAI,CAAC,sBAAsB,kBAAkB,yBAAyB;AACpE,yBAAqB,eAAe;AACpC,oBAAgB;AAAA,EAClB;AACA,SAAO;AACT;AAEA,eAAsB,iBAAiB,WAAyC;AAC9E,QAAM,QAAQ,MAAM,aAAa;AACjC,MAAI,CAAC,UAAW,QAAO,MAAM,MAAM;AAEnC,QAAM,aAAa,UAAU,YAAY;AACzC,SAAO,MAAM,OAAO,CAAC,SAAS;AAC5B,QAAI,CAAC,MAAM,KAAM,QAAO;AACxB,QAAI,KAAK,KAAK,SAAS,WAAW,KAAK,KAAK,KAAK,SAAS,UAAU,GAAG;AACrE,YAAM,UAAU,KAAK,KAAK,MAAM,GAAG,EAAE,CAAC,GAAG,YAAY;AACrD,aAAO,YAAY;AAAA,IACrB;AACA,WAAO;AAAA,EACT,CAAC;AACH;AA5BA,IAII,oBACA;AALJ;AAAA;AACA;AACA;AAEA,IAAI,qBAAiD;AACrD,IAAI,gBAA+B;AAAA;AAAA;;;ACW5B,SAAS,qBAAqB,SAA0B;AAC7D,QAAM,QAAQ,SAAS,YAAY;AACnC,QAAM,eAAe,SAAS,iBAAiB,KAAK,IAChD;AAAA,MAA6B,iBAAiB,KAAK,CAAC,sGACpD;AACJ,QAAM,cAAc,SAAS,gBAAgB,KAAK,IAC9C;AAAA,MAA4B,gBAAgB,KAAK,CAAC,uGAClD;AAEJ,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiFP,YAAY;AAAA;AAAA,EAEZ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOX,KAAK;AACP;AApHA,IAAM,kBAQA;AARN;AAAA;AAAA,IAAM,mBAA2C;AAAA,MAC/C,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,IACR;AAEA,IAAM,kBAA0C;AAAA,MAC9C,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,IACR;AAAA;AAAA;;;ACdA;AAAA;AAAA;AAAA;AAAA,SAAS,gBAAAG,qBAAoB;AAC7B,YAAY,YAAY;AAKxB,eAAsB,SAAS;AAC7B,QAAM,QAAQ,MAAM,iBAAiB,QAAQ;AAC7C,SAAO,MAAMA,cACV,OAAO,QAAQ,EACf,UAAU,kBAAkB,EAC5B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBnB,qBAAqB,QAAQ,CAAC;AAAA,CAC/B,EACI,UAAU,GAAG,KAAK,EAClB,MAAM;AACX;AApCA;AAAA;AAEA;AACA;AACA,IAAO,cAAO;AAAA;AAAA;;;ACJd,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA;AACA,SAAS,gBAAAC,qBAAoB;AAC7B,YAAYC,aAAY;AAKxB,eAAsB,OAAO;AAC3B,QAAM,QAAQ,MAAM,iBAAiB,MAAM;AAC3C,SAAO,MAAMD,cACV,OAAO,MAAM,EACb,UAAU,kBAAkB,EAC5B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBnB,qBAAqB,MAAM,CAAC;AAAA,CAC7B,EACI,UAAU,GAAG,KAAK,EAClB,MAAM;AACX;AAvCA,IAAAE,cAAA;AAAA;AAGA;AACA;AACA,IAAO,eAAO;AAAA;AAAA;;;ACLd,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA;AACA,SAAS,gBAAAC,qBAAoB;AAC7B,YAAYC,aAAY;AAKxB,eAAsB,MAAM;AAC1B,QAAM,QAAQ,MAAM,iBAAiB,KAAK;AAC1C,SAAO,MAAMD,cACV,OAAO,KAAK,EACZ,UAAU,kBAAkB,EAC5B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BnB,qBAAqB,KAAK,CAAC;AAAA,CAC5B,EACI,UAAU,GAAG,KAAK,EAClB,MAAM;AACX;AA1CA,IAAAE,cAAA;AAAA;AAGA;AACA;AACA,IAAO,eAAO;AAAA;AAAA;;;ACLd,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA;AACA,SAAS,gBAAAC,qBAAoB;AAC7B,YAAYC,aAAY;AAKxB,eAAsB,SAAS;AAC7B,QAAM,QAAQ,MAAM,iBAAiB,QAAQ;AAC7C,SAAO,MAAMD,cACV,OAAO,QAAQ,EACf,UAAU,kBAAkB,EAC5B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBnB,qBAAqB,QAAQ,CAAC;AAAA,CAC/B,EACI,UAAU,GAAG,KAAK,EAClB,MAAM;AACX;AAtCA,IAAAE,cAAA;AAAA;AAGA;AACA;AACA,IAAO,eAAO;AAAA;AAAA;;;ACLd,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA;AACA,SAAS,gBAAAC,qBAAoB;AAC7B,YAAYC,aAAY;AAKxB,eAAsB,OAAO;AAC3B,QAAM,QAAQ,MAAM,iBAAiB,MAAM;AAC3C,SAAO,MAAMD,cACV,OAAO,MAAM,EACb,UAAU,kBAAkB,EAC5B,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBnB,qBAAqB,MAAM,CAAC;AAAA,CAC7B,EACI,UAAU,GAAG,KAAK,EAClB,MAAM;AACX;AAxCA,IAAAE,cAAA;AAAA;AAGA;AACA;AACA,IAAO,eAAO;AAAA;AAAA;;;ACJd,OAAO,aAAa;AACpB,OAAO,UAAU;AACjB,OAAO,YAAY;AACnB,OAAO,mBAAmB;AAC1B,OAAOC,YAAU;AACjB,SAAS,iBAAAC,sBAAqB;AAC9B,OAAOC,aAAY;;;ACPnB;AAEA,IAAM,QAA6B,CAAC;AAEpC,eAAsB,iBAAiB,MAAc;AACnD,QAAM,WAAW,GAAG,IAAI,IAAI,uBAAuB;AACnD,MAAI,MAAM,QAAQ,EAAG,QAAO,MAAM,QAAQ;AAE1C,UAAQ,MAAM;AAAA,IACZ,KAAK,UAAU;AACb,YAAM,EAAE,QAAAC,QAAO,IAAI,MAAM;AACzB,YAAM,QAAQ,MAAMA,QAAO;AAC3B,YAAM,QAAQ,IAAI,MAAM;AACxB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,IACA,KAAK,QAAQ;AACX,YAAM,EAAE,MAAAC,MAAK,IAAI,MAAM;AACvB,YAAM,QAAQ,MAAMA,MAAK;AACzB,YAAM,QAAQ,IAAI,MAAM;AACxB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,IACA,KAAK,OAAO;AACV,YAAM,EAAE,KAAAC,KAAI,IAAI,MAAM;AACtB,YAAM,QAAQ,MAAMA,KAAI;AACxB,YAAM,QAAQ,IAAI,MAAM;AACxB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,IACA,KAAK,UAAU;AACb,YAAM,EAAE,QAAAC,QAAO,IAAI,MAAM;AACzB,YAAM,QAAQ,MAAMA,QAAO;AAC3B,YAAM,QAAQ,IAAI,MAAM;AACxB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,IACA,KAAK,QAAQ;AACX,YAAM,EAAE,MAAAC,MAAK,IAAI,MAAM;AACvB,YAAM,QAAQ,MAAMA,MAAK;AACzB,YAAM,QAAQ,IAAI,MAAM;AACxB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,IACA;AACE,YAAM,IAAI,MAAM,kBAAkB,IAAI,EAAE;AAAA,EAC5C;AACF;AAEA,eAAsB,eAAe,OAAiB;AACpD,QAAM,QAAQ,IAAI,MAAM,IAAI,CAAC,MAAM,iBAAiB,CAAC,EAAE,MAAM,MAAM;AAAA,EAAC,CAAC,CAAC,CAAC;AACzE;;;AC7CA,OAAO,YAAY;;;ACInB,OAAO;AACP,OAAO,WAAW;AALlB,IAAI,OAAO,WAAW,aAAa;AACjC,QAAM,IAAI,MAAM,oDAAoD;AACtE;AAKO,IAAM,OAAO,MAAM,WAAW;AAAA,EACnC,MAAM,QAAQ,IAAI,WAAW;AAAA,EAC7B,MAAM,OAAO,QAAQ,IAAI,WAAW,MAAM;AAAA,EAC1C,MAAM,QAAQ,IAAI,WAAW;AAAA,EAC7B,UAAU,QAAQ,IAAI,eAAe;AAAA,EACrC,UAAU,QAAQ,IAAI,WAAW;AAAA,EACjC,oBAAoB;AAAA,EACpB,iBAAiB,OAAO,QAAQ,IAAI,iBAAiB,IAAI;AAC3D,CAAC;;;ADbD,SAAS,KAAAC,UAAS;AAClB,SAAS,mBAAmB;AAE5B,IAAM,eAAeA,GAAE,OAAO;AAAA,EAC5B,aAAaA,GAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE;AAAA,EACrC,OAAOA,GAAE,OAAO,EAAE,MAAM;AAAA,EACxB,UAAUA,GAAE,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAED,eAAO,YAAmCC,MAAsB;AAE9D,EAAAA,KAAI,KAAK,gBAAgB,OAAO,KAAK,UAAU;AAC7C,UAAM,SAAS,aAAa,UAAU,IAAI,IAAI;AAC9C,QAAI,CAAC,OAAO,SAAS;AACnB,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,OAAO,iBAAiB,SAAS,OAAO,MAAM,QAAQ,EAAE,CAAC;AAAA,IACpG;AACA,UAAM,EAAE,aAAa,OAAO,SAAS,IAAI,OAAO;AAEhD,UAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,wCAAwC,CAAC,KAAK,CAAC;AAC/E,QAAK,KAAe,OAAQ,QAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,OAAO,2BAA2B,CAAC;AAExG,UAAM,OAAO,MAAM,OAAO,KAAK,UAAU,EAAE;AAC3C,UAAM,CAAC,GAAG,IAAI,MAAM,KAAK;AAAA,MACvB;AAAA,MACA,CAAC,aAAa,OAAO,IAAI;AAAA,IAC3B;AAIA,UAAM,MAAM,YAAY,EAAE,EAAE,SAAS,KAAK;AAC1C,UAAM,SAAU,IAAY;AAG5B,UAAM,KAAK;AAAA,MACT;AAAA;AAAA,MAEA,CAAC,KAAK,QAAQ,aAAa,KAAK;AAAA,IAClC;AACA,UACG,UAAU,OAAO,KAAK;AAAA,MACrB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,MACR,MAAM;AAAA,MACN,QAAQ,KAAK,KAAK,KAAK;AAAA;AAAA,IACzB,CAAC,EACA,KAAK;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM,EAAE,IAAI,QAAQ,MAAM,aAAa,MAAa;AAAA,IACtD,CAAC;AAAA,EACL,CAAC;AACH;;;AErDA,OAAOC,aAAY;AAEnB,SAAS,KAAAC,UAAS;AAClB,SAAS,eAAAC,oBAAmB;AAE5B,IAAM,eAAeD,GAAE,OAAO;AAAA,EAC5B,OAAOA,GAAE,OAAO,EAAE,MAAM;AAAA,EACxB,UAAUA,GAAE,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAED,eAAO,YAAmCE,MAAsB;AAC9D,EAAAA,KAAI,KAAK,gBAAgB,OAAO,KAAK,UAAU;AAC7C,QAAI;AAEF,YAAM,SAAS,aAAa,UAAU,IAAI,IAAI;AAC9C,UAAI,CAAC,OAAO,SAAS;AACnB,eAAO,MAAM,KAAK,GAAG,EAAE,KAAK;AAAA,UAC1B,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,SAAS,OAAO,MAAM,QAAQ;AAAA,QAChC,CAAC;AAAA,MACH;AAEA,YAAM,EAAE,OAAO,SAAS,IAAI,OAAO;AAGnC,YAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,uCAAuC,CAAC,KAAK,CAAC;AAC9E,YAAM,QAAQ;AACd,UAAI,CAAC,MAAM,OAAQ,QAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,OAAO,iBAAiB,CAAC;AACrF,YAAM,OAAO,MAAM,CAAC;AAGpB,YAAM,UAAU,MAAMC,QAAO,QAAQ,UAAU,KAAK,aAAa;AACjE,UAAI,CAAC,QAAS,QAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,OAAO,sBAAsB,CAAC;AAGrF,YAAM,CAAC,QAAQ,IAAI,MAAM,KAAK;AAAA,QAC5B;AAAA,QACA,CAAC,KAAK;AAAA,MACR;AACA,YAAM,WAAW;AACjB,UAAI;AAEJ,UAAI,SAAS,QAAQ;AACnB,cAAM,SAAS,CAAC,EAAE;AAElB,cAAM,KAAK,QAAQ,wEAAwE,CAAC,GAAG,CAAC;AAAA,MAClG,OAAO;AAEL,cAAMF,aAAY,EAAE,EAAE,SAAS,KAAK;AACpC,cAAM,KAAK;AAAA,UACT;AAAA;AAAA,UAEA,CAAC,KAAK,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK;AAAA,QACtC;AAAA,MACF;AAGA,YACG,UAAU,OAAO,KAAK;AAAA,QACrB,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA;AAAA,QACR,MAAM;AAAA,QACN,QAAQ,KAAK,KAAK,KAAK;AAAA;AAAA,MACzB,CAAC,EACA,KAAK;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM,EAAE,IAAI,KAAK,IAAI,MAAM,KAAK,MAAM,OAAO,KAAK,MAAM;AAAA,MAC1D,CAAC;AAAA,IACL,SAAS,KAAU;AACjB,cAAQ,MAAM,iBAAiB,GAAG;AAClC,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,OAAO,6BAA6B,CAAC;AAAA,IAChF;AAAA,EACF,CAAC;AACH;;;AC3EA,eAAsB,eAAeG,MAAU;AAC7C,EAAAA,KAAI,IAAI,eAAe,OAAO,KAAU,UAAe;AACrD,UAAM,MAAM,IAAI,SAAS;AAEzB,QAAI,CAAC,KAAK;AACR,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,MAAM,CAAC;AAAA,IAC3C;AAEA,WAAO,MAAM,KAAK,EAAE,IAAI,KAAK,CAAC;AAAA,EAChC,CAAC;AACH;;;ACXA,eAAsB,YAAYC,MAAU;AAC1C,EAAAA,KAAI,KAAK,gBAAgB,OAAO,KAAU,UAAe;AACvD,UAAM,YAAY,OAAO;AAAA,MACvB,MAAM;AAAA;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IACV,CAAC;AAED,WAAO,MAAM,KAAK,EAAE,IAAI,MAAM,SAAS,0BAA0B,CAAC;AAAA,EACpE,CAAC;AACH;;;ACVA,SAAS,KAAAC,UAAS;;;ACDlB,SAAS,aAAa,+BAA+B;;;ACArD,OAAOC,SAAQ;AACf,OAAOC,YAAU;AAGjB,IAAM,sBAAsBA,OAAK,QAAQ,QAAQ,IAAI,GAAG,6BAA6B;AAErF,IAAI,eAAmC;AACvC,IAAI,cAA2C;AAE/C,eAAe,eAAe,UAAwC;AACpE,QAAM,MAAM,MAAMD,IAAG,SAAS,UAAU,MAAM;AAC9C,SAAO,KAAK,MAAM,GAAG;AACvB;AAEA,eAAsB,eAAe,aAAa,qBAA2C;AAC3F,MAAI,aAAc,QAAO;AACzB,MAAI,CAAC,aAAa;AAChB,kBAAc,eAAe,UAAU,EAAE,KAAK,CAAC,QAAQ;AACrD,qBAAe;AACf,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,SAAO;AACT;AAEA,eAAsB,eAAe,SAAuD;AAC1F,QAAME,UAAS,MAAM,eAAe;AACpC,SAAOA,QAAO,SAAS,OAAO,KAAK;AACrC;;;AC5BA,OAAOC,SAAQ;AAEf,OAAO,YAAY;AACnB,OAAO,kBAAkB;AACzB,SAAS,QAAQ,eAAe;AAGhC,IAAI,cAAc;AAChB,SAAO,cAAc,YAAY;AACnC;AAEA,IAAM,aAAa;AACnB,IAAM,aAAa;AAEnB,SAAS,YAAY,QAA0B;AAC7C,QAAM,UAAoB,CAAC;AAC3B,MAAI,YAAY;AAEhB,QAAMC,SAAQ,CAAC,QAAgB,KAAK,IAAI,YAAY,KAAK,IAAI,YAAY,GAAG,CAAC;AAE7E,MAAI,cAAc,EAAG,QAAO;AAE5B,SAAO,YAAY,cAAc,YAAY,YAAY;AACvD,QAAI,YAAY,YAAY;AAC1B,cAAQ,KAAK,UAAU;AACvB,mBAAa;AAAA,IACf,WAAW,YAAY,YAAY;AACjC,cAAQ,KAAK,UAAU;AACvB,mBAAa;AAAA,IACf;AAAA,EACF;AAEA,UAAQ,KAAKA,OAAM,SAAS,CAAC;AAC7B,SAAO;AACT;AAEA,SAAS,iBAAiB,MAAwBC,SAAqB;AACrE,QAAM,UAAoB,CAAC;AAC3B,QAAM,aAAa,KAAK;AACxB,QAAM,aAAaA,QAAO;AAE1B,QAAM,aAAa,KAAK,IAAI,GAAG,WAAW,iBAAiB,EAAE;AAC7D,QAAM,aAAa,IAAI,WAAW,UAAU;AAG5C,MAAI,KAAK,IAAI,WAAW,cAAc,IAAI,MAAM;AAC9C,YAAQ,KAAK,aAAa,aAAa,YAAY,QAAQ,CAAC,CAAC,EAAE;AAC/D,UAAM,eAAe,IAAI;AACzB,eAAW,SAAS,YAAY,YAAY,GAAG;AAC7C,cAAQ,KAAK,UAAU,MAAM,QAAQ,CAAC,CAAC,EAAE;AAAA,IAC3C;AAAA,EACF;AAEA,MAAI,KAAK,IAAI,aAAa,CAAC,IAAI,MAAM;AACnC,eAAW,SAAS,YAAY,UAAU,GAAG;AAC3C,cAAQ,KAAK,UAAU,MAAM,QAAQ,CAAC,CAAC,EAAE;AAAA,IAC3C;AAAA,EACF;AAEA,MAAI,WAAW,GAAG,YAAY;AAC5B,YAAQ;AAAA,MACN,+BAA+B,WAAW,GAAG,WAAW,QAAQ,CAAC,CAAC;AAAA,IACpE;AAAA,EACF;AACA,MAAI,WAAW,GAAG,YAAY;AAC5B,YAAQ;AAAA,MACN,gCAAgC,WAAW,GAAG,WAAW,QAAQ,CAAC,CAAC;AAAA,IACrE;AAAA,EACF;AACA,MAAI,WAAW,GAAG,OAAO;AACvB,YAAQ;AAAA,MACN,gCAAgC,WAAW,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,IAChE;AAAA,EACF;AAEA,MAAI,WAAW,OAAO,MAAM,GAAG;AAC7B,UAAM,MAAM,KAAK,IAAI,KAAK,KAAK,IAAI,GAAG,WAAW,OAAO,GAAG,CAAC;AAC5D,UAAM,eAAe,MAAM,MAAM,KAAK,QAAQ,CAAC;AAC/C,UAAM,cAAc,MAAM,MAAM,KAAK,QAAQ,CAAC;AAC9C,UAAM,QAAQ,KAAK,IAAI,GAAG,WAAW,OAAO,UAAU;AACtD,UAAM,SAAS,MAAM,MAAM,KAAK,QAAQ,CAAC;AACzC,YAAQ,KAAK,SAAS,UAAU,IAAI,WAAW,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EACrE;AAEA,SAAO;AACT;AAEA,eAAe,UACb,WACA,YACAA,SACA,aACe;AACf,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,UAAU,OAAO,SAAS,EAC7B,eAAeA,QAAO,UAAU,EAChC,WAAW,YAAY,EACvB,cAAc,QAAQ,MAAM,EAC5B,OAAO,UAAU;AAEpB,QAAI,YAAY,QAAQ;AACtB,cAAQ,aAAa,WAAW;AAAA,IAClC;AAEA,YAAQ,GAAG,OAAO,OAAO,EAAE,GAAG,SAAS,MAAM,EAAE,IAAI;AAAA,EACrD,CAAC;AACH;AAEA,eAAsB,uBACpB,QACAA,SACA,MACiB;AACjB,MAAI;AACF,UAAM,cAAc,iBAAiB,MAAMA,OAAM;AACjD,QAAI,CAAC,YAAY,QAAQ;AACvB,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,MAAM,QAAQ,EAAE,SAAS,OAAO,CAAC;AAClD,UAAM,YAAY,MAAM,QAAQ,EAAE,SAAS,OAAO,CAAC;AACnD,QAAI;AACF,YAAMF,IAAG,UAAU,SAAS,MAAM,MAAM;AACxC,YAAM,UAAU,SAAS,MAAM,UAAU,MAAME,SAAQ,WAAW;AAClE,aAAO,MAAMF,IAAG,SAAS,UAAU,IAAI;AAAA,IACzC,UAAE;AACA,YAAM,QAAQ,WAAW,CAACA,IAAG,OAAO,SAAS,IAAI,GAAGA,IAAG,OAAO,UAAU,IAAI,CAAC,CAAC;AAAA,IAChF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,KAAK,iDAAiD,KAAK;AACnE,WAAO;AAAA,EACT;AACF;AAQA,eAAe,cAAc,UAAmC;AAC9D,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAO,QAAQ,UAAU,CAAC,KAAK,SAAS;AACtC,UAAI,IAAK,QAAO,OAAO,GAAG;AAC1B,eAAS,KAAK,OAAO,YAAY,KAAK,GAAI;AAAA,IAC5C,CAAC;AAAA,EACH,CAAC;AACH;AAEA,eAAe,aAAa,UAA+C;AACzE,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,QAAI;AACJ,UAAM,UAAU,OAAO,QAAQ,EAC5B,aAAa,cAAc,EAC3B,OAAO,MAAM,EACb,OAAO,GAAG,EACV,GAAG,UAAU,CAAC,SAAiB;AAC9B,YAAM,QAAQ,KAAK,MAAM,kCAAkC;AAC3D,UAAI,OAAO;AACT,qBAAa,OAAO,WAAW,MAAM,CAAC,CAAC;AAAA,MACzC;AAAA,IACF,CAAC,EACA,GAAG,OAAO,MAAM,QAAQ,UAAU,CAAC,EACnC,GAAG,SAAS,MAAM,QAAQ,MAAS,CAAC;AACvC,YAAQ,IAAI;AAAA,EACd,CAAC;AACH;AAEA,eAAsB,aACpB,QACA,MACAE,SACwB;AACxB,MAAI;AACF,UAAM,MAAM,MAAM,QAAQ,EAAE,SAAS,OAAO,CAAC;AAC7C,QAAI;AACF,YAAMF,IAAG,UAAU,IAAI,MAAM,MAAM;AACnC,YAAM,CAAC,YAAY,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,QACnD,cAAc,IAAI,IAAI;AAAA,QACtB,aAAa,IAAI,IAAI;AAAA,MACvB,CAAC;AAED,YAAM,QAAQ,KAAK,KAAK,EAAE,MAAM,KAAK,EAAE,UAAU;AACjD,YAAM,UAAU,aAAa,OAAQ;AACrC,YAAM,mBAAmB,QAAQ;AAEjC,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,UAAE;AACA,YAAMA,IAAG,OAAO,IAAI,IAAI,EAAE,MAAM,MAAM;AAAA,MAAC,CAAC;AAAA,IAC1C;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,KAAK,iDAAiD,KAAK;AACnE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,kBAAkB;AAAA,IACpB;AAAA,EACF;AACF;;;ACzMA,OAAO,YAAY;AACnB,OAAOG,SAAQ;AACf,OAAOC,YAAU;AAKjB,IAAM,YAAY;AAClB,IAAM,WAAW;AAEjB,SAAS,QAAQ,MAA6B;AAC5C,QAAM,OAAO,KAAK,UAAU,MAAM,OAAO,KAAK,IAAI,EAAE,KAAK,CAAC;AAC1D,SAAO,OAAO,WAAW,MAAM,EAAE,OAAO,IAAI,EAAE,OAAO,KAAK;AAC5D;AAEA,eAAe,UAAU,KAAa;AACpC,QAAMD,IAAG,MAAM,KAAK,EAAE,WAAW,KAAK,CAAC;AACzC;AAEO,SAAS,cAAc,OAA8B;AAC1D,SAAO,QAAQ,KAAK;AACtB;AAEA,SAAS,aAAa,UAAkB,KAAa;AACnD,SAAO;AAAA,IACL,WAAWC,OAAK,KAAK,UAAU,GAAG,GAAG,GAAG,SAAS,EAAE;AAAA,IACnD,UAAUA,OAAK,KAAK,UAAU,GAAG,GAAG,GAAG,QAAQ,EAAE;AAAA,EACnD;AACF;AAEA,eAAsB,cACpBC,SACA,KAC2D;AAC3D,QAAM,WAAWD,OAAK,QAAQ,QAAQ,IAAI,GAAGC,QAAO,MAAM,GAAG;AAC7D,MAAI;AACF,UAAM,EAAE,WAAW,SAAS,IAAI,aAAa,UAAU,GAAG;AAC1D,UAAM,CAAC,WAAW,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC9CF,IAAG,KAAK,SAAS;AAAA,MACjBA,IAAG,KAAK,QAAQ;AAAA,IAClB,CAAC;AAED,UAAM,MAAM,KAAK,IAAI;AACrB,UAAM,WAAWE,QAAO,MAAM,YAAY;AAC1C,UAAM,SAAS,KAAK,IAAI,UAAU,SAAS,SAAS,OAAO;AAC3D,QAAI,MAAM,SAAS,UAAU;AAC3B,aAAO;AAAA,IACT;AAEA,UAAM,CAAC,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC1CF,IAAG,SAAS,SAAS;AAAA,MACrBA,IAAG,SAAS,UAAU,MAAM;AAAA,IAC9B,CAAC;AAED,UAAM,OAAO,KAAK,MAAM,OAAO;AAC/B,SAAK,QAAQ;AAAA,MACX;AAAA,MACA,KAAK;AAAA,MACL,WAAW,SAAS;AAAA,IACtB;AAEA,WAAO,EAAE,QAAQ,KAAK;AAAA,EACxB,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAEA,eAAsB,YACpBE,SACA,KACA,QACA,MACA;AACA,QAAM,WAAWD,OAAK,QAAQ,QAAQ,IAAI,GAAGC,QAAO,MAAM,GAAG;AAC7D,QAAM,UAAU,QAAQ;AACxB,QAAM,EAAE,WAAW,SAAS,IAAI,aAAa,UAAU,GAAG;AAE1D,QAAM,gBAAiC;AAAA,IACrC,GAAG;AAAA,IACH,OAAO;AAAA,MACL;AAAA,MACA,KAAK;AAAA,MACL,WAAW,KAAK,IAAI,IAAIA,QAAO,MAAM,YAAY;AAAA,IACnD;AAAA,EACF;AAEA,QAAM,QAAQ,IAAI;AAAA,IAChBF,IAAG,UAAU,WAAW,MAAM;AAAA,IAC9BA,IAAG,UAAU,UAAU,KAAK,UAAU,eAAe,MAAM,CAAC,GAAG,MAAM;AAAA,EACvE,CAAC;AACH;;;AHrEA,IAAM,iBAAiB,QAAQ,IAAI,cAAc;AAEjD,IAAI,eAAmC;AACvC,IAAI,eAA8B;AAElC,eAAe,eAAe,QAAsC;AAClE,MAAI,CAAC,gBAAgB,iBAAiB,QAAQ;AAC5C,mBAAe,IAAI,YAAY,EAAE,OAAO,CAAC;AACzC,mBAAe;AAAA,EACjB;AACA,SAAO;AACT;AAEA,eAAe,eAAe,QAA0D;AACtF,MAAI,CAAC,OAAQ,QAAO,OAAO,MAAM,CAAC;AAClC,MAAI,OAAO,SAAS,MAAM,EAAG,QAAO;AACpC,MAAI,kBAAkB,WAAY,QAAO,OAAO,KAAK,MAAM;AAE3D,QAAM,SAAmB,CAAC;AAC1B,mBAAiB,SAAS,QAAQ;AAChC,WAAO,KAAK,OAAO,UAAU,WAAW,OAAO,KAAK,KAAK,IAAI,OAAO,KAAK,KAAK,CAAC;AAAA,EACjF;AACA,SAAO,OAAO,OAAO,MAAM;AAC7B;AAEA,SAAS,mBAAmB,WAA2B;AACrD,QAAM,QAAQ,KAAK,IAAI,GAAG,YAAY,EAAE;AACxC,QAAM,WAAW,QAAQ,KAAK;AAC9B,QAAM,YAAY,WAAW,IAAI,IAAI,QAAQ,QAAQ,CAAC,CAAC,MAAM,GAAG,QAAQ,QAAQ,CAAC,CAAC;AAClF,SAAO;AACT;AAEA,SAAS,iBAAiB,SAAyB;AACjD,QAAM,OAAO,MAAM;AACnB,SAAO,GAAG,KAAK,QAAQ,CAAC,CAAC;AAC3B;AAEA,SAAS,uBAAuB,YAAiC;AAC/D,SAAO;AAAA,IACL,OAAO,mBAAmB,WAAW,cAAc;AAAA,IACnD,MAAM,iBAAiB,WAAW,OAAO;AAAA,EAC3C;AACF;AAEA,SAAS,UAAU,MAAsB;AACvC,SAAO,KACJ,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ,EACtB,QAAQ,MAAM,QAAQ;AAC3B;AAEA,SAAS,aAAa,MAAsB;AAC1C,SAAO,KACJ,QAAQ,WAAC,8BAA0B,IAAE,GAAE,EAAE,EACzC,QAAQ,mBAAmB,EAAE,EAC7B,QAAQ,QAAQ,GAAG,EACnB,KAAK;AACV;AAEA,SAAS,gBAAgB,MAAc,SAAmC;AACxE,QAAM;AAAA,IACJ,SAAS,EAAE,QAAQ;AAAA,EACrB,IAAI,QAAQ;AAEZ,QAAM,UAAU,UAAU,IAAI;AAE9B,QAAM,aAAa,QAAQ,QAAQ,gBAAgB,QAAQ,KAAK,UAAU;AAC1E,QAAM,cAAc,QAAQ,SAAS,gBAAgB,QAAQ,MAAM,UAAU;AAC7E,QAAM,iBAAiB,QAAQ,YAAY,gBAAgB,QAAQ,SAAS,UAAU;AAEtF,MAAI,WAAW,QACZ,QAAQ,SAAS,CAAC,UAAU,IAAI,UAAU,GAAG,EAC7C,QAAQ,eAAe,CAAC,QAAQ,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,EACnE,QAAQ,WAAW,GAAG,cAAc,EAAE;AAEzC,aAAW,SAAS,QAAQ,WAAW,gBAAgB,QAAQ,MAAM,OAAO;AAE5E,QAAM,cAAc,uBAAuB,QAAQ,UAAU;AAC7D,QAAM,aAAa,QAAQ,WAAW,GAAG,aAAa,IAAI,WAAW;AAErE,QAAM,QAAQ,mBAAmB,YAAY,KAAK,WAAW,YAAY,IAAI,IAAI,eAAe,YAAY,YAAY,UAAU,MAAM,EAAE,IAAI,QAAQ;AAEtJ,SAAO,sDAAsD,KAAK;AACpE;AAEA,SAAS,eAAe,MAAsB;AAC5C,SAAO,sDAAsD,UAAU,IAAI,CAAC;AAC9E;AAEA,SAAS,UAAU,MAAc,SAAmC;AAClE,SAAO,gBAAgB,MAAM,OAAO;AACtC;AAEA,SAAS,MAAM,OAAe,KAAa,KAAa;AACtD,SAAO,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC;AAC3C;AAEA,SAAS,gBAAgB,MAAgD;AACvE,SAAO,KAAK,MAAM,KAAK,UAAU,IAAI,CAAC;AACxC;AAEA,eAAe,iBACb,QACA,YACuB;AACvB,MAAI;AACF,UAAM,SAAuC;AAAA,MAC3C,SAAS,WAAW;AAAA,MACpB,MAAM,WAAW;AAAA,MACjB,UAAU,WAAW;AAAA,MACrB,QAAQ,WAAW;AAAA,MACnB,cAAc,WAAW;AAAA,MACzB,cAAc;AAAA,MACd,iBAAiB,CAAC,MAAM;AAAA,IAC1B;AAEA,UAAM,WAAW,MAAM,OAAO,KAAK,IAAI,wBAAwB,MAAM,CAAC;AACtE,UAAM,SAAS,MAAM,eAAe,SAAS,WAAW;AACxD,UAAM,MAAM,OAAO,SAAS,MAAM,EAAE,KAAK;AACzC,QAAI,CAAC,IAAK,QAAO,CAAC;AAElB,UAAM,QAAQ,IACX,MAAM,OAAO,EACb,IAAI,CAAC,SAAS;AACb,UAAI;AACF,cAAM,SAAS,KAAK,MAAM,IAAI;AAC9B,YAAI,QAAQ,SAAS,UAAU,OAAO,OAAO,UAAU,UAAU;AAC/D,iBAAO;AAAA,QACT;AACA,cAAM,OAAO,OAAO,OAAO,QAAQ,CAAC;AACpC,YAAI,OAAO,MAAM,IAAI,EAAG,QAAO;AAC/B,cAAM,QACJ,OAAO,OAAO,UAAU,WAAW,KAAK,IAAI,GAAG,OAAO,KAAK,IAAI;AACjE,cAAM,MACJ,OAAO,OAAO,QAAQ,WAAW,KAAK,IAAI,GAAG,OAAO,GAAG,IAAI;AAC7D,eAAO;AAAA,UACL;AAAA,UACA,MAAM;AAAA,UACN,OAAO,OAAO;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAAA,MACF,QAAQ;AACN,eAAO;AAAA,MACT;AAAA,IACF,CAAC,EACA,OAAO,CAAC,SAA6B,QAAQ,IAAI,CAAC;AAErD,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,KAAK,yCAAyC,KAAK;AAC3D,WAAO,CAAC;AAAA,EACV;AACF;AAEA,SAAS,kBACP,aACA,MACkB;AAClB,QAAM,YAAY,gBAAgB,YAAY,UAAU;AACxD,QAAM,QAAQ,CAAC,YAA0C;AACvD,QAAI,QAAQ,mBAAmB,QAAW;AACxC,gBAAU,iBAAiB;AAAA,QACzB,UAAU,iBAAiB,QAAQ;AAAA,QACnC;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,QAAQ,YAAY,QAAW;AACjC,gBAAU,UAAU,MAAM,UAAU,UAAU,QAAQ,SAAS,KAAK,EAAE;AAAA,IACxE;AACA,QAAI,QAAQ,IAAI;AACd,gBAAU,GAAG,aAAa;AAAA,QACxB,UAAU,GAAG,cAAc,QAAQ,GAAG,cAAc;AAAA,QACpD;AAAA,QACA;AAAA,MACF;AACA,gBAAU,GAAG,aAAa;AAAA,QACxB,UAAU,GAAG,cAAc,QAAQ,GAAG,cAAc;AAAA,QACpD;AAAA,QACA;AAAA,MACF;AACA,gBAAU,GAAG,QAAQ;AAAA,QACnB,UAAU,GAAG,SAAS,QAAQ,GAAG,SAAS;AAAA,QAC1C;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,QAAQ,QAAQ;AAClB,gBAAU,OAAO,MAAM;AAAA,QACrB,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO;AAAA,QAC9C;AAAA,QACA;AAAA,MACF;AACA,gBAAU,OAAO,aAAa;AAAA,QAC5B,UAAU,OAAO,cAAc,QAAQ,OAAO,cAAc;AAAA,QAC5D;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,QAAQ,QAAQ;AAClB,gBAAU,OAAO,OAAO;AAAA,QACtB,UAAU,OAAO,QAAQ,QAAQ,OAAO,QAAQ;AAAA,QAChD;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,UAAQ,KAAK,WAAW;AAAA,IACtB,KAAK;AACH,YAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,SAAS;AAAA,QACT,IAAI,EAAE,YAAY,KAAK,OAAO,IAAI;AAAA,QAClC,QAAQ,EAAE,MAAM,KAAK;AAAA,MACvB,CAAC;AACD;AAAA,IACF,KAAK;AACH,YAAM,EAAE,gBAAgB,KAAK,SAAS,EAAE,CAAC;AACzC;AAAA,IACF,KAAK;AACH,YAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,SAAS;AAAA,QACT,IAAI,EAAE,YAAY,MAAM,YAAY,KAAK;AAAA,MAC3C,CAAC;AACD;AAAA,IACF,KAAK;AACH,YAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,SAAS;AAAA,QACT,QAAQ,EAAE,KAAK,KAAK;AAAA,MACtB,CAAC;AACD;AAAA,IACF,KAAK;AACH,YAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,SAAS;AAAA,QACT,IAAI,EAAE,YAAY,KAAK;AAAA,MACzB,CAAC;AACD;AAAA,IACF;AACE;AAAA,EACJ;AAEA,UAAQ,KAAK,OAAO;AAAA,IAClB,KAAK;AACH,YAAM,EAAE,gBAAgB,KAAK,SAAS,GAAG,QAAQ,EAAE,MAAM,KAAK,EAAE,CAAC;AACjE;AAAA,IACF,KAAK;AACH,YAAM,EAAE,gBAAgB,KAAK,SAAS,EAAE,CAAC;AACzC;AAAA,IACF,KAAK;AACH,YAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,SAAS;AAAA,QACT,QAAQ,EAAE,KAAK,KAAK;AAAA,MACtB,CAAC;AACD;AAAA,IACF,KAAK;AACH,YAAM,EAAE,SAAS,IAAI,IAAI,EAAE,YAAY,KAAK,EAAE,CAAC;AAC/C;AAAA,IACF,KAAK;AACH,YAAM,EAAE,SAAS,IAAI,IAAI,EAAE,YAAY,IAAI,EAAE,CAAC;AAC9C;AAAA,IACF;AACE;AAAA,EACJ;AAEA,SAAO;AAAA,IACL,GAAG;AAAA,IACH,YAAY;AAAA,EACd;AACF;AAQA,eAAsB,sBAAsB,MAAqD;AAC/F,QAAM,EAAE,SAAS,KAAK,IAAI;AAC1B,QAAM,cAAc,aAAa,IAAI;AACrC,QAAM,gBAAgB,YAAY,SAAS,cAAc;AAEzD,QAAM,CAACG,SAAQ,WAAW,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC9C,eAAe;AAAA,IACf,eAAe,OAAO;AAAA,EACxB,CAAC;AAED,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,+BAA+B,OAAO,EAAE;AAAA,EAC1D;AAEA,QAAM,gBAAgB,kBAAkB,aAAa,IAAI;AAEzD,QAAM,WAAW,cAAc;AAAA,IAC7B;AAAA,IACA,MAAM;AAAA,IACN,OAAO,KAAK,SAAS;AAAA,IACrB,WAAW,KAAK,aAAa;AAAA,IAC7B,MAAM,KAAK,QAAQ;AAAA,IACnB,MAAM,cAAc;AAAA,EACtB,CAAC;AAED,QAAM,SAAS,MAAM,cAAcA,SAAQ,QAAQ;AACnD,MAAI,QAAQ;AACV,WAAO;AAAA,MACL,QAAQ,OAAO;AAAA,MACf,aAAaA,QAAO,iBAAiB,QAAQ,eAAe,SAASA,QAAO,YAAY;AAAA,MACxF,MAAM,OAAO;AAAA,IACf;AAAA,EACF;AAEA,QAAM,SAAS,QAAQ,IAAI,cAAcA,QAAO,UAAU;AAC1D,QAAM,SAAS,MAAM,eAAe,MAAM;AAE1C,QAAM,WAOD;AAAA,IACH;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,YAAY;AAAA,MACpB,UAAU;AAAA,MACV,SAAS,UAAU,eAAe,aAAa;AAAA,MAC/C,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,YAAY;AAAA,MACpB,UAAU;AAAA,MACV,SAAS,eAAe,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,YAAY;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,EACF;AAEA,MAAI,YAAY,WAAW,UAAU;AACnC,aAAS,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,aAAa;AAAA,IACf,CAAC;AAAA,EACH;AAEA,MAAI,YAAqB;AAEzB,aAAW,WAAW,UAAU;AAC9B,QAAI;AACF,YAAM,SAAuC;AAAA,QAC3C,cAAcA,QAAO;AAAA,QACrB,YAAY,OAAOA,QAAO,UAAU;AAAA,QACpC,SAAS,YAAY;AAAA,QACrB,UAAU,QAAQ;AAAA,QAClB,MAAM,QAAQ;AAAA,QACd,QAAQ,QAAQ;AAAA,QAChB,cAAc,YAAY;AAAA,MAC5B;AAEA,YAAM,WAA0C,MAAM,OAAO;AAAA,QAC3D,IAAI,wBAAwB,MAAM;AAAA,MACpC;AAEA,YAAM,aAAa,MAAM,eAAe,SAAS,WAAW;AAC5D,UAAI,CAAC,WAAW,QAAQ;AACtB,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACxD;AAEA,YAAM,kBAAkB,MAAM,uBAAuB,YAAYA,SAAQ,aAAa;AACtF,YAAM,cAAc,MAAM,iBAAiB,QAAQ,MAAM;AACzD,YAAM,WAAW,MAAM,aAAa,iBAAiB,eAAeA,OAAM;AAE1E,YAAM,OAAwB;AAAA,QAC5B;AAAA,QACA,WAAW,cAAc;AAAA,QACzB,QAAQ,QAAQ;AAAA,QAChB,SAAS;AAAA,UACP,aAAa,QAAQ;AAAA,UACrB,aAAa,QAAQ,WAAW;AAAA,UAChC,SAAS,oBAAoB;AAAA,QAC/B;AAAA,QACA,YAAY,cAAc;AAAA,QAC1B,SAAS;AAAA,UACP,OAAO,KAAK;AAAA,UACZ,WAAW,KAAK;AAAA,UAChB,MAAM,KAAK;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,QAAQ,YAAY;AACtB,cAAM,YAAYA,SAAQ,UAAU,iBAAiB,IAAI;AACzD,aAAK,QAAQ;AAAA,UACX,KAAK;AAAA,UACL,KAAK;AAAA,UACL,WAAW,KAAK,IAAI,IAAIA,QAAO,MAAM,YAAY;AAAA,QACnD;AAAA,MACF,OAAO;AACL,aAAK,QAAQ;AAAA,MACf;AAEA,aAAO;AAAA,QACL,QAAQ;AAAA,QACR,aAAa,SAAS,eAAe;AAAA,QACrC;AAAA,MACF;AAAA,IACF,SAAS,KAAU;AACjB,kBAAY;AACZ,YAAM,YACJ,KAAK,SAAS,0BAA0B,8BAA8B,KAAK,KAAK,WAAW,EAAE;AAC/F,UAAI,CAAC,WAAW;AACd,cAAM;AAAA,MACR;AACA;AAAA,IACF;AAAA,EACF;AAEA,QAAM,qBAAqB,QAAQ,YAAY,IAAI,MAAM,wBAAwB;AACnF;;;ADxcA,IAAM,gBAAuC,CAAC,UAAU,QAAQ,UAAU,OAAO,MAAM;AACvF,IAAM,gBAAgB,CAAC,eAAe,UAAU,YAAY,WAAW,YAAY,SAAS;AAC5F,IAAM,kBAAkB,CAAC,OAAO,OAAO,WAAW,QAAQ,SAAS;AAEnE,IAAM,gBAAgBC,GAAE,OAAO;AAAA,EAC7B,SAASA,GAAE,KAAK,aAAa;AAAA,EAC7B,MAAMA,GAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,IAAI;AAAA,EAChC,OAAOA,GAAE,KAAK,aAAa,EAAE,SAAS;AAAA,EACtC,WAAWA,GAAE,KAAK,eAAe,EAAE,SAAS;AAAA,EAC5C,MAAMA,GAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAClC,CAAC;AAED,eAAO,SAAgCC,MAAsB;AAC3D,EAAAA,KAAI,KAAK,QAAQ,OAAO,KAAK,UAAU;AACrC,QAAI;AACF,YAAM,SAAS,cAAc,UAAU,IAAI,IAAI;AAC/C,UAAI,CAAC,OAAO,SAAS;AACnB,eAAO,MAAM,KAAK,GAAG,EAAE,KAAK;AAAA,UAC1B,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,SAAS,OAAO,MAAM,QAAQ;AAAA,QAChC,CAAC;AAAA,MACH;AAEA,YAAM,SAAS,MAAM,sBAAsB,OAAO,IAAI;AAEtD,YAAM,KAAK,kBAAkB,EAAE,KAAK;AAAA,QAClC,IAAI;AAAA,QACJ,aAAa,OAAO;AAAA,QACpB,OAAO,OAAO,OAAO,SAAS,QAAQ;AAAA,QACtC,MAAM,OAAO;AAAA,MACf,CAAC;AAAA,IACH,SAAS,OAAY;AACnB,UAAI,IAAI,MAAM,EAAE,KAAK,MAAM,GAAG,kBAAkB;AAChD,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK;AAAA,QAC1B,IAAI;AAAA,QACJ,OAAO,OAAO,WAAW;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;AP7BAC,QAAO,OAAO;AAKd,IAAM,aAAaC,eAAc,YAAY,GAAG;AAChD,IAAMC,aAAYC,OAAK,QAAQ,UAAU;AAGzC,IAAM,MAAM,QAAQ,EAAE,QAAQ,MAAM,YAAY,KAAK,CAAC;AAGtD,QAAQ,GAAG,sBAAsB,CAAC,QAAa;AAC7C,MAAI,IAAI,MAAM,EAAE,IAAI,GAAG,oBAAoB;AAC7C,CAAC;AACD,QAAQ,GAAG,qBAAqB,CAAC,QAAa;AAC5C,MAAI,IAAI,MAAM,EAAE,IAAI,GAAG,mBAAmB;AAC5C,CAAC;AAGD,IAAI,QAAQ,WAAW,CAAC,UAAU;AAChC,MAAI,IAAI,KAAK,cAAO,MAAM,MAAM,KAAK,MAAM,GAAG,EAAE;AAClD,CAAC;AAKD,IAAM,aAAa,QAAQ,IAAI;AAC/B,IAAI,kBAAkB,aAClB,WAAW,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,IACzC,CAAC,yBAAyB,uBAAuB,GAElD,IAAI,CAAC,MAAM,EAAE,QAAQ,OAAO,EAAE,CAAC,EAC/B,OAAO,OAAO;AAGjB,IAAI,QAAQ,IAAI,aAAa,gBAAgB,CAAC,YAAY;AAExD,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,QAAQ;AACV,mBAAe,KAAK,WAAW,MAAM,IAAI,UAAU,MAAM,EAAE;AAAA,EAC7D,OAAO;AAEL,mBAAe,KAAK,oBAAoB;AAAA,EAC1C;AACF;AAEA,SAAS,gBAAgB,QAAgB;AACvC,MAAI,eAAe,SAAS,GAAG,EAAG,QAAO;AACzC,QAAM,aAAa,OAAO,QAAQ,OAAO,EAAE;AAC3C,MAAI,eAAe,SAAS,UAAU,EAAG,QAAO;AAGhD,MAAI;AACF,UAAM,IAAI,IAAI,IAAI,UAAU;AAC5B,UAAM,OAAO,EAAE,YAAY;AAC3B,QACE,eAAe,SAAS,oBAAoB,KAC5C,4BAA4B,KAAK,IAAI,GACrC;AACA,aAAO;AAAA,IACT;AAAA,EACF,QAAQ;AAAA,EAER;AACA,SAAO;AACT;AAEA,MAAM,IAAI,SAAS,MAAM;AAAA,EACvB,OAAO,QAAQ,IAAI;AACjB,QAAI,CAAC,OAAQ,QAAO,GAAG,MAAM,IAAI;AACjC,QAAI,gBAAgB,MAAM,EAAG,QAAO,GAAG,MAAM,IAAI;AACjD,OAAG,IAAI,MAAM,UAAU,MAAM,gCAAgC,GAAG,KAAK;AAAA,EACvE;AAAA,EACA,aAAa;AACf,CAAC;AAED,IAAM,eAAe,QAAQ,IAAI,iBAAiB;AAClD,IAAI,CAAC,QAAQ,IAAI,eAAe;AAC9B,MAAI,IAAI,KAAK,8DAA8D;AAC7E;AACA,MAAM,IAAI,SAAS,QAAQ,EAAE,QAAQ,aAAa,CAAC;AAGnD,IAAM,aAAa,QAAQ,IAAI,aAAa,KAAK;AACjD,IAAI,YAAY;AACd,MAAI,QAAQ,aAAa,OAAO,KAAK,UAAU;AAC7C,QAAI,CAAC,IAAI,IAAI,WAAW,OAAO,EAAG;AAClC,UAAM,WAAW,IAAI,QAAQ,aAAa;AAC1C,QAAI,aAAa,YAAY;AAC3B,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,OAAO,YAAY,CAAC;AAAA,IACpD;AAAA,EACF,CAAC;AACH;AAKA,MAAM,IAAI,SAAS,aAAa,EAAE,QAAQ,WAAW,CAAC;AACtD,MAAM,IAAI,SAAS,aAAa,EAAE,QAAQ,WAAW,CAAC;AACtD,MAAM,IAAI,SAAS,gBAAgB,EAAE,QAAQ,WAAW,CAAC;AACzD,MAAM,IAAI,SAAS,aAAa,EAAE,QAAQ,WAAW,CAAC;AACtD,MAAM,IAAI,SAAS,UAAU,EAAE,QAAQ,WAAW,CAAC;AAKnD,IAAI,KAGD,yBAAyB,OAAO,KAAK,UAAU;AAChD,MAAI;AACF,UAAM,EAAE,KAAK,IAAI,IAAI;AACrB,UAAM,EAAE,MAAM,IAAI,IAAI,QAAQ,CAAC;AAC/B,QAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,aAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,OAAO,iCAAiC,CAAC;AAAA,IACzE;AACA,UAAM,SAAS,MAAM,iBAAiB,IAAI;AAC1C,QAAI,CAAC,QAAQ,IAAK,OAAM,IAAI,MAAM,cAAc,IAAI,eAAe;AACnE,UAAM,MAAM,MAAM,OAAO,IAAI,KAAK;AAClC,WAAO,EAAE,OAAO,OAAO,QAAQ,WAAW,MAAM,OAAO,GAAG,EAAE;AAAA,EAC9D,SAAS,KAAU;AACjB,QAAI,IAAI,MAAM,GAAG;AACjB,WAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,OAAO,KAAK,WAAW,iBAAiB,CAAC;AAAA,EACzE;AACF,CAAC;AAKD,IAAI,QAAQ,IAAI,aAAa,cAAc;AAEzC,QAAM,QAAQA,OAAK,QAAQD,YAAW,YAAY;AAElD,QAAM,IAAI,SAAS,eAAe;AAAA,IAChC,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AAGD,MAAI,mBAAmB,CAAC,KAAK,UAAU;AACrC,UAAM,SAAS,IAAI,QAAQ,UAAU;AACrC,QAAI,IAAI,IAAI,WAAW,SAAS,OAAO,SAAS,WAAW,GAAG;AAC5D,aAAO,MAAM,SAAS,YAAY;AAAA,IACpC;AACA,WAAO,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,OAAO,YAAY,CAAC;AAAA,EACpD,CAAC;AACH;AAKA,IAAI,IAAI,WAAW,aAAa,EAAE,IAAI,MAAM,IAAI,KAAK,IAAI,EAAE,EAAE;AAC7D,IAAI,IAAI,YAAY,aAAa;AAAA,EAC/B,SAAS,QAAQ,IAAI,eAAe;AAAA,EACpC,MAAM,QAAQ;AAAA,EACd,KAAK,QAAQ,IAAI;AACnB,EAAE;AAKF,eAAe,CAAC,QAAQ,CAAC,EACtB,KAAK,MAAM,IAAI,IAAI,KAAK,mBAAmB,CAAC,EAC5C,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,EAAE,KAAK,EAAE,GAAG,uBAAuB,CAAC;AAKjE,IAAI,QAAQ,WAAW,YAAY;AACjC,MAAI,IAAI,KAAK,oCAA+B;AAC5C,MAAI,YAAY;AAClB,CAAC;AAED,IAAM,OAAO,OAAO,QAAQ,IAAI,QAAQ,QAAQ,IAAI,YAAY,IAAI;AACpE,IAAM,OAAO;AAEb,IAAI;AACF,QAAM,IAAI,OAAO,EAAE,MAAM,MAAM,MAAM,KAAK,CAAC;AAC3C,MAAI,IAAI,KAAK,wBAAiB,IAAI,SAAS,QAAQ,IAAI,QAAQ,GAAG;AACpE,SAAS,KAAK;AACZ,MAAI,IAAI,MAAM,EAAE,IAAI,GAAG,wBAAwB;AAC/C,UAAQ,KAAK,CAAC;AAChB;AAKA,WAAW,OAAO,CAAC,UAAU,SAAS,GAAY;AAChD,UAAQ,GAAG,KAAK,YAAY;AAC1B,QAAI,IAAI,KAAK,EAAE,IAAI,GAAG,kBAAkB;AACxC,QAAI;AACF,YAAM,IAAI,MAAM;AAChB,cAAQ,KAAK,CAAC;AAAA,IAChB,SAAS,GAAG;AACV,UAAI,IAAI,MAAM,EAAE,EAAE,GAAG,uBAAuB;AAC5C,cAAQ,KAAK,CAAC;AAAA,IAChB;AAAA,EACF,CAAC;AACH;","names":["path","McpToolset","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","path","fileURLToPath","McpToolset","__dirname","serverPath","fs","path","createTool","z","createTool","z","createTool","z","config","messageSchema","AgentBuilder","agent_exports","AgentBuilder","dotenv","init_agent","agent_exports","AgentBuilder","dotenv","init_agent","agent_exports","AgentBuilder","dotenv","init_agent","agent_exports","AgentBuilder","dotenv","init_agent","path","fileURLToPath","dotenv","Helena","Milo","Kai","Sophie","Luna","z","app","bcrypt","z","randomBytes","app","bcrypt","app","app","z","fs","path","config","fs","clamp","config","fs","path","config","config","z","app","dotenv","fileURLToPath","__dirname","path"]}