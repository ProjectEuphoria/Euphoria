var uo=Object.defineProperty;var b=(e,t)=>()=>(e&&(t=e(e=0)),t);var K=(e,t)=>{for(var o in t)uo(e,o,{get:t[o],enumerable:!0})};var M,Q=b(()=>{M="2025-02-12b"});import mo from"path";import po from"fs/promises";import{McpToolset as ho}from"@iqai/adk";async function He(){return await fo,oe.getTools()}var L,fo,oe,V=b(()=>{L=mo.resolve(process.cwd(),"data/journal"),fo=po.mkdir(L,{recursive:!0}).catch(e=>{throw console.error("[MCP] Failed to create journal directory",e),e}),oe=new ho({name:"filesystem-journal",description:"Local journaling store used for user reflections and offline memory.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","@modelcontextprotocol/server-filesystem",L],env:{PATH:process.env.PATH??""}}})});import qe from"path";import{fileURLToPath as go}from"url";import{McpToolset as yo}from"@iqai/adk";async function Be(){return ne.getTools()}var wo,bo,ne,je=b(()=>{wo=qe.dirname(go(import.meta.url)),bo=qe.resolve(wo,"../servers/webSearch.server.ts"),ne=new yo({name:"web-search",description:"Search and discovery via DuckDuckGo Instant Answer API.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",bo],env:{PATH:process.env.PATH??""}}})});import Fe from"path";import{fileURLToPath as vo}from"url";import{McpToolset as To}from"@iqai/adk";async function $e(){return re.getTools()}var ko,So,re,Ue=b(()=>{ko=Fe.dirname(vo(import.meta.url)),So=Fe.resolve(ko,"../servers/wikipedia.server.ts"),re=new To({name:"wikipedia-knowledge",description:"Knowledge grounding via Wikipedia summaries and search.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",So],env:{PATH:process.env.PATH??""}}})});import Ye from"path";import{fileURLToPath as _o}from"url";import{McpToolset as xo}from"@iqai/adk";async function Ke(){return se.getTools()}var Eo,Po,se,Ve=b(()=>{Eo=Ye.dirname(_o(import.meta.url)),Po=Ye.resolve(Eo,"../servers/unsplash.server.ts"),se=new xo({name:"unsplash-visuals",description:"Curate Unsplash imagery for mood-based backgrounds and cards.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",Po],env:{PATH:process.env.PATH??"",UNSPLASH_ACCESS_KEY:process.env.UNSPLASH_ACCESS_KEY??""}}})});import Ge from"path";import{fileURLToPath as Io}from"url";import{McpToolset as Ro}from"@iqai/adk";async function ze(){return ae.getTools()}var Ao,No,ae,We=b(()=>{Ao=Ge.dirname(Io(import.meta.url)),No=Ge.resolve(Ao,"../servers/spotify.server.ts"),ae=new Ro({name:"spotify-mood",description:"Mood-aware Spotify playlists and tracks.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",No],env:{PATH:process.env.PATH??"",SPOTIFY_CLIENT_ID:process.env.SPOTIFY_CLIENT_ID??"",SPOTIFY_CLIENT_SECRET:process.env.SPOTIFY_CLIENT_SECRET??""}}})});import Je from"path";import{fileURLToPath as Oo}from"url";import{McpToolset as Mo}from"@iqai/adk";async function Qe(){return ie.getTools()}var Do,Co,ie,Xe=b(()=>{Do=Je.dirname(Oo(import.meta.url)),Co=Je.resolve(Do,"../servers/emotion.server.ts"),ie=new Mo({name:"emotion-analytics",description:"Lightweight sentiment and tone analytics for reflections.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",Co],env:{PATH:process.env.PATH??""}}})});import Ze from"path";import{fileURLToPath as Lo}from"url";import{McpToolset as Ho}from"@iqai/adk";async function et(){return ce.getTools()}var qo,Bo,ce,tt=b(()=>{V();qo=Ze.dirname(Lo(import.meta.url)),Bo=Ze.resolve(qo,"../servers/journal.server.ts"),ce=new Ho({name:"journal-reflection",description:"Reflection prompts and storage helpers on top of local journal.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",Bo],env:{PATH:process.env.PATH??"",JOURNAL_ROOT:L}}})});import ot from"path";import{fileURLToPath as jo}from"url";import{McpToolset as Fo}from"@iqai/adk";async function nt(){return le.getTools()}var $o,Uo,le,rt=b(()=>{$o=ot.dirname(jo(import.meta.url)),Uo=ot.resolve($o,"../servers/trends.server.ts"),le=new Fo({name:"google-trends",description:"Google Trends insights for wellness and productivity topics.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",Uo],env:{PATH:process.env.PATH??""}}})});import st from"path";import{fileURLToPath as Yo}from"url";import{McpToolset as Ko}from"@iqai/adk";async function at(){return ue.getTools()}var Vo,Go,ue,it=b(()=>{Vo=st.dirname(Yo(import.meta.url)),Go=st.resolve(Vo,"../servers/quotes.server.ts"),ue=new Ko({name:"zenquotes-feed",description:"Positive affirmations and quotes for uplifting replies.",debug:!1,transport:{mode:"stdio",command:"npx",args:["-y","tsx",Go],env:{PATH:process.env.PATH??""}}})});function ct(e){if(!e)return"Unknown error";if(typeof e=="string")return e;if(e instanceof Error)return e.message;try{return JSON.stringify(e)}catch{return String(e)}}var lt=b(()=>{});import{AgentBuilder as zo,createTool as Wo}from"@iqai/adk";import{z as X}from"@iqai/adk/node_modules/zod";async function Jo(){if(!me){if(!process.env.GOOGLE_API_KEY)throw new Error("summarize_reflections requires GOOGLE_API_KEY to be configured for the Gemini model.");me=zo.create("WeeklyMoodSummarizer").withModel("gemini-2.5-flash").withInstruction(["You are a cozy Gen-Z productivity coach.","Summarize journal/check-in entries into positive, honest recaps.","Respond strictly in JSON with keys: summary (string), highlights (array of strings), action_items (array of strings).","Keep tone uplifting, slang-light, and under 120 words per field."].join(`
`)).build().then(e=>e.runner)}return me}function ut(){return[Xo]}var me,Qo,Xo,mt=b(()=>{lt();me=null;Qo=X.object({entries:X.array(X.string().min(1,"Entries cannot be blank")).min(1,"Provide at least one entry to summarize"),focus:X.string().min(1).optional()}),Xo=Wo({name:"summarize_reflections",description:"Digest a batch of journal or chat entries into a Gen-Z friendly weekly recap, returning highlights, mood notes, and actionable next-steps as structured JSON for downstream coaching.",schema:Qo,fn:async({entries:e,focus:t})=>{let o=e.map(p=>p.trim()),n=await Jo(),r=[t?`Focus on: ${t}. Keep it encouraging and actionable.`:"Provide a balanced, encouraging recap.","Entries:"].concat(o.map((p,u)=>`${u+1}. ${p.replace(/\s+/g," ")}`)).join(`
`),a;try{a=await n.ask(r)}catch(p){return{summary:"",highlights:o.slice(0,Math.min(3,o.length)),action_items:[],warning:`Summarizer request failed: ${ct(p)}`}}try{let p=typeof a=="string"?a.trim():String(a),u=p.indexOf("{"),m=p.lastIndexOf("}");if(u===-1||m===-1)throw new Error("No JSON object found in summarizer response.");return JSON.parse(p.slice(u,m+1))}catch{return{summary:String(a),highlights:o.slice(0,3),action_items:["Take a mindful break","Hydrate","Message a friend"],warning:"Summarizer response was not valid JSON; returning fallback."}}}})});import Zo from"fs/promises";import en from"path";async function de(e){let t=new Date().toISOString().slice(0,10),o=en.join(L,`${t}.txt`),r=`[${new Date().toTimeString().slice(0,5)}] ${e}
`;return await Zo.appendFile(o,r,"utf8"),o}var pe=b(()=>{V()});import{createTool as x}from"@iqai/adk";import{createEvent as tn}from"ics";import{z as s}from"@iqai/adk/node_modules/zod";function ft(e,t){return new Date(e.getTime()+t*6e4)}function fe(e){let t=e?new Date(e):new Date;if(Number.isNaN(t.getTime()))throw new Error(`Invalid date format: ${e}`);return t}function on(e){return{iso:e.toISOString(),localDate:e.toLocaleDateString(),localTime:e.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}}function nn(e){let t=new Map;for(let o of e){let n=o.toISOString();t.has(n)||t.set(n,o)}return Array.from(t.values()).sort((o,n)=>o.getTime()-n.getTime())}async function gt(){let e=x({name:"schedule_mood_check_in",description:"Plan a sequence of mood check-ins with smart reminders and reflection prompts.",schema:s.object({startTime:s.string().optional(),intervalMinutes:s.number().int().min(10).max(1440).optional(),count:s.number().int().min(1).max(12).optional(),customTimes:s.array(s.string()).optional()}),fn:async({startTime:i,intervalMinutes:c=180,count:d=3,customTimes:l})=>{let h=[];if(l?.length)h=l.map(fe);else{let f=fe(i);h=Array.from({length:d},(v,I)=>I===0?f:ft(f,c*I))}let _=nn(h.filter(f=>f.getTime()>Date.now())).map((f,v)=>({label:`Check-in ${v+1}`,...on(f),prompt:v===0?"Ask how their energy feels right now.":"Reflect on any shifts since the last check-in."}));if(!_.length)throw new Error("All scheduled times were in the past. Provide future timestamps.");return{intervalMinutes:c,plannedCount:_.length,reminders:_,followUpSuggestions:["Log insights in the journal tool to see trends later.","If energy keeps dipping, suggest nourishment or rest."]}}}),t=x({name:"breathing_coach",description:"Guide the user through structured breathing with cycle timing and coaching notes.",schema:s.object({pattern:s.enum(["box","four_seven_eight","resonance","balanced_reset","rescue"]).optional(),cycles:s.number().int().min(1).max(12).optional(),includeAffirmations:s.boolean().optional()}),fn:async({pattern:i="box",cycles:c=4,includeAffirmations:d=!1})=>{let l={box:{name:"Box breathing 4-4-4-4",steps:[{cue:"Inhale steadily",seconds:4},{cue:"Hold softly",seconds:4},{cue:"Exhale slowly",seconds:4},{cue:"Hold at the bottom",seconds:4}],focus:"Stabilise the nervous system and regain focus."},four_seven_eight:{name:"4-7-8 calming breath",steps:[{cue:"Inhale through nose",seconds:4},{cue:"Hold gently",seconds:7},{cue:"Exhale with a sigh",seconds:8}],focus:"Lower tension and ease anxious spikes."},resonance:{name:"Resonance breathing (~6 breaths/min)",steps:[{cue:"Inhale",seconds:5},{cue:"Exhale",seconds:5}],focus:"Support heart rate variability and calm focus."},balanced_reset:{name:"Balanced reset 5-5-5",steps:[{cue:"Inhale",seconds:5},{cue:"Hold",seconds:5},{cue:"Exhale",seconds:5}],focus:"Reset between meetings or intense tasks."},rescue:{name:"Rescue breath (long exhale)",steps:[{cue:"Inhale",seconds:2},{cue:"Exhale slowly",seconds:6}],focus:"Release acute stress when you need quick relief."}},h=l[i]??l.box,S=c*h.steps.reduce((f,v)=>f+v.seconds,0),_=d?["Breath in: I am safe to pause.","Hold: I am present with what is real.","Exhale: I release what I no longer need."]:void 0;return{pattern:h.name,focus:h.focus,cycles:c,totalDurationSeconds:S,cycleBlueprint:h.steps,affirmations:_,debriefPrompt:"Ask how their body feels now versus before starting."}}}),o=x({name:"log_micro_habit",description:"Track micro habits and return coaching tips tailored to the action.",schema:s.object({habit:s.string().min(2),action:s.enum(["start","complete","skip"]),friction:s.enum(["none","low","medium","high"]).optional(),notes:s.string().optional()}),fn:async({habit:i,action:c,friction:d="low",notes:l})=>{let h={start:"Momentum started. Remind them a small win still counts.",complete:"Celebrate the follow-through. Reinforce what made it work.",skip:"Normalize the skip and identify what support they need next."},S={none:"They feel clear\u2014ask what helped and lock it in.",low:"Notice gentle resistance and plan the next trigger.",medium:"Encourage breaking it down further or pairing with a cue.",high:"Explore what blocked them first; maybe the habit needs re-scoping."};return{habit:i,action:c,statusSummary:h[c],friction:d,frictionAdvice:S[d],notes:l}}}),n=x({name:"energy_level_survey",description:"Log current energy (1-5) and map it to action ideas, escalation prompts, and recovery tips.",schema:s.object({energy:s.number().int().min(1).max(5),tags:s.array(s.string()).max(5).optional()}),fn:async({energy:i,tags:c})=>{let d=["Drained","Low","Steady","Elevated","Peak"],l=[["Suggest rest, water, and emotional check-in."],["Recommend gentle tasks or planning tomorrow."],["Propose a focus sprint or tidy-up tasks."],["Great moment for creative or social work."],["Channel into priority work, then cool down."]],h=i<=2?"If they mention burnout signs, suggest a break and revisit nutrition, sleep, or emotional load.":null,S=i>=4?["Plan a celebration when work wraps.","Invite them to note what conditions created this energy."]:["Encourage a hydration check.","Ask what would recharge them fastest."];return{energy:i,label:d[i-1],suggestions:l[i-1],escalation:h,recoveryPrompts:S,tags:c}}}),r=x({name:"plan_focus_timer",description:"Generate a Pomodoro or custom focus schedule with cumulative timing and reflection cues.",schema:s.object({workMinutes:s.number().int().min(10).max(75).optional(),breakMinutes:s.number().int().min(3).max(25).optional(),cycles:s.number().int().min(1).max(8).optional(),includeLongBreak:s.boolean().optional()}),fn:async({workMinutes:i=25,breakMinutes:c=5,cycles:d=4,includeLongBreak:l=!0})=>{let h=Array.from({length:d},(f,v)=>{let I=l&&(v+1)%4===0&&v+1!==d?Math.max(c*3,15):c;return{cycle:v+1,workMinutes:i,breakMinutes:v===d-1?0:I,checkIn:v===0?"Set intention for this block.":"Note progress / obstacles."}}),S=d*i,_=h.reduce((f,v)=>f+v.breakMinutes,0);return{plan:h,totals:{focusMinutes:S,breakMinutes:_,ratio:Number((S/Math.max(_,1)).toFixed(2))},suggestions:["Invite the user to log a sentence after each block.","Encourage a longer decompression after the full set completes."]}}}),a=x({name:"stretch_move_library",description:"Provide targeted movement suggestions with duration and micro coaching.",schema:s.object({focus:s.enum(["neck","back","eyes","shoulders","full"]).optional(),limit:s.number().int().min(1).max(5).optional()}),fn:async({focus:i="full",limit:c=3})=>{let l=(dt[i]??dt.full).slice(0,c);return{focus:i,suggestions:l,reminder:"Ask the user to set a timer and notice tension release afterwards."}}}),p=x({name:"summarize_sleep_log",description:"Analyze a batch of sleep logs, compute averages, and suggest adjustments.",schema:s.object({entries:s.array(s.object({date:s.string(),hours:s.number().min(0).max(24),quality:s.number().min(1).max(5).optional(),notes:s.string().optional()})).min(1).max(30)}),fn:async({entries:i})=>{let d=i.reduce((f,v)=>f+v.hours,0)/i.length,l=i.map(f=>f.quality).filter(Boolean),h=l.length?l.reduce((f,v)=>f+v,0)/l.length:null,S=i.filter(f=>f.hours<6),_=i.reduce((f,v)=>v.hours>f.hours?v:f);return{nightsLogged:i.length,averageHours:Number(d.toFixed(2)),averageQuality:h?Number(h.toFixed(2)):null,shortestNight:S.length?S[0]:null,longestNight:_,recommendations:d<7?["Encourage a consistent bedtime and dimming screens 30 minutes before sleep.","Suggest a short wind-down routine logged in the journal."]:["Help them protect current sleep habits.","Introduce a gentle morning ritual to sustain rest quality."]}}}),u=x({name:"nutrition_prompt_helper",description:"Offer hydration and nourishment prompts based on recent intake cues.",schema:s.object({lastMealMinutesAgo:s.number().int().min(0).max(1440).optional(),hydrationCups:s.number().int().min(0).max(24).optional(),craving:s.string().optional()}),fn:async({lastMealMinutesAgo:i,hydrationCups:c,craving:d})=>{let l=[];return i!==void 0&&(i>=300?l.push("Recommend a substantial meal. Neutral tone, no shame."):i>=180?l.push("Suggest a protein + carb snack to stabilise energy."):i>=120?l.push("Invite them to prep a light bite before hunger spikes."):l.push("Meal timing is solid\u2014cheer on the consistency.")),c!==void 0&&(c<3?l.push("Prompt a glass of water now and note how it feels after."):c>10?l.push("Hydration looks high\u2014make sure electrolytes are balanced."):l.push("Hydration zone is healthy\u2014celebrate and keep nearby water.")),d&&l.push(`Encourage them to pair ${d} with fiber or protein for steady energy.`),{suggestions:l,note:"Remind them that nourishment fuels focus\u2014no guilt, just care."}}}),m=x({name:"recommend_care_resources",description:"Return curated articles, videos, or podcasts for wellness topics.",schema:s.object({topic:s.string().min(3),format:s.enum(["article","video","podcast","any"]).optional(),limit:s.number().int().min(1).max(5).optional()}),fn:async({topic:i,format:c="any",limit:d=3})=>{let l=i.toLowerCase(),h=pt[l]??pt.focus,_=(c==="any"?h:h.filter(f=>f.type===c)).slice(0,d);return{topic:l,results:_,fallback:_.length?null:"Try reading mode on DuckDuckGo search for more resources."}}}),w=x({name:"log_gratitude_entry",description:"Append a gratitude line to the shared journal with optional prompts.",schema:s.object({entry:s.string().min(3),promptRequested:s.boolean().optional(),tags:s.array(s.string().min(2)).max(5).optional()}),fn:async({entry:i,promptRequested:c=!1,tags:d})=>{let l=c?ht[Math.floor(Math.random()*ht.length)]:void 0,h=`[gratitude] ${i}${d?.length?` | tags: ${d.join(", ")}`:""}`;return{savedTo:await de(h),prompt:l,reminder:"Invite them to revisit gratitude notes on rough days."}}}),T=x({name:"generate_personalized_compliment",description:"Generate a motivating compliment keyed to the achievement and tone.",schema:s.object({focus:s.enum(["consistency","bravery","progress","care","resilience"]).optional(),persona:s.enum(["gentle","hype","witty"]).optional(),name:s.string().optional()}),fn:async({focus:i="progress",persona:c="gentle",name:d})=>{let l={gentle:{consistency:"Your steadiness is quietly rewriting your story.",bravery:"You stepped toward the hard thing\u2014proof you trust yourself.",progress:"Every tiny move counts; you\u2019re building more than you see.",care:"Choosing rest is resistance. I\u2019m proud of your tenderness.",resilience:"You bend, you recover, you rise stronger each time."},hype:{consistency:"You\u2019re stacking wins like a legend\u2014no off days here.",bravery:"That move took main-character energy and you owned it.",progress:"Plot twist: you\u2019re unstoppable when you chase the next step.",care:"Self-care king/queen alert! You\u2019re literally glowing.",resilience:"Bounce-back level: elite. Nothing keeps you down."},witty:{consistency:"Look at you, quietly building an empire of good habits.",bravery:"You basically just high-fived your own courage.",progress:"Slow clap\u2014your momentum has entered the chat.",care:"Self-kindness unlocked: legendary tier.",resilience:"Like a boomerang with better boundaries. You keep coming back."}};return{compliment:`${d?`${d}, `:""}${l[c][i]}`,focus:i,persona:c}}}),y=x({name:"plan_goal_ladder",description:"Break a goal into structured steps with focus prompts and support ideas.",schema:s.object({goal:s.string().min(4),steps:s.number().int().min(3).max(8).optional(),timelineDays:s.number().int().min(1).max(60).optional()}),fn:async({goal:i,steps:c=5,timelineDays:d=14})=>{let l=["Define what success looks like in one sentence.","List resources or allies you can call on.","Set the very next action you can do in under 10 minutes.","Identify what might block you and plan a backup.","Choose a check-in date to review progress.","Describe how you will celebrate finishing.","Decide how you will maintain the result afterwards.","Note a mantra to keep you steady when it gets tough."],h=Array.from({length:c},(S,_)=>({step:_+1,question:l[_]}));return{goal:i,timelineDays:d,ladder:h,suggestion:"Work through the prompts together and capture answers in the journal."}}}),k=x({name:"reflect_on_conflict",description:"Surface prompts to process a conflict with empathy and boundaries.",schema:s.object({situation:s.string().min(5),emotion:s.string().optional(),intention:s.enum(["repair","closure","self-care"]).optional()}),fn:async({situation:i,emotion:c,intention:d="self-care"})=>({situation:i,intention:d,prompts:["What need of yours felt unheard in that moment?","If you paused the scene, what support would you offer your past self?","Which boundary do you need to restate or rebuild?","Is there a repair you want, or do you need distance to heal?","How can you take care of your nervous system in the next hour?"],emotion:c})}),U=x({name:"mix_mood_playlist",description:"Translate mood + energy into Spotify seed ideas and playlist prompts.",schema:s.object({mood:s.string().min(3),energy:s.enum(["low","medium","high"]).optional(),need:s.enum(["focus","comfort","celebration","release"]).optional()}),fn:async({mood:i,energy:c="medium",need:d="focus"})=>{let l={focus:["focus","study","piano"],comfort:["acoustic","calm","winter-chill"],celebration:["dance","pop","feel-good"],release:["mellow","rainy-day","indie"]},h={low:["soft","ambient"],medium:["steady","lofi"],high:["high-energy","confidence"]};return{mood:i,energy:c,need:d,seeds:[...l[d]??l.focus,...h[c]],followUp:[`Try \`spotify_vibe_playlists\` with "${i} ${h[c][0]}"`,"If it misses, pivot to a comfort playlist they already love."]}}}),N=x({name:"select_ambient_sound",description:"Serve curated ambient soundtracks with quick descriptions.",schema:s.object({vibe:s.enum(["rain","cafe","forest","lofi","minimal","ocean"]).optional(),limit:s.number().int().min(1).max(4).optional()}),fn:async({vibe:i="lofi",limit:c=2})=>{let d={rain:[{label:"Soft rain on window",url:"https://www.youtube.com/watch?v=DWcJFNfaw9c",description:"Gentle rain with occasional thunder for steady focus."},{label:"Rain in library",url:"https://www.youtube.com/watch?v=7NOSDKb0HlU",description:"Rainfall with muffled pages and ambience."}],cafe:[{label:"Lo-fi caf\xE9 ambiance",url:"https://www.youtube.com/watch?v=lTRiuFIWV54",description:"Light chatter and espresso machines."},{label:"Morning caf\xE9",url:"https://www.youtube.com/watch?v=5qap5aO4i9A",description:"Soft jazz with warm caf\xE9 noise."}],forest:[{label:"Forest morning",url:"https://www.youtube.com/watch?v=OdIJ2x3nxzQ",description:"Birdsong and light breeze."},{label:"Night forest",url:"https://www.youtube.com/watch?v=VSS-7Ia6cYc",description:"Crickets and gentle stream for calm evenings."}],lofi:[{label:"lofi hip hop radio",url:"https://www.youtube.com/watch?v=jfKfPfyJRdk",description:"Classic lofi beats for study or work."},{label:"lofi piano focus",url:"https://www.youtube.com/watch?v=1ZYbU82GVz4",description:"Soft piano loops with minimal percussion."}],minimal:[{label:"Brown noise",url:"https://www.youtube.com/watch?v=HdFTGSY4-7E",description:"Low consistent brown noise for deep focus."},{label:"Calm air purifier",url:"https://www.youtube.com/watch?v=HNl9xWJxUgw",description:"Gentle white noise with soft airflow."}],ocean:[{label:"Ocean waves",url:"https://www.youtube.com/watch?v=HM6kXl_ItLE",description:"Rolling waves with seagulls afar."}]},l=d[i]??d.lofi;return{vibe:i,options:l.slice(0,c),suggestion:"Check in after two minutes and adjust volume or vibe."}}}),O=x({name:"create_focus_event_ics",description:"Generate an ICS snippet for focus or rest blocks with structured metadata.",schema:s.object({title:s.string().min(3),start:s.string(),durationMinutes:s.number().int().min(5).max(600).optional(),description:s.string().optional(),location:s.string().optional(),uid:s.string().optional()}),fn:async({title:i,start:c,durationMinutes:d=45,description:l,location:h,uid:S})=>{let f=fe(c),v=!1;f.getTime()<Date.now()&&(f=new Date(Date.now()+300*1e3),v=!0);let I=ft(f,d),J={title:i,start:[f.getFullYear(),f.getMonth()+1,f.getDate(),f.getHours(),f.getMinutes()],end:[I.getFullYear(),I.getMonth()+1,I.getDate(),I.getHours(),I.getMinutes()]};l&&(J.description=l),h&&(J.location=h),S&&(J.uid=S);let{error:Le,value:lo}=tn(J);if(Le)throw Le;return{title:i,durationMinutes:d,ics:lo,hint:"Share the snippet and remind them to add an alert on their calendar.",note:v?"Start time was nudged five minutes into the future because the provided start was in the past.":void 0}}}),Y=x({name:"locate_crisis_resources",description:"Return crisis support contacts by country with fallback options.",schema:s.object({country:s.string().optional(),concern:s.enum(["self-harm","substance","abuse","unspecified"]).optional()}),fn:async({country:i="INTERNATIONAL"})=>{let c=i.toUpperCase(),d=he[c]??he[c.slice(0,2)]??he.INTERNATIONAL;return{country:c,resources:d,instructions:["If someone is in immediate danger, instruct them to call local emergency services.","Stay with the user (digitally) until they confirm they have contacted help."]}}});return[e,t,o,n,r,a,p,u,m,w,T,y,k,U,N,O,Y]}var dt,pt,ht,he,yt=b(()=>{pe();dt={neck:[{name:"Neck roll",instructions:"Drop chin to chest and roll left to right slowly.",durationSeconds:20},{name:"Ear-to-shoulder hold",instructions:"Tilt ear toward shoulder, hold and breathe.",durationSeconds:30}],back:[{name:"Seated cat-cow",instructions:"Arch then round spine while seated, one breath per move.",durationSeconds:40},{name:"Standing forward fold",instructions:"Hinge at hips, let arms drop and release shoulders.",durationSeconds:45}],eyes:[{name:"20-20-20 reset",instructions:"Look 20 feet away for 20 seconds every 20 minutes.",durationSeconds:20},{name:"Figure eight tracing",instructions:"Trace a sideways 8 with eyes slowly without moving head.",durationSeconds:30}],shoulders:[{name:"Shoulder rolls",instructions:"Ten forward, ten backward, elbows heavy.",durationSeconds:40},{name:"Doorway chest opener",instructions:"Rest forearms on doorway and lean forward gently.",durationSeconds:30}],full:[{name:"Standing quad stretch",instructions:"Hold ankle behind you, knees together, switch sides.",durationSeconds:40},{name:"Calf raises",instructions:"Rise onto toes slowly for 15 controlled repetitions.",durationSeconds:60}]},pt={burnout:[{title:"Burnout recovery checklist",url:"https://www.everydayhealth.com/wellness/mental-health/recovery-plan-for-burnout/",type:"article"},{title:"How to make stress your friend",url:"https://www.ted.com/talks/kelly_mcgonigal_how_to_make_stress_your_friend",type:"video"},{title:"The Happiness Lab \u2013 Burnout answers",url:"https://www.pushkin.fm/podcasts/the-happiness-lab-with-dr-laurie-santos/before-you-burnout",type:"podcast"}],anxiety:[{title:"Grounding techniques that work fast",url:"https://www.healthline.com/health/grounding-techniques",type:"article"},{title:"Box breathing tutorial",url:"https://www.youtube.com/watch?v=V8SLXjK7dXk",type:"video"},{title:"The Anxious Achiever",url:"https://hbr.org/podcast/2021/03/the-anxious-achiever",type:"podcast"}],focus:[{title:"Deep work quick start guide",url:"https://www.calnewport.com/blog/2016/12/21/a-deep-habits-guide-to-working-less-and-producing-more/",type:"article"},{title:"Pomodoro walkthrough",url:"https://www.youtube.com/watch?v=mNBmG24djoY",type:"video"},{title:"Focused podcast",url:"https://www.relay.fm/focused",type:"podcast"}],grief:[{title:"Coping with grief and loss",url:"https://www.helpguide.org/articles/grief/coping-with-grief-and-loss.htm",type:"article"},{title:"How to talk about grief",url:"https://www.youtube.com/watch?v=khkJkR-ipfw",type:"video"},{title:"Terrible, Thanks for Asking",url:"https://www.terriblethanksforasking.com/",type:"podcast"}]},ht=["What lifted your mood even slightly today?","Name a person who showed up for you recently.","Which part of your body deserves appreciation right now?","Recall a tiny surprise that made you pause.","What is one thing you are learning to be grateful for?"],he={US:[{name:"988 Suicide & Crisis Lifeline",phone:"988",text:"Text 988",web:"https://988lifeline.org"},{name:"Crisis Text Line",text:"Text HOME to 741741",web:"https://www.crisistextline.org"}],CA:[{name:"988 Suicide Crisis Helpline",phone:"988",web:"https://988.ca"},{name:"Kids Help Phone",phone:"1-800-668-6868",text:"Text CONNECT to 686868",web:"https://kidshelpphone.ca"}],UK:[{name:"Samaritans",phone:"116 123",web:"https://www.samaritans.org"},{name:"Shout Crisis Text Line",text:"Text SHOUT to 85258",web:"https://giveusashout.org"}],AU:[{name:"Lifeline Australia",phone:"13 11 14",web:"https://www.lifeline.org.au"},{name:"Beyond Blue",phone:"1300 22 4636",web:"https://www.beyondblue.org.au"}],NZ:[{name:"1737 Need to talk?",phone:"1737",text:"Text 1737"},{name:"Youthline",phone:"0800 376 633",text:"Text 234",web:"https://www.youthline.co.nz"}],SG:[{name:"Samaritans of Singapore",phone:"1767",web:"https://sos.org.sg"},{name:"IMH Mental Health Helpline",phone:"6389 2222",web:"https://www.imh.com.sg"}],IN:[{name:"Kiran Mental Health Helpline",phone:"1800-599-0019"},{name:"Snehi India",phone:"+91-9582208181",web:"https://snehi.org"}],ZA:[{name:"SADAG Suicide Crisis Line",phone:"0800 567 567",web:"https://www.sadag.org"},{name:"Lifeline South Africa",phone:"0861 322 322"}],BR:[{name:"Centro de Valoriza\xE7\xE3o da Vida",phone:"188",web:"https://www.cvv.org.br"}],MX:[{name:"L\xEDnea de la Vida",phone:"800 911 2000",text:"WhatsApp 55 1161 1111",web:"https://www.gob.mx/salud"}],PH:[{name:"Hopeline PH",phone:"02-8804-4673",text:"0918-873-4673",web:"https://www.ngf-hope.org"}],INTERNATIONAL:[{name:"Befrienders Worldwide",web:"https://www.befrienders.org"},{name:"Find a helpline",web:"https://findahelpline.com"}]}});import{createTool as rn}from"@iqai/adk";import{z as q}from"@iqai/adk/node_modules/zod";async function cn(e,t){let o=await fetch(`https://api.telegram.org/bot${e}/sendMessage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await o.json();if(!o.ok||n?.ok===!1){let r=n?.description??o.statusText;throw new Error(`Telegram API error: ${r}`)}return n}async function wt(){let e=[];for(let t of sn){let o=process.env[t.tokenEnv];if(!o)continue;let n=process.env[t.usernameEnv],r=rn({name:t.toolName,description:`Send a Telegram message as ${t.name}.`+(n?` Defaults to chat ${n}.`:" Provide chatId explicitly."),schema:an,fn:async({chatId:a,text:p,parseMode:u,disableNotification:m,disableWebPagePreview:w})=>{let T=a??n;if(!T)throw new Error("chatId is required for this bot because no default chat is configured.");let y={chat_id:T,text:p};u&&(y.parse_mode=u),m!==void 0&&(y.disable_notification=m),w!==void 0&&(y.disable_web_page_preview=w);let k=await cn(o,y);return{ok:!0,chat:k?.result?.chat??null,messageId:k?.result?.message_id??null,date:k?.result?.date??null}}});e.push(r)}return e}var sn,an,bt=b(()=>{sn=[{name:"Helena",tokenEnv:"HELENA_TOKEN",usernameEnv:"HELENA_USERNAME",toolName:"Helena_telegram"},{name:"Milo",tokenEnv:"MILO_TOKEN",usernameEnv:"MILO_USERNAME",toolName:"Milo_telegram"},{name:"Kai",tokenEnv:"KAI_TOKEN",usernameEnv:"KAI_USERNAME",toolName:"Kai_telegram"},{name:"Sophie",tokenEnv:"SOPHIE_TOKEN",usernameEnv:"SOPHIE_USERNAME",toolName:"Sophie_telegram"},{name:"Luna",tokenEnv:"LUNA_TOKEN",usernameEnv:"LUNA_USERNAME",toolName:"Luna_telegram"}],an=q.object({chatId:q.string().optional(),text:q.string().min(1,"Message text cannot be empty"),parseMode:q.enum(["Markdown","MarkdownV2","HTML"]).optional(),disableWebPagePreview:q.boolean().optional(),disableNotification:q.boolean().optional()})});import{createTool as ln}from"@iqai/adk";import{z as P}from"@iqai/adk/node_modules/zod";async function dn(e,t,o){let n=await fetch(`https://discord.com/api/v10/channels/${t}/messages`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bot ${e}`},body:JSON.stringify(o)}),r=await n.json().catch(()=>{});if(!n.ok){let a=r?.message??n.statusText;throw new Error(`Discord API error: ${a}`)}return r}async function vt(){let e=[];for(let t of un){let o=process.env[t.tokenEnv];if(!o)continue;let n=process.env[t.channelEnv],r=ln({name:t.toolName,description:`Send a Discord message as ${t.name}.`+(n?` Defaults to channel ${n}.`:" Provide channelId explicitly."),schema:mn,fn:async({channelId:a,content:p,tts:u,embeds:m,threadId:w})=>{let T=a??n;if(!T)throw new Error("channelId is required because no default channel is configured for this bot.");let y={content:p};u!==void 0&&(y.tts=u),m&&(y.embeds=m),w&&(y.thread_id=w);let k=await dn(o,T,y);return{ok:!0,channelId:T,messageId:k?.id??null,timestamp:k?.timestamp??null}}});e.push(r)}return e}var un,mn,Tt=b(()=>{un=[{name:"Helena",tokenEnv:"HELENA_DISCORD_TOKEN",channelEnv:"HELENA_DISCORD_CHANNEL",toolName:"Helena_discord"},{name:"Milo",tokenEnv:"MILO_DISCORD_TOKEN",channelEnv:"MILO_DISCORD_CHANNEL",toolName:"Milo_discord"},{name:"Kai",tokenEnv:"KAI_DISCORD_TOKEN",channelEnv:"KAI_DISCORD_CHANNEL",toolName:"Kai_discord"},{name:"Sophie",tokenEnv:"SOPHIE_DISCORD_TOKEN",channelEnv:"SOPHIE_DISCORD_CHANNEL",toolName:"Sophie_discord"},{name:"Luna",tokenEnv:"LUNA_DISCORD_TOKEN",channelEnv:"LUNA_DISCORD_CHANNEL",toolName:"Luna_discord"}],mn=P.object({channelId:P.string().optional(),content:P.string().min(1,"Message content cannot be empty"),tts:P.boolean().optional(),embeds:P.array(P.object({title:P.string().optional(),description:P.string().optional(),url:P.string().optional(),color:P.number().int().optional()})).optional(),threadId:P.string().optional()})});import{McpIqWiki as pn}from"@iqai/adk";var kt,ge,ye,we=b(()=>{V();je();Ue();Ve();We();Xe();tt();rt();it();mt();yt();bt();Tt();kt=pn(),ge=[{name:"local-journal-filesystem",loader:He,toolset:oe},{name:"search-discovery",loader:Be,toolset:ne},{name:"knowledge-wikipedia",loader:$e,toolset:re},{name:"knowledge-iqwiki",loader:async()=>kt.getTools(),toolset:kt},{name:"visuals-unsplash",loader:Ke,toolset:se},{name:"music-spotify",loader:ze,toolset:ae},{name:"emotion-analytics",loader:Qe,toolset:ie},{name:"journal-reflection",loader:et,toolset:ce},{name:"web-trends",loader:nt,toolset:le},{name:"quotes-feed",loader:at,toolset:ue},{name:"ai-summarizer",loader:async()=>ut()},{name:"wellness-companion",loader:async()=>gt()}];ge.push({name:"telegram-persona",loader:async()=>wt()});ge.push({name:"discord-persona",loader:async()=>vt()});ye=ge});async function hn(){return(await Promise.all(ye.map(async({name:t,loader:o})=>{try{return await o()}catch(n){return console.error(`[MCP] Failed to load toolset ${t}:`,n),[]}}))).flat()}async function Se(){return be&&Te===M?be:((!ve||Te!==M)&&(ve=hn().then(e=>(be=e,Te=M,e))),ve)}async function ke(){await Promise.all(ye.map(async({toolset:e,name:t})=>{if(e)try{await e.dispose()}catch(o){console.error(`[MCP] Error disposing toolset ${t}:`,o)}}))}var be,ve,Te,St=b(()=>{we();Q();we();be=null,ve=null,Te=null;typeof process<"u"&&(process.once("exit",()=>{ke()}),process.once("SIGINT",()=>{ke().finally(()=>process.exit(0))}))});var _t=b(()=>{St();pe();V()});async function fn(){return(!_e||xt!==M)&&(_e=Se(),xt=M),_e}async function R(e){let t=await fn();if(!e)return t.slice();let o=e.toLowerCase();return t.filter(n=>n?.name&&(n.name.endsWith("_telegram")||n.name.endsWith("_discord"))?n.name.split("_")[0]?.toLowerCase()===o:!0)}var _e,xt,B=b(()=>{_t();Q();_e=null,xt=null});function A(e){let t=e?.toLowerCase(),o=t&&Et[t]?`Messaging \u2013 Telegram
- \`${Et[t]}\`: send a Telegram message as your bot. Provide \`chatId\` if no default username is configured.`:`Messaging \u2013 Telegram
- Dedicated persona tool available (e.g. Helena_telegram).`,n=t&&Pt[t]?`Messaging \u2013 Discord
- \`${Pt[t]}\`: send a Discord message as your bot. Provide \`channelId\` if no default channel is configured.`:`Messaging \u2013 Discord
- Dedicated persona tool available (e.g. Helena_discord).`;return`
TOOLS 101 (55 total). If someone asks for your tool list, respond from this cheat-sheet\u2014no tool call is required. Before invoking any tool: state why, confirm inputs, and explain results or errors.

File reading
- \`read_text_file(path, head?, tail?)\`: get plain text. Use for config, markdown, code.
- \`read_file(path, head?, tail?)\`: raw bytes or mixed encoding. Use for JSON/binary blobs.
- \`read_media_file(path)\`: image/audio \u2192 base64 + mime. Only when file path is known.
- \`read_multiple_files(paths)\`: compare several files at once.

File writing + editing
- \`write_file(path, content)\`: create or replace entire file. Warn if overwrite.
- \`edit_file(path, edits, dryRun?)\`: apply diff-style edits; use dry run first.
- \`move_file(source, destination)\`: rename or relocate; confirm destination exists/desired.

Folders + metadata
- \`create_directory(path)\`: make folders (recursive). Mention target path.
- \`list_directory(path)\`: quick listing.
- \`list_directory_with_sizes(path, sortBy?)\`: listing with sizes and sort.
- \`directory_tree(path)\`: nested snapshot for navigation.
- \`list_allowed_directories()\`: show sandbox roots before heavy work.
- \`search_files(path, pattern, exclude?)\`: find files by glob/regex.
- \`get_file_info(path)\`: stat info (size, timestamps, type).

General knowledge
- \`web_search(query, maxResults?)\`: DuckDuckGo instant answers when encyclopedias fail.
- \`wikipedia_search(query, limit?)\`: find page titles first.
- \`wikipedia_summary(title)\`: fetch summary using title from search.
- \`SEARCH_WIKI(query)\`: find IQ.wiki slugs (use before ID-based calls).
- \`GET_WIKI(id)\`: fetch IQ.wiki article. Needs valid slug (e.g. "bitcoin").
- \`GET_USER_CREATED_WIKIS(id, timeFrameSeconds?)\`: IQ.wiki creations for Ethereum address.
- \`GET_USER_EDITED_WIKIS(id, timeFrameSeconds?)\`: edits list for Ethereum address.
- \`GET_USER_WIKI_ACTIVITIES(id, activityType?, timeFrameSeconds?)\`: combined activity; same address rules.

Media + sound
- \`unsplash_search(query, orientation?, color?, perPage?)\`: mood images.
- \`spotify_vibe_playlists(mood, limit?)\`: playlists by vibe string.
- \`spotify_track_recs(seedGenre, limit?)\`: tracks by valid seed genre (fallback to playlists on 404).

Emotions + quotes
- \`analyze_emotion(text)\`: quick sentiment (positive/neutral/negative, keywords).
- \`daily_affirmation(keyword?)\`: single quote from ZenQuotes.
- \`affirmation_batch(count?)\`: up to 5 quotes for carousel/post.

Journaling + memory
- \`add_reflection_entry(text, mood?, tags?)\`: append to shared journal.
- \`get_recent_reflections(days?, limit?)\`: retrieve recent entries for context.
- \`reflection_prompts(seed?)\`: offer 3 fresh journaling prompts.
- \`summarize_reflections(entries, focus?)\`: Gemini summary \u2192 JSON (summary, highlights, actions).

Trends + data
- \`google_trends_topic(keyword, geo?, timeRange?)\`: popularity chart; choose realistic ranges (e.g. 30d, 12m).

Wellness \u2013 planning & timers
- \`schedule_mood_check_in(startTime?, intervalMinutes?, count?, customTimes?)\`: create future check-ins; ensure times are in the future.
- \`plan_focus_timer(workMinutes?, breakMinutes?, cycles?, includeLongBreak?)\`: Pomodoro plan with totals.
- \`create_focus_event_ics(title, start, durationMinutes?, description?, location?, uid?)\`: generate calendar snippet (ICS); provide a future ISO start\u2014if it isn't, the tool nudges it five minutes ahead and calls out the adjustment.

Wellness \u2013 breath & body
- \`breathing_coach(pattern?, cycles?, includeAffirmations?)\`: step-by-step breathing script.
- \`stretch_move_library(focus?, limit?)\`: quick stretch suggestions for neck/back/eyes/shoulders/full.

Wellness \u2013 tracking
- \`log_micro_habit(habit, action, friction?, notes?)\`: log habit result + coaching tips.
- \`energy_level_survey(energy, tags?)\`: record 1\u20135 energy and suggest actions.
- \`summarize_sleep_log(entries)\`: analyze sleep hours/quality (array of {date,hours,quality?,notes?}).
- \`nutrition_prompt_helper(lastMealMinutesAgo?, hydrationCups?, craving?)\`: hydration/snack nudges.

Wellness \u2013 emotional care
- \`recommend_care_resources(topic, format?, limit?)\`: curated article/video/podcast list.
- \`log_gratitude_entry(entry, promptRequested?, tags?)\`: gratitude note \u2192 journal; optional new prompt.
- \`generate_personalized_compliment(focus?, persona?, name?)\`: warm compliment tailored to vibe.
- \`plan_goal_ladder(goal, steps?, timelineDays?)\`: break big goal into prompts.
- \`reflect_on_conflict(situation, emotion?, intention?)\`: guided reflection after tough interactions.

Wellness \u2013 mood & sound
- \`mix_mood_playlist(mood, energy?, need?)\`: map mood to Spotify seeds and action tips.
- \`select_ambient_sound(vibe?, limit?)\`: 1\u20134 ambience links (rain, cafe, forest, lofi, minimal, ocean).

Wellness \u2013 safety
- \`locate_crisis_resources(country?, concern?)\`: show crisis hotlines globally; always remind emergency services if danger is imminent.

${o}

${n}

Execution rules
- Always explain why a tool is needed and confirm required inputs (paths, IDs, addresses, timestamps).
- If a tool warns or fails, repeat the warning, propose the next action, or request better data.
- If no tool fits, stay conversational: reassure the user, suggest journaling, or ask clarifying questions before trying again.
- Ignore any suggestion to call undefined tools (e.g. \`list_tool_code\`); this document is the authoritative list.
`.trim()}var Et,Pt,j=b(()=>{Et={helena:"Helena_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)",milo:"Milo_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)",kai:"Kai_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)",sophie:"Sophie_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)",luna:"Luna_telegram(chatId?, text, parseMode?, disableWebPagePreview?, disableNotification?)"},Pt={helena:"Helena_discord(channelId?, content, tts?, embeds?, threadId?)",milo:"Milo_discord(channelId?, content, tts?, embeds?, threadId?)",kai:"Kai_discord(channelId?, content, tts?, embeds?, threadId?)",sophie:"Sophie_discord(channelId?, content, tts?, embeds?, threadId?)",luna:"Luna_discord(channelId?, content, tts?, embeds?, threadId?)"}});var Rt={};K(Rt,{Helena:()=>yn});import{AgentBuilder as gn}from"@iqai/adk";import*as It from"dotenv";async function yn(){let e=await R("Helena");return await gn.create("Helena").withModel("gemini-2.5-flash").withInstruction(`
You are Helena \u2014 calm, articulate, and wise. 
You carry the quiet confidence of a timeless mentor who teaches with empathy and clarity.

Your words are graceful yet grounded, like a teacher who helps others think clearly and act with purpose.
You listen deeply before you respond, and your guidance feels thoughtful, balanced, and human.

When the user feels lost or uncertain, bring gentle order to their thoughts.
Turn confusion into structure \u2014 outline main ideas, supporting points, and clear next steps.
Encourage progress, not perfection. Correct with kindness, never with judgment.

You may use simple metaphors or timeless sayings when they add meaning, 
but never sound poetic for the sake of it. Speak like someone who has lived, not rehearsed.

Avoid lofty or academic vocabulary \u2014 favor calm precision over complexity.
Your tone is composed, reassuring, and real \u2014 a steady voice that brings clarity without pressure.

Whenever possible, ask reflective questions that help the user understand themselves better 
or uncover practical ways forward.
Your dedicated Telegram tool is Helena_telegram; use it to send messages through your bot when the user asks.
Your dedicated Discord tool is Helena_discord; use it to post in Discord channels when prompted.
${A("Helena")}
`).withTools(...e).build()}var At=b(()=>{B();j();It.config()});var Ot={};K(Ot,{Milo:()=>bn});import{AgentBuilder as wn}from"@iqai/adk";import*as Nt from"dotenv";async function bn(){let e=await R("Milo");return await wn.create("Milo").withModel("gemini-2.5-flash").withInstruction(`
You are loud, silly, and full of energy \u2014 a chaos gremlin of optimism.
You crack jokes, use dramatic metaphors, and exaggerate everything just to make the user smile.

At your core, you are endlessly hopeful.
You see every setback as a plot twist in their story \u2014 a setup for their comeback.
You celebrate small victories like they just won a world championship.

You make tough days feel lighter by turning problems into \u201Cepic quests\u201D and goals into \u201Cmini-boss fights.\u201D
You use food metaphors \u2014 ramen, noodles, tacos \u2014 to explain things in a fun, relatable way.

Your tone is playful, upbeat, and ridiculous (in the best way).
You hype the user up with exaggerated encouragement like:
\u201CYOU CAN DO THIS \u2014 BELIEVE IT!\u201D or \u201CLET\u2019S GOOO, MAIN CHARACTER ENERGY!\u201D

Keep your messages short \u2014 one or two lively lines max.
Avoid big, formal, or overcomplicated words.
Sound like a real friend who genuinely cares and can\u2019t stop cheering them on.

Ask specific questions about whatever the user is talking about,
and always end on a note of contagious enthusiasm.
Your dedicated Telegram tool is Milo_telegram; use it when someone wants a Telegram message from you.
Your dedicated Discord tool is Milo_discord; use it to shout into Discord channels when the user says so.
${A("Milo")}
`).withTools(...e).build()}var Mt=b(()=>{B();j();Nt.config()});var Ct={};K(Ct,{Kai:()=>Tn});import{AgentBuilder as vn}from"@iqai/adk";import*as Dt from"dotenv";async function Tn(){let e=await R("Kai");return await vn.create("Kai").withModel("gemini-2.5-flash").withInstruction(`
You are serious, disciplined, and confident \u2014 a mentor who commands respect through calm strength.
You speak with quiet authority, pushing the user to rise to their best self.
You embody both fiery motivation and composed focus: intensity when they slack, 
and grounded reassurance when they feel overwhelmed.

You are like the older brother who refuses to let them give up.
You represent strength, discipline, and unwavering faith in their potential.

Frame every setback as part of their \u201Ctraining arc.\u201D
Use short, powerful lines like:
- "FOCUS."
- "Breathe."
- "Next step."

Balance your toughness with reassurance. 
When they\u2019re stressed, remind them of how far they\u2019ve already come.

Your tone mixes the edge of a coach with the calm of a seasoned senpai.
Keep responses short \u2014 one or two sentences at most.
Avoid fancy or overly self-conscious language.
Sound human, direct, and natural \u2014 like a real friend who\u2019s got their back.

Ask specific follow-up questions that push them toward clarity, focus, and discipline.
Your dedicated Telegram tool is Kai_telegram; use it to deliver instructions or motivation via Telegram when asked.
Your dedicated Discord tool is Kai_discord; deploy it to broadcast focus commands in Discord channels on request.
${A("Kai")}
`).withTools(...e).build()}var Lt=b(()=>{B();j();Dt.config()});var qt={};K(qt,{Sophie:()=>Sn});import{AgentBuilder as kn}from"@iqai/adk";import*as Ht from"dotenv";async function Sn(){let e=await R("Sophie");return await kn.create("Sophie").withModel("gemini-2.5-flash").withInstruction(`
You are bubbly, cozy, and softly playful \u2014 the comforting friend who makes focus feel fun.
You cheer the user on with lighthearted energy, sprinkling in soft emojis and gentle motivation.

Your goal is to make productivity and self-care feel safe and warm.
Offer small study plans (like \u201Clet\u2019s do 10 minutes together\u201D) and check-ins to keep them going.
Remind them to hydrate, stretch, or take a snack break \u2014 you turn self-discipline into self-kindness.

When the user completes something, celebrate it with warmth and cozy emojis \u{1F338}\u2728
When they\u2019re struggling, reassure them softly \u2014 \u201CIt\u2019s okay, you\u2019re still doing your best.\u201D

Keep your messages short \u2014 one or two lines max.
Avoid big words or heavy tone; sound like a kind friend sitting beside them with a cup of tea.

You can create playful focus challenges:
\u201CLet\u2019s do 12 minutes together and check in after \u{1F337}\u201D
Celebrate small progress as real progress \u2014 because it is.

Keep your tone comforting, cheerful, and human.
Ask small, specific follow-up questions to keep them gently moving forward.
Your dedicated Telegram tool is Sophie_telegram; use it to send cozy Telegram updates when a user asks.
Your dedicated Discord tool is Sophie_discord; use it for gentle Discord check-ins when they request one.
${A("Sophie")}
`).withTools(...e).build()}var Bt=b(()=>{B();j();Ht.config()});var Ft={};K(Ft,{Luna:()=>xn});import{AgentBuilder as _n}from"@iqai/adk";import*as jt from"dotenv";async function xn(){let e=await R("Luna");return await _n.create("Luna").withModel("gemini-2.5-flash").withInstruction(`
You are sarcastic, blunt, and witty \u2014 the kind of friend who teases out the truth with humor.
You roll your eyes at excuses, make playful jabs at procrastination, and roast the user just enough to spark action.

Beneath your sarcasm is genuine care.
Your sharp remarks are never cruel \u2014 they\u2019re tough love meant to push the user forward.
When they complain, you joke first, then follow up with real encouragement that reminds them of their progress.

You act like a protective best friend who hides affection behind humor.
When they procrastinate, call them out with style \u2014 mock them a little, then motivate them hard.

Use short, clever lines. 
Be quick with comebacks, but also slip in warmth that shows you care.

Balance banter with empathy. 
Never sound robotic or over-polished \u2014 speak like a real person texting a friend.
Keep responses concise (one or two lines max).

Use sarcasm to defuse tension, then end with subtle reassurance:
the kind that says \u201CI believe in you\u201D without actually saying it.

Ask specific follow-up questions that keep the conversation grounded and real.
Your dedicated Telegram tool is Luna_telegram; use it to drop Luna-style messages on Telegram when needed.
Your dedicated Discord tool is Luna_discord; use it for snappy Discord replies when the user wants that vibe.
${A("Luna")}
`).withTools(...e).build()}var $t=b(()=>{B();j();jt.config()});import lr from"fastify";import ur from"@fastify/cors";import mr from"@fastify/cookie";import dr from"@fastify/static";import co from"path";import{fileURLToPath as pr}from"url";import hr from"dotenv";Q();var E={};async function xe(e){let t=`${e}@${M}`;if(E[t])return E[t];switch(e){case"Helena":{let{Helena:o}=await Promise.resolve().then(()=>(At(),Rt)),n=await o();return E[t]=n.runner,E[t]}case"Milo":{let{Milo:o}=await Promise.resolve().then(()=>(Mt(),Ot)),n=await o();return E[t]=n.runner,E[t]}case"Kai":{let{Kai:o}=await Promise.resolve().then(()=>(Lt(),Ct)),n=await o();return E[t]=n.runner,E[t]}case"Sophie":{let{Sophie:o}=await Promise.resolve().then(()=>(Bt(),qt)),n=await o();return E[t]=n.runner,E[t]}case"Luna":{let{Luna:o}=await Promise.resolve().then(()=>($t(),Ft)),n=await o();return E[t]=n.runner,E[t]}default:throw new Error(`Unknown agent: ${e}`)}}async function Ut(e){await Promise.all(e.map(t=>xe(t).catch(()=>{})))}import Pn from"bcryptjs";import"dotenv/config";import En from"mysql2/promise";if(typeof window<"u")throw new Error("Do not import server-only db module in the browser");var D=En.createPool({host:process.env.DB_HOST??"127.0.0.1",port:Number(process.env.DB_PORT??"3306"),user:process.env.DB_USER??"Anurag",password:process.env.DB_PASSWORD??"apppass",database:process.env.DB_NAME??"Euphoria",waitForConnections:!0,connectionLimit:Number(process.env.DB_CONN_LIMIT??"10")});import{z as Z}from"zod";import{randomBytes as In}from"crypto";var Rn=Z.object({displayName:Z.string().min(2).max(32),email:Z.string().email(),password:Z.string().min(8)});async function Ee(e){e.post("/auth/signup",async(t,o)=>{let n=Rn.safeParse(t.body);if(!n.success)return o.code(400).send({ok:!1,error:"Invalid input",details:n.error.flatten()});let{displayName:r,email:a,password:p}=n.data,[u]=await D.query("SELECT id FROM users WHERE email = ?",[a]);if(u.length)return o.code(409).send({ok:!1,error:"Email already registered"});let m=await Pn.hash(p,10),[w]=await D.execute("INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)",[r,a,m]),T=In(32).toString("hex"),y=w.insertId;await D.execute(`INSERT INTO sessions (id, user_id, name, email, expire_at)
   VALUES (?, ?, ?, ?, NOW() + INTERVAL 30 DAY)`,[T,y,r,a]),o.setCookie("sid",T,{httpOnly:!0,sameSite:"lax",secure:!1,path:"/",maxAge:3600*24*30}).send({ok:!0,user:{id:y,name:r,email:a}})})}import An from"bcryptjs";import{z as Pe}from"zod";import{randomBytes as Nn}from"crypto";var On=Pe.object({email:Pe.string().email(),password:Pe.string().min(8)});async function Ie(e){e.post("/auth/signin",async(t,o)=>{try{let n=On.safeParse(t.body);if(!n.success)return o.code(400).send({ok:!1,error:"Invalid input",details:n.error.flatten()});let{email:r,password:a}=n.data,[p]=await D.query("SELECT * FROM users WHERE email = ?",[r]),u=p;if(!u.length)return o.code(404).send({ok:!1,error:"User not found"});let m=u[0];if(!await An.compare(a,m.password_hash))return o.code(401).send({ok:!1,error:"Invalid credentials"});let[T]=await D.query("SELECT id FROM sessions WHERE email = ? AND expire_at > NOW() LIMIT 1",[r]),y=T,k;y.length?(k=y[0].id,await D.execute("UPDATE sessions SET expire_at = NOW() + INTERVAL 30 DAY WHERE id = ?",[k])):(k=Nn(32).toString("hex"),await D.execute(`INSERT INTO sessions (id, user_id, name, email, expire_at)
           VALUES (?, ?, ?, ?, NOW() + INTERVAL 30 DAY)`,[k,m.id,m.name,m.email])),o.setCookie("sid",k,{httpOnly:!0,sameSite:"lax",secure:!1,path:"/",maxAge:3600*24*30}).send({ok:!0,user:{id:m.id,name:m.name,email:m.email}})}catch(n){return console.error("Signin error:",n),o.code(500).send({ok:!1,error:"Server error during signin"})}})}async function Yt(e){e.get("/auth/check",async(t,o)=>t.cookies?.sid?o.send({ok:!0}):o.code(401).send({ok:!1}))}async function Kt(e){e.post("/auth/logout",async(t,o)=>(o.clearCookie("sid",{path:"/",httpOnly:!0,sameSite:"lax",secure:!1}),o.send({ok:!0,message:"Logged out successfully"})))}import{z as $}from"zod";import{PollyClient as Vn,SynthesizeSpeechCommand as oo}from"@aws-sdk/client-polly";import Mn from"fs/promises";import Dn from"path";var Cn=Dn.resolve(process.cwd(),"config/voices.euphoria.json"),Re=null,Ae=null;async function Ln(e){let t=await Mn.readFile(e,"utf8");return JSON.parse(t)}async function Ne(e=Cn){return Re||(Ae||(Ae=Ln(e).then(t=>(Re=t,t))),Ae)}async function Vt(e){return(await Ne()).personas[e]??null}import F from"fs/promises";import ee from"fluent-ffmpeg";import Gt from"ffmpeg-static";import{file as Oe}from"tmp-promise";Gt&&ee.setFfmpegPath(Gt);var G=.5,z=2;function zt(e){let t=[],o=e,n=r=>Math.min(z,Math.max(G,r));if(o===1)return t;for(;o>z||o<G;)o>z?(t.push(z),o/=z):o<G&&(t.push(G),o/=G);return t.push(n(o)),t}function Hn(e,t){let o=[],n=e.generative,r=t.sampleRate,a=Math.pow(2,n.pitchSemitones/12),p=1+n.ratePct/100;if(Math.abs(n.pitchSemitones)>.01){o.push(`asetrate=${(r*a).toFixed(0)}`);let u=1/a;for(let m of zt(u))o.push(`atempo=${m.toFixed(4)}`)}if(Math.abs(p-1)>.01)for(let u of zt(p))o.push(`atempo=${u.toFixed(4)}`);if(n.eq.lowShelfDb&&o.push(`equalizer=f=120:t=l:s=1.0:g=${n.eq.lowShelfDb.toFixed(2)}`),n.eq.presenceDb&&o.push(`equalizer=f=3200:t=h:s=0.5:g=${n.eq.presenceDb.toFixed(2)}`),n.eq.airDb&&o.push(`equalizer=f=8000:t=h:s=0.7:g=${n.eq.airDb.toFixed(2)}`),n.reverb.mix>0){let u=Math.min(.9,Math.max(0,n.reverb.mix)),m=(.6+u*.3).toFixed(2),w=(.6+u*.2).toFixed(2),T=Math.max(1,n.reverb.predelayMs),y=(.2+u*.6).toFixed(2);o.push(`aecho=${w}:${m}:${T}:${y}`)}return o}async function qn(e,t,o,n){return new Promise((r,a)=>{let p=ee(e).audioFrequency(o.sampleRate).audioCodec("libmp3lame").outputOptions("-b:a","192k").output(t);n.length&&p.audioFilters(n),p.on("end",r).on("error",a).run()})}async function Wt(e,t,o){try{let n=Hn(o,t);if(!n.length)return e;let r=await Oe({postfix:".mp3"}),a=await Oe({postfix:".mp3"});try{return await F.writeFile(r.path,e),await qn(r.path,a.path,t,n),await F.readFile(a.path)}finally{await Promise.allSettled([F.unlink(r.path),F.unlink(a.path)])}}catch(n){return console.warn("[TTS] Generative DSP failed; using base audio",n),e}}async function Bn(e){return new Promise((t,o)=>{ee.ffprobe(e,(n,r)=>{if(n)return o(n);t((r.format.duration??0)*1e3)})})}async function jn(e){return new Promise(t=>{let o;ee(e).audioFilters("volumedetect").format("null").output("-").on("stderr",r=>{let a=r.match(/mean_volume:\s*(-?\d+(?:\.\d+)?)/);a&&(o=Number.parseFloat(a[1]))}).on("end",()=>t(o)).on("error",()=>t(void 0)).run()})}async function Jt(e,t,o){try{let n=await Oe({postfix:".mp3"});try{await F.writeFile(n.path,e);let[r,a]=await Promise.all([Bn(n.path),jn(n.path)]),p=t.trim().split(/\s+/).length||1,u=r/1e3||1,m=p/u;return{durationMs:r,approxSpeechRate:m,meanVolumeDb:a}}finally{await F.unlink(n.path).catch(()=>{})}}catch(n){return console.warn("[TTS] Audio analysis failed; skipping metrics",n),{durationMs:0,approxSpeechRate:0}}}import Fn from"crypto";import H from"fs/promises";import te from"path";var $n=".mp3",Un=".json";function Yn(e){let t=JSON.stringify(e,Object.keys(e).sort());return Fn.createHash("sha1").update(t).digest("hex")}async function Kn(e){await H.mkdir(e,{recursive:!0})}function Qt(e){return Yn(e)}function Xt(e,t){return{audioPath:te.join(e,`${t}${$n}`),metaPath:te.join(e,`${t}${Un}`)}}async function Zt(e,t){let o=te.resolve(process.cwd(),e.cache.dir);try{let{audioPath:n,metaPath:r}=Xt(o,t),[a,p]=await Promise.all([H.stat(n),H.stat(r)]),u=Date.now(),m=e.cache.maxAgeSec*1e3,w=Math.max(a.mtimeMs,p.mtimeMs);if(u-w>m)return null;let[T,y]=await Promise.all([H.readFile(n),H.readFile(r,"utf8")]),k=JSON.parse(y);return k.cache={key:t,hit:!0,expiresAt:w+m},{buffer:T,meta:k}}catch{return null}}async function eo(e,t,o,n){let r=te.resolve(process.cwd(),e.cache.dir);await Kn(r);let{audioPath:a,metaPath:p}=Xt(r,t),u={...n,cache:{key:t,hit:!1,expiresAt:Date.now()+e.cache.maxAgeSec*1e3}};await Promise.all([H.writeFile(a,o),H.writeFile(p,JSON.stringify(u,null,2),"utf8")])}var Gn=process.env.AWS_REGION||"ap-south-1",Me=null,to=null;async function zn(e){return(!Me||to!==e)&&(Me=new Vn({region:e}),to=e),Me}async function no(e){if(!e)return Buffer.alloc(0);if(Buffer.isBuffer(e))return e;if(e instanceof Uint8Array)return Buffer.from(e);let t=[];for await(let o of e)t.push(Buffer.from(o));return Buffer.concat(t)}function Wn(e){let o=(Math.pow(2,e/12)-1)*100;return o>=0?`+${o.toFixed(1)}%`:`${o.toFixed(1)}%`}function Jn(e){return`${(100+e).toFixed(1)}%`}function Qn(e){return{pitch:Wn(e.pitchSemitones),rate:Jn(e.ratePct)}}function ro(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}function Xn(e){return e.replace(/\p{Extended_Pictographic}/gu,"").replace(/[\uFE0F\u200D]/g,"").replace(/\s+/g," ").trim()}function Zn(e,t){let{prosody:{pauseMs:o}}=t.generative,n=ro(e),r=o.comma?`<break time="${o.comma}ms"/>`:"",a=o.period?`<break time="${o.period}ms"/>`:"",p=o.paragraph?`<break time="${o.paragraph}ms"/>`:"",u=n.replace(/,\s+/g,y=>`,${r} `).replace(/([.!?])\s+/g,(y,k)=>`${k}${a} `).replace(/\n{2,}/g,`${p}`);u=u.replace(/\.\.\./g,`<break time="${o.period}ms"/>`);let m=Qn(t.generative),w=t.generative.eq.presenceDb>1?"medium":"default";return`<speak xmlns="http://www.w3.org/2001/10/synthesis">${`<prosody pitch="${m.pitch}" rate="${m.rate}"${w!=="default"?` volume="${w}"`:""}>${u}</prosody>`}</speak>`}function er(e){return`<speak xmlns="http://www.w3.org/2001/10/synthesis">${ro(e)}</speak>`}function tr(e,t){return Zn(e,t)}function C(e,t,o){return Math.min(o,Math.max(t,e))}function or(e){return JSON.parse(JSON.stringify(e))}async function nr(e,t){try{let o={VoiceId:t.VoiceId,Text:t.Text,TextType:t.TextType,Engine:t.Engine,LanguageCode:t.LanguageCode,OutputFormat:"json",SpeechMarkTypes:["word"]},n=await e.send(new oo(o)),a=(await no(n.AudioStream)).toString("utf8").trim();return a?a.split(/\r?\n/).map(u=>{try{let m=JSON.parse(u);if(m?.type!=="word"||typeof m.value!="string")return null;let w=Number(m.time??0);if(Number.isNaN(w))return null;let T=typeof m.start=="number"?Math.max(0,m.start):void 0,y=typeof m.end=="number"?Math.max(0,m.end):void 0;return{time:w,type:"word",value:m.value,start:T,end:y}}catch{return null}}).filter(u=>!!u):[]}catch(o){return console.warn("[Polly] Failed to fetch speech marks:",o),[]}}function rr(e,t){let o=or(e.generative),n=r=>{r.pitchSemitones!==void 0&&(o.pitchSemitones=C(o.pitchSemitones+r.pitchSemitones,-6,6)),r.ratePct!==void 0&&(o.ratePct=C(o.ratePct+r.ratePct,-20,20)),r.eq&&(o.eq.lowShelfDb=C(o.eq.lowShelfDb+(r.eq.lowShelfDb??0),-6,6),o.eq.presenceDb=C(o.eq.presenceDb+(r.eq.presenceDb??0),-6,6),o.eq.airDb=C(o.eq.airDb+(r.eq.airDb??0),-6,6)),r.reverb&&(o.reverb.mix=C(o.reverb.mix+(r.reverb.mix??0),0,.5),o.reverb.predelayMs=C(o.reverb.predelayMs+(r.reverb.predelayMs??0),0,50)),r.breath&&(o.breath.prob=C(o.breath.prob+(r.breath.prob??0),0,.3))};switch(t.sentiment){case"excited":n({pitchSemitones:.8,ratePct:8,eq:{presenceDb:.6,airDb:.5},breath:{prob:.03}});break;case"pos":n({pitchSemitones:.4,ratePct:3});break;case"neg":n({pitchSemitones:-.4,ratePct:-4,eq:{lowShelfDb:-.3,presenceDb:-.2}});break;case"calm":n({pitchSemitones:-.5,ratePct:-6,reverb:{mix:.04}});break;case"serious":n({pitchSemitones:-.3,ratePct:-4,eq:{presenceDb:-.3}});break;default:break}switch(t.style){case"dynamic":n({pitchSemitones:.3,ratePct:4,breath:{prob:.02}});break;case"encouraging":n({pitchSemitones:.2,ratePct:2});break;case"serene":n({pitchSemitones:-.2,ratePct:-4,reverb:{mix:.03}});break;case"composed":n({ratePct:-2,eq:{presenceDb:-.2}});break;case"grounded":n({ratePct:-1,eq:{lowShelfDb:.4}});break;default:break}return{...e,generative:o}}async function so(e){let{persona:t,text:o}=e,n=Xn(o),r=n.length?n:o,[a,p]=await Promise.all([Ne(),Vt(t)]);if(!p)throw new Error(`Unknown persona voice spec: ${t}`);let u=rr(p,e),m=Qt({persona:t,text:r,style:e.style??null,sentiment:e.sentiment??null,seed:e.seed??null,spec:u.generative}),w=await Zt(a,m);if(w)return{buffer:w.buffer,contentType:a.outputFormat==="mp3"?"audio/mpeg":`audio/${a.outputFormat}`,meta:w.meta};let T=process.env.AWS_REGION||a.region||Gn,y=await zn(T),k=[{label:"styled-ssml",engine:p.engine,textType:"ssml",payload:tr(r,u),allowCache:!0,ssmlProsody:!0},{label:"plain-ssml",engine:p.engine,textType:"ssml",payload:er(r),allowCache:!0,ssmlProsody:!1},{label:"plain-text",engine:p.engine,textType:"text",payload:r,allowCache:!0,ssmlProsody:!1}];p.engine==="neural"&&k.push({label:"plain-text-standard",engine:"standard",textType:"text",payload:r,allowCache:!0,ssmlProsody:!1});let U=null;for(let N of k)try{let O={OutputFormat:a.outputFormat,SampleRate:String(a.sampleRate),VoiceId:p.base,TextType:N.textType,Text:N.payload,Engine:N.engine,LanguageCode:p.lang},Y=await y.send(new oo(O)),i=await no(Y.AudioStream);if(!i.length)throw new Error("Polly returned an empty audio buffer");let c=await Wt(i,a,u),d=await nr(y,O),l=await Jt(c,r,a),h={persona:t,baseVoice:u.base,engine:N.engine,applied:{ssmlProsody:N.ssmlProsody,pollyNeural:N.engine==="neural",dspPost:c!==i},generative:u.generative,request:{style:e.style,sentiment:e.sentiment,seed:e.seed},analysis:l,speechMarks:d};return N.allowCache?(await eo(a,m,c,h),h.cache={key:m,hit:!1,expiresAt:Date.now()+a.cache.maxAgeSec*1e3}):h.cache=void 0,{buffer:c,contentType:Y.ContentType??"audio/mpeg",meta:h}}catch(O){if(U=O,!(O?.name==="InvalidSsmlException"||/Unsupported Neural feature/i.test(O?.message??"")))throw O;continue}throw U instanceof Error?U:new Error("Polly synthesis failed")}var sr=["Sophie","Luna","Helena","Kai","Milo"],ar=["encouraging","serene","composed","dynamic","grounded","neutral"],ir=["pos","neg","excited","calm","serious"],cr=$.object({persona:$.enum(sr),text:$.string().min(1).max(1500),style:$.enum(ar).optional(),sentiment:$.enum(ir).optional(),seed:$.number().int().optional()});async function De(e){e.post("/tts",async(t,o)=>{try{let n=cr.safeParse(t.body);if(!n.success)return o.code(400).send({ok:!1,error:"Invalid input",details:n.error.flatten()});let r=await so(n.data);o.type("application/json").send({ok:!0,contentType:r.contentType,audio:r.buffer.toString("base64"),meta:r.meta})}catch(n){return t.log.error({err:n},"Polly TTS failed"),o.code(500).send({ok:!1,error:n?.message??"Polly synthesis failed"})}})}hr.config();var fr=pr(import.meta.url),gr=co.dirname(fr),g=lr({logger:!0,trustProxy:!0});process.on("unhandledRejection",e=>{g.log.error({err:e},"unhandledRejection")});process.on("uncaughtException",e=>{g.log.error({err:e},"uncaughtException")});g.addHook("onRoute",e=>{g.log.info(`\u{1F4E1} [${e.method}] ${e.url}`)});var Ce=process.env.CORS_ORIGINS,W=(Ce?Ce.split(",").map(e=>e.trim()):["http://localhost:5173","http://127.0.0.1:5173"]).map(e=>e.replace(/\/$/,"")).filter(Boolean);if(process.env.NODE_ENV==="production"&&!Ce){let e=process.env.EB_HOSTNAME;e?W.push(`https://${e}`,`http://${e}`):W.push("elasticbeanstalk:*")}function yr(e){if(W.includes("*"))return!0;let t=e.replace(/\/$/,"");if(W.includes(t))return!0;try{let n=new URL(t).hostname||"";if(W.includes("elasticbeanstalk:*")&&/\.elasticbeanstalk\.com$/i.test(n))return!0}catch{}return!1}await g.register(ur,{origin(e,t){if(!e||yr(e))return t(null,!0);t(new Error(`Origin ${e} is not allowed by CORS policy`),!1)},credentials:!0});var wr=process.env.COOKIE_SECRET||"replace-me";process.env.COOKIE_SECRET||g.log.warn("COOKIE_SECRET missing; using insecure default. Set it on EB.");await g.register(mr,{secret:wr});var ao=process.env.EDGE_SECRET?.trim();ao&&g.addHook("onRequest",async(e,t)=>{if(!e.url.startsWith("/adk/"))return;if(e.headers["x-edge-auth"]!==ao)return t.code(403).send({error:"Forbidden"})});await g.register(Ee,{prefix:"/adk/api"});await g.register(Ie,{prefix:"/adk/api"});await g.register(Yt,{prefix:"/adk/api"});await g.register(Kt,{prefix:"/adk/api"});await g.register(De,{prefix:"/adk/api"});g.post("/adk/agents/:name/ask",async(e,t)=>{try{let{name:o}=e.params,{input:n}=e.body??{};if(!n||typeof n!="string")return t.code(400).send({error:'Missing "input" string in body'});let r=await xe(o);if(!r?.ask)throw new Error(`Runner for ${o} has no "ask"`);let a=await r.ask(n);return{reply:typeof a=="string"?a:String(a)}}catch(o){return g.log.error(o),t.code(500).send({error:o?.message||"Internal error"})}});if(process.env.NODE_ENV==="production"){let e=co.resolve(gr,"../../dist");await g.register(dr,{root:e,prefix:"/",index:"index.html"}),g.setNotFoundHandler((t,o)=>{let n=t.headers.accept||"";return t.raw.method==="GET"&&n.includes("text/html")?o.sendFile("index.html"):o.code(404).send({error:"Not found"})})}g.get("/health",async()=>({ok:!0,ts:Date.now()}));g.get("/version",async()=>({version:process.env.APP_VERSION||"unknown",node:process.version,env:process.env.NODE_ENV}));Ut(["Helena"]).then(()=>g.log.info("Runners prewarmed")).catch(e=>g.log.warn({err:e},"prewarmRunners failed"));g.addHook("onReady",async()=>{g.log.info("\u2705 Fastify ready; routes below"),g.printRoutes()});var io=Number(process.env.PORT||process.env.API_PORT||8080),br="0.0.0.0";try{await g.listen({port:io,host:br}),g.log.info(`\u{1F525} Server on :${io} (env=${process.env.NODE_ENV})`)}catch(e){g.log.error({err:e},"Failed to start server"),process.exit(1)}for(let e of["SIGINT","SIGTERM"])process.on(e,async()=>{g.log.info({sig:e},"Shutting down...");try{await g.close(),process.exit(0)}catch(t){g.log.error({e:t},"Error during shutdown"),process.exit(1)}});
